[10/26 08:17:08][INFO] run.py:  92: Train with configs:
[10/26 08:17:08][INFO] run.py:  93: 
{ AUGMENTATION      }-> False
{ BATCH_SIZE        }-> 2
{ DATA_JSON         }-> data.json
{ DATA_SEPARATOR    }-> ,
{ DECAY             }-> 0.005
{ DEVICES           }-> [0]
{ EPOCHS            }-> 100
{ FLOW              }-> DeepFlow
{ GPU               }-> 0
{ LABEL_DICT        }-> label_dict.json
{ LOAD              }-> False
{ LR                }-> 0.001
{ MODE              }-> train
{ MODEL_NAME        }-> twin
{ MODEL_TYPE        }-> twin
{ MOMENTUM          }-> 0.5
{ NESTEROV          }-> True
{ NORM              }-> normal
{ NUM_CLASSES       }-> 20
{ NUM_WORKERS       }-> 8
{ N_GPU             }-> 1
{ OUTPUT_DIR        }-> .
{ OUTPUT_FILE       }-> ./pred.txt
{ PATH_DATA         }-> data
{ PATH_MODEL        }-> ./twin
{ PATH_PROCESSED_DATA }-> data_processed
{ SEED              }-> 31
{ SIZE_DATA         }-> [100 120 120]
{ VERSION           }-> 31

[10/26 08:17:27][INFO] run.py:  92: Train with configs:
[10/26 08:17:27][INFO] run.py:  93: 
{ AUGMENTATION      }-> False
{ BATCH_SIZE        }-> 2
{ DATA_JSON         }-> data.json
{ DATA_SEPARATOR    }-> ,
{ DECAY             }-> 0.005
{ DEVICES           }-> [0]
{ EPOCHS            }-> 100
{ FLOW              }-> DeepFlow
{ GPU               }-> 0
{ LABEL_DICT        }-> label_dict.json
{ LOAD              }-> False
{ LR                }-> 0.001
{ MODE              }-> train
{ MODEL_NAME        }-> twin
{ MODEL_TYPE        }-> twin
{ MOMENTUM          }-> 0.5
{ NESTEROV          }-> True
{ NORM              }-> normal
{ NUM_CLASSES       }-> 20
{ NUM_WORKERS       }-> 8
{ N_GPU             }-> 1
{ OUTPUT_DIR        }-> .
{ OUTPUT_FILE       }-> ./pred.txt
{ PATH_DATA         }-> data
{ PATH_MODEL        }-> ./twin
{ PATH_PROCESSED_DATA }-> data_processed
{ SEED              }-> 31
{ SIZE_DATA         }-> [100 120 120]
{ VERSION           }-> 31

[10/26 08:17:48][INFO] train_test.py:  62: Training: [Epoch    1] loss: 2.2644 accuracy: 0.8000 lr: 0.001000
[10/26 08:17:53][INFO] train_test.py:  94: Evaluation: [Epoch    1] loss: 2.4782 accuracy: 0.6000
[10/26 08:18:03][INFO] train_test.py:  62: Training: [Epoch    2] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:18:06][INFO] train_test.py:  94: Evaluation: [Epoch    2] loss: 2.4782 accuracy: 0.6000
[10/26 08:18:10][INFO] train_test.py:  62: Training: [Epoch    3] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:18:10][INFO] train_test.py:  94: Evaluation: [Epoch    3] loss: 2.4782 accuracy: 0.6000
[10/26 08:18:14][INFO] train_test.py:  62: Training: [Epoch    4] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:18:15][INFO] train_test.py:  94: Evaluation: [Epoch    4] loss: 2.4782 accuracy: 0.6000
[10/26 08:18:19][INFO] train_test.py:  62: Training: [Epoch    5] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:18:20][INFO] train_test.py:  94: Evaluation: [Epoch    5] loss: 2.4782 accuracy: 0.6000
[10/26 08:18:24][INFO] train_test.py:  62: Training: [Epoch    6] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:18:24][INFO] train_test.py:  94: Evaluation: [Epoch    6] loss: 2.4782 accuracy: 0.6000
[10/26 08:18:28][INFO] train_test.py:  62: Training: [Epoch    7] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:18:29][INFO] train_test.py:  94: Evaluation: [Epoch    7] loss: 2.4782 accuracy: 0.6000
[10/26 08:18:33][INFO] train_test.py:  62: Training: [Epoch    8] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:18:34][INFO] train_test.py:  94: Evaluation: [Epoch    8] loss: 2.4782 accuracy: 0.6000
[10/26 08:18:38][INFO] train_test.py:  62: Training: [Epoch    9] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:18:39][INFO] train_test.py:  94: Evaluation: [Epoch    9] loss: 2.4782 accuracy: 0.6000
[10/26 08:18:43][INFO] train_test.py:  62: Training: [Epoch   10] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:18:44][INFO] train_test.py:  94: Evaluation: [Epoch   10] loss: 2.4782 accuracy: 0.6000
[10/26 08:18:47][INFO] train_test.py:  62: Training: [Epoch   11] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:18:48][INFO] train_test.py:  94: Evaluation: [Epoch   11] loss: 2.4782 accuracy: 0.6000
[10/26 08:18:52][INFO] train_test.py:  62: Training: [Epoch   12] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:18:53][INFO] train_test.py:  94: Evaluation: [Epoch   12] loss: 2.4782 accuracy: 0.6000
[10/26 08:18:57][INFO] train_test.py:  62: Training: [Epoch   13] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:18:58][INFO] train_test.py:  94: Evaluation: [Epoch   13] loss: 2.4782 accuracy: 0.6000
[10/26 08:19:02][INFO] train_test.py:  62: Training: [Epoch   14] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:19:02][INFO] train_test.py:  94: Evaluation: [Epoch   14] loss: 2.4782 accuracy: 0.6000
[10/26 08:19:06][INFO] train_test.py:  62: Training: [Epoch   15] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:19:07][INFO] train_test.py:  94: Evaluation: [Epoch   15] loss: 2.4782 accuracy: 0.6000
[10/26 08:19:11][INFO] train_test.py:  62: Training: [Epoch   16] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:19:12][INFO] train_test.py:  94: Evaluation: [Epoch   16] loss: 2.4782 accuracy: 0.6000
[10/26 08:19:16][INFO] train_test.py:  62: Training: [Epoch   17] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:19:17][INFO] train_test.py:  94: Evaluation: [Epoch   17] loss: 2.4782 accuracy: 0.6000
[10/26 08:19:20][INFO] train_test.py:  62: Training: [Epoch   18] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:19:21][INFO] train_test.py:  94: Evaluation: [Epoch   18] loss: 2.4782 accuracy: 0.6000
[10/26 08:19:25][INFO] train_test.py:  62: Training: [Epoch   19] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:19:26][INFO] train_test.py:  94: Evaluation: [Epoch   19] loss: 2.4782 accuracy: 0.6000
[10/26 08:19:30][INFO] train_test.py:  62: Training: [Epoch   20] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:19:31][INFO] train_test.py:  94: Evaluation: [Epoch   20] loss: 2.4782 accuracy: 0.6000
[10/26 08:19:35][INFO] train_test.py:  62: Training: [Epoch   21] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:19:36][INFO] train_test.py:  94: Evaluation: [Epoch   21] loss: 2.4782 accuracy: 0.6000
[10/26 08:19:40][INFO] train_test.py:  62: Training: [Epoch   22] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:19:40][INFO] train_test.py:  94: Evaluation: [Epoch   22] loss: 2.4782 accuracy: 0.6000
[10/26 08:19:44][INFO] train_test.py:  62: Training: [Epoch   23] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:19:45][INFO] train_test.py:  94: Evaluation: [Epoch   23] loss: 2.4782 accuracy: 0.6000
[10/26 08:19:49][INFO] train_test.py:  62: Training: [Epoch   24] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:19:50][INFO] train_test.py:  94: Evaluation: [Epoch   24] loss: 2.4782 accuracy: 0.6000
[10/26 08:19:54][INFO] train_test.py:  62: Training: [Epoch   25] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:19:55][INFO] train_test.py:  94: Evaluation: [Epoch   25] loss: 2.4782 accuracy: 0.6000
[10/26 08:19:58][INFO] train_test.py:  62: Training: [Epoch   26] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:19:59][INFO] train_test.py:  94: Evaluation: [Epoch   26] loss: 2.4782 accuracy: 0.6000
[10/26 08:20:03][INFO] train_test.py:  62: Training: [Epoch   27] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:20:04][INFO] train_test.py:  94: Evaluation: [Epoch   27] loss: 2.4782 accuracy: 0.6000
[10/26 08:23:08][INFO] run.py:  92: Train with configs:
[10/26 08:23:08][INFO] run.py:  93: 
{ AUGMENTATION      }-> False
{ BATCH_SIZE        }-> 2
{ DATA_JSON         }-> data.json
{ DATA_SEPARATOR    }-> ,
{ DECAY             }-> 0.005
{ DEVICES           }-> [0]
{ EPOCHS            }-> 100
{ FLOW              }-> DeepFlow
{ GPU               }-> 0
{ LABEL_DICT        }-> label_dict.json
{ LOAD              }-> False
{ LR                }-> 0.001
{ MODE              }-> train
{ MODEL_NAME        }-> twin
{ MODEL_TYPE        }-> twin
{ MOMENTUM          }-> 0.5
{ NESTEROV          }-> True
{ NORM              }-> normal
{ NUM_CLASSES       }-> 20
{ NUM_WORKERS       }-> 8
{ N_GPU             }-> 1
{ OUTPUT_DIR        }-> .
{ OUTPUT_FILE       }-> ./pred.txt
{ PATH_DATA         }-> data
{ PATH_MODEL        }-> ./twin
{ PATH_PROCESSED_DATA }-> data_processed
{ SEED              }-> 31
{ SIZE_DATA         }-> [100 120 120]
{ VERSION           }-> 31

[10/26 08:23:16][INFO] train_test.py:  62: Training: [Epoch    1] loss: 2.2644 accuracy: 0.8000 lr: 0.001000
[10/26 08:23:18][INFO] train_test.py:  94: Evaluation: [Epoch    1] loss: 2.4782 accuracy: 0.6000
[10/26 08:23:37][INFO] train_test.py:  62: Training: [Epoch    2] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:23:38][INFO] train_test.py:  94: Evaluation: [Epoch    2] loss: 2.4782 accuracy: 0.6000
[10/26 08:23:42][INFO] train_test.py:  62: Training: [Epoch    3] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:23:43][INFO] train_test.py:  94: Evaluation: [Epoch    3] loss: 2.4782 accuracy: 0.6000
[10/26 08:23:47][INFO] train_test.py:  62: Training: [Epoch    4] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:23:48][INFO] train_test.py:  94: Evaluation: [Epoch    4] loss: 2.4782 accuracy: 0.6000
[10/26 08:23:52][INFO] train_test.py:  62: Training: [Epoch    5] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:23:53][INFO] train_test.py:  94: Evaluation: [Epoch    5] loss: 2.4782 accuracy: 0.6000
[10/26 08:23:57][INFO] train_test.py:  62: Training: [Epoch    6] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:23:58][INFO] train_test.py:  94: Evaluation: [Epoch    6] loss: 2.4782 accuracy: 0.6000
[10/26 08:24:02][INFO] train_test.py:  62: Training: [Epoch    7] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:24:03][INFO] train_test.py:  94: Evaluation: [Epoch    7] loss: 2.4782 accuracy: 0.6000
[10/26 08:24:07][INFO] train_test.py:  62: Training: [Epoch    8] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:24:09][INFO] train_test.py:  94: Evaluation: [Epoch    8] loss: 2.4782 accuracy: 0.6000
[10/26 08:24:13][INFO] train_test.py:  62: Training: [Epoch    9] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:24:14][INFO] train_test.py:  94: Evaluation: [Epoch    9] loss: 2.4782 accuracy: 0.6000
[10/26 08:24:18][INFO] train_test.py:  62: Training: [Epoch   10] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:24:19][INFO] train_test.py:  94: Evaluation: [Epoch   10] loss: 2.4782 accuracy: 0.6000
[10/26 08:24:23][INFO] train_test.py:  62: Training: [Epoch   11] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:24:24][INFO] train_test.py:  94: Evaluation: [Epoch   11] loss: 2.4782 accuracy: 0.6000
[10/26 08:24:28][INFO] train_test.py:  62: Training: [Epoch   12] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:24:29][INFO] train_test.py:  94: Evaluation: [Epoch   12] loss: 2.4782 accuracy: 0.6000
[10/26 08:24:33][INFO] train_test.py:  62: Training: [Epoch   13] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:24:34][INFO] train_test.py:  94: Evaluation: [Epoch   13] loss: 2.4782 accuracy: 0.6000
[10/26 08:24:38][INFO] train_test.py:  62: Training: [Epoch   14] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:24:39][INFO] train_test.py:  94: Evaluation: [Epoch   14] loss: 2.4782 accuracy: 0.6000
[10/26 08:24:43][INFO] train_test.py:  62: Training: [Epoch   15] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:24:44][INFO] train_test.py:  94: Evaluation: [Epoch   15] loss: 2.4782 accuracy: 0.6000
[10/26 08:24:48][INFO] train_test.py:  62: Training: [Epoch   16] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:24:49][INFO] train_test.py:  94: Evaluation: [Epoch   16] loss: 2.4782 accuracy: 0.6000
[10/26 08:24:54][INFO] train_test.py:  62: Training: [Epoch   17] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:24:55][INFO] train_test.py:  94: Evaluation: [Epoch   17] loss: 2.4782 accuracy: 0.6000
[10/26 08:24:59][INFO] train_test.py:  62: Training: [Epoch   18] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:25:00][INFO] train_test.py:  94: Evaluation: [Epoch   18] loss: 2.4782 accuracy: 0.6000
[10/26 08:25:04][INFO] train_test.py:  62: Training: [Epoch   19] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:25:05][INFO] train_test.py:  94: Evaluation: [Epoch   19] loss: 2.4782 accuracy: 0.6000
[10/26 08:25:09][INFO] train_test.py:  62: Training: [Epoch   20] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:25:10][INFO] train_test.py:  94: Evaluation: [Epoch   20] loss: 2.4782 accuracy: 0.6000
[10/26 08:25:14][INFO] train_test.py:  62: Training: [Epoch   21] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:25:15][INFO] train_test.py:  94: Evaluation: [Epoch   21] loss: 2.4782 accuracy: 0.6000
[10/26 08:25:19][INFO] train_test.py:  62: Training: [Epoch   22] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:25:20][INFO] train_test.py:  94: Evaluation: [Epoch   22] loss: 2.4782 accuracy: 0.6000
[10/26 08:25:24][INFO] train_test.py:  62: Training: [Epoch   23] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:25:25][INFO] train_test.py:  94: Evaluation: [Epoch   23] loss: 2.4782 accuracy: 0.6000
[10/26 08:25:29][INFO] train_test.py:  62: Training: [Epoch   24] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:25:30][INFO] train_test.py:  94: Evaluation: [Epoch   24] loss: 2.4782 accuracy: 0.6000
[10/26 08:25:35][INFO] train_test.py:  62: Training: [Epoch   25] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:25:36][INFO] train_test.py:  94: Evaluation: [Epoch   25] loss: 2.4782 accuracy: 0.6000
[10/26 08:25:40][INFO] train_test.py:  62: Training: [Epoch   26] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:25:41][INFO] train_test.py:  94: Evaluation: [Epoch   26] loss: 2.4782 accuracy: 0.6000
[10/26 08:25:45][INFO] train_test.py:  62: Training: [Epoch   27] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:25:46][INFO] train_test.py:  94: Evaluation: [Epoch   27] loss: 2.4782 accuracy: 0.6000
[10/26 08:25:50][INFO] train_test.py:  62: Training: [Epoch   28] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:25:51][INFO] train_test.py:  94: Evaluation: [Epoch   28] loss: 2.4782 accuracy: 0.6000
[10/26 08:25:55][INFO] train_test.py:  62: Training: [Epoch   29] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:25:56][INFO] train_test.py:  94: Evaluation: [Epoch   29] loss: 2.4782 accuracy: 0.6000
[10/26 08:26:00][INFO] train_test.py:  62: Training: [Epoch   30] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:26:01][INFO] train_test.py:  94: Evaluation: [Epoch   30] loss: 2.4782 accuracy: 0.6000
[10/26 08:26:05][INFO] train_test.py:  62: Training: [Epoch   31] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:26:06][INFO] train_test.py:  94: Evaluation: [Epoch   31] loss: 2.4782 accuracy: 0.6000
[10/26 08:26:10][INFO] train_test.py:  62: Training: [Epoch   32] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:26:11][INFO] train_test.py:  94: Evaluation: [Epoch   32] loss: 2.4782 accuracy: 0.6000
[10/26 08:26:15][INFO] train_test.py:  62: Training: [Epoch   33] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:26:17][INFO] train_test.py:  94: Evaluation: [Epoch   33] loss: 2.4782 accuracy: 0.6000
[10/26 08:26:21][INFO] train_test.py:  62: Training: [Epoch   34] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:26:22][INFO] train_test.py:  94: Evaluation: [Epoch   34] loss: 2.4782 accuracy: 0.6000
[10/26 08:26:26][INFO] train_test.py:  62: Training: [Epoch   35] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:26:27][INFO] train_test.py:  94: Evaluation: [Epoch   35] loss: 2.4782 accuracy: 0.6000
[10/26 08:26:31][INFO] train_test.py:  62: Training: [Epoch   36] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:26:32][INFO] train_test.py:  94: Evaluation: [Epoch   36] loss: 2.4782 accuracy: 0.6000
[10/26 08:26:36][INFO] train_test.py:  62: Training: [Epoch   37] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:26:37][INFO] train_test.py:  94: Evaluation: [Epoch   37] loss: 2.4782 accuracy: 0.6000
[10/26 08:26:41][INFO] train_test.py:  62: Training: [Epoch   38] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:26:42][INFO] train_test.py:  94: Evaluation: [Epoch   38] loss: 2.4782 accuracy: 0.6000
[10/26 08:26:46][INFO] train_test.py:  62: Training: [Epoch   39] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:26:47][INFO] train_test.py:  94: Evaluation: [Epoch   39] loss: 2.4782 accuracy: 0.6000
[10/26 08:26:51][INFO] train_test.py:  62: Training: [Epoch   40] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:26:53][INFO] train_test.py:  94: Evaluation: [Epoch   40] loss: 2.4782 accuracy: 0.6000
[10/26 08:26:57][INFO] train_test.py:  62: Training: [Epoch   41] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:26:58][INFO] train_test.py:  94: Evaluation: [Epoch   41] loss: 2.4782 accuracy: 0.6000
[10/26 08:27:02][INFO] train_test.py:  62: Training: [Epoch   42] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:27:03][INFO] train_test.py:  94: Evaluation: [Epoch   42] loss: 2.4782 accuracy: 0.6000
[10/26 08:27:07][INFO] train_test.py:  62: Training: [Epoch   43] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:27:08][INFO] train_test.py:  94: Evaluation: [Epoch   43] loss: 2.4782 accuracy: 0.6000
[10/26 08:27:12][INFO] train_test.py:  62: Training: [Epoch   44] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:27:13][INFO] train_test.py:  94: Evaluation: [Epoch   44] loss: 2.4782 accuracy: 0.6000
[10/26 08:27:17][INFO] train_test.py:  62: Training: [Epoch   45] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:27:18][INFO] train_test.py:  94: Evaluation: [Epoch   45] loss: 2.4782 accuracy: 0.6000
[10/26 08:27:22][INFO] train_test.py:  62: Training: [Epoch   46] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:27:23][INFO] train_test.py:  94: Evaluation: [Epoch   46] loss: 2.4782 accuracy: 0.6000
[10/26 08:27:27][INFO] train_test.py:  62: Training: [Epoch   47] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:27:28][INFO] train_test.py:  94: Evaluation: [Epoch   47] loss: 2.4782 accuracy: 0.6000
[10/26 08:27:33][INFO] train_test.py:  62: Training: [Epoch   48] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:27:34][INFO] train_test.py:  94: Evaluation: [Epoch   48] loss: 2.4782 accuracy: 0.6000
[10/26 08:27:38][INFO] train_test.py:  62: Training: [Epoch   49] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:27:39][INFO] train_test.py:  94: Evaluation: [Epoch   49] loss: 2.4782 accuracy: 0.6000
[10/26 08:27:43][INFO] train_test.py:  62: Training: [Epoch   50] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:27:44][INFO] train_test.py:  94: Evaluation: [Epoch   50] loss: 2.4782 accuracy: 0.6000
[10/26 08:27:48][INFO] train_test.py:  62: Training: [Epoch   51] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:27:49][INFO] train_test.py:  94: Evaluation: [Epoch   51] loss: 2.4782 accuracy: 0.6000
[10/26 08:27:53][INFO] train_test.py:  62: Training: [Epoch   52] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:27:54][INFO] train_test.py:  94: Evaluation: [Epoch   52] loss: 2.4782 accuracy: 0.6000
[10/26 08:27:58][INFO] train_test.py:  62: Training: [Epoch   53] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:27:59][INFO] train_test.py:  94: Evaluation: [Epoch   53] loss: 2.4782 accuracy: 0.6000
[10/26 08:28:03][INFO] train_test.py:  62: Training: [Epoch   54] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:28:04][INFO] train_test.py:  94: Evaluation: [Epoch   54] loss: 2.4782 accuracy: 0.6000
[10/26 08:28:09][INFO] train_test.py:  62: Training: [Epoch   55] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:28:10][INFO] train_test.py:  94: Evaluation: [Epoch   55] loss: 2.4782 accuracy: 0.6000
[10/26 08:28:14][INFO] train_test.py:  62: Training: [Epoch   56] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:28:15][INFO] train_test.py:  94: Evaluation: [Epoch   56] loss: 2.4782 accuracy: 0.6000
[10/26 08:28:19][INFO] train_test.py:  62: Training: [Epoch   57] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:28:20][INFO] train_test.py:  94: Evaluation: [Epoch   57] loss: 2.4782 accuracy: 0.6000
[10/26 08:28:24][INFO] train_test.py:  62: Training: [Epoch   58] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:28:25][INFO] train_test.py:  94: Evaluation: [Epoch   58] loss: 2.4782 accuracy: 0.6000
[10/26 08:28:29][INFO] train_test.py:  62: Training: [Epoch   59] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:28:30][INFO] train_test.py:  94: Evaluation: [Epoch   59] loss: 2.4782 accuracy: 0.6000
[10/26 08:28:34][INFO] train_test.py:  62: Training: [Epoch   60] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:28:35][INFO] train_test.py:  94: Evaluation: [Epoch   60] loss: 2.4782 accuracy: 0.6000
[10/26 08:28:39][INFO] train_test.py:  62: Training: [Epoch   61] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:28:40][INFO] train_test.py:  94: Evaluation: [Epoch   61] loss: 2.4782 accuracy: 0.6000
[10/26 08:28:44][INFO] train_test.py:  62: Training: [Epoch   62] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:28:46][INFO] train_test.py:  94: Evaluation: [Epoch   62] loss: 2.4782 accuracy: 0.6000
[10/26 08:28:50][INFO] train_test.py:  62: Training: [Epoch   63] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:28:51][INFO] train_test.py:  94: Evaluation: [Epoch   63] loss: 2.4782 accuracy: 0.6000
[10/26 08:28:55][INFO] train_test.py:  62: Training: [Epoch   64] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:28:56][INFO] train_test.py:  94: Evaluation: [Epoch   64] loss: 2.4782 accuracy: 0.6000
[10/26 08:29:00][INFO] train_test.py:  62: Training: [Epoch   65] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:29:01][INFO] train_test.py:  94: Evaluation: [Epoch   65] loss: 2.4782 accuracy: 0.6000
[10/26 08:29:05][INFO] train_test.py:  62: Training: [Epoch   66] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:29:06][INFO] train_test.py:  94: Evaluation: [Epoch   66] loss: 2.4782 accuracy: 0.6000
[10/26 08:29:10][INFO] train_test.py:  62: Training: [Epoch   67] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:29:11][INFO] train_test.py:  94: Evaluation: [Epoch   67] loss: 2.4782 accuracy: 0.6000
[10/26 08:29:15][INFO] train_test.py:  62: Training: [Epoch   68] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:29:16][INFO] train_test.py:  94: Evaluation: [Epoch   68] loss: 2.4782 accuracy: 0.6000
[10/26 08:29:20][INFO] train_test.py:  62: Training: [Epoch   69] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:29:21][INFO] train_test.py:  94: Evaluation: [Epoch   69] loss: 2.4782 accuracy: 0.6000
[10/26 08:29:26][INFO] train_test.py:  62: Training: [Epoch   70] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:29:27][INFO] train_test.py:  94: Evaluation: [Epoch   70] loss: 2.4782 accuracy: 0.6000
[10/26 08:29:31][INFO] train_test.py:  62: Training: [Epoch   71] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:29:32][INFO] train_test.py:  94: Evaluation: [Epoch   71] loss: 2.4782 accuracy: 0.6000
[10/26 08:29:36][INFO] train_test.py:  62: Training: [Epoch   72] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:29:37][INFO] train_test.py:  94: Evaluation: [Epoch   72] loss: 2.4782 accuracy: 0.6000
[10/26 08:29:41][INFO] train_test.py:  62: Training: [Epoch   73] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:29:42][INFO] train_test.py:  94: Evaluation: [Epoch   73] loss: 2.4782 accuracy: 0.6000
[10/26 08:29:46][INFO] train_test.py:  62: Training: [Epoch   74] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:29:47][INFO] train_test.py:  94: Evaluation: [Epoch   74] loss: 2.4782 accuracy: 0.6000
[10/26 08:29:51][INFO] train_test.py:  62: Training: [Epoch   75] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:29:52][INFO] train_test.py:  94: Evaluation: [Epoch   75] loss: 2.4782 accuracy: 0.6000
[10/26 08:29:56][INFO] train_test.py:  62: Training: [Epoch   76] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:29:57][INFO] train_test.py:  94: Evaluation: [Epoch   76] loss: 2.4782 accuracy: 0.6000
[10/26 08:30:01][INFO] train_test.py:  62: Training: [Epoch   77] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:30:03][INFO] train_test.py:  94: Evaluation: [Epoch   77] loss: 2.4782 accuracy: 0.6000
[10/26 08:30:07][INFO] train_test.py:  62: Training: [Epoch   78] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:30:08][INFO] train_test.py:  94: Evaluation: [Epoch   78] loss: 2.4782 accuracy: 0.6000
[10/26 08:30:12][INFO] train_test.py:  62: Training: [Epoch   79] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:30:13][INFO] train_test.py:  94: Evaluation: [Epoch   79] loss: 2.4782 accuracy: 0.6000
[10/26 08:30:17][INFO] train_test.py:  62: Training: [Epoch   80] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:30:18][INFO] train_test.py:  94: Evaluation: [Epoch   80] loss: 2.4782 accuracy: 0.6000
[10/26 08:30:22][INFO] train_test.py:  62: Training: [Epoch   81] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:30:23][INFO] train_test.py:  94: Evaluation: [Epoch   81] loss: 2.4782 accuracy: 0.6000
[10/26 08:30:27][INFO] train_test.py:  62: Training: [Epoch   82] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:30:28][INFO] train_test.py:  94: Evaluation: [Epoch   82] loss: 2.4782 accuracy: 0.6000
[10/26 08:30:32][INFO] train_test.py:  62: Training: [Epoch   83] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:30:33][INFO] train_test.py:  94: Evaluation: [Epoch   83] loss: 2.4782 accuracy: 0.6000
[10/26 08:30:38][INFO] train_test.py:  62: Training: [Epoch   84] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:30:39][INFO] train_test.py:  94: Evaluation: [Epoch   84] loss: 2.4782 accuracy: 0.6000
[10/26 08:30:43][INFO] train_test.py:  62: Training: [Epoch   85] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:30:44][INFO] train_test.py:  94: Evaluation: [Epoch   85] loss: 2.4782 accuracy: 0.6000
[10/26 08:30:48][INFO] train_test.py:  62: Training: [Epoch   86] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:30:49][INFO] train_test.py:  94: Evaluation: [Epoch   86] loss: 2.4782 accuracy: 0.6000
[10/26 08:30:53][INFO] train_test.py:  62: Training: [Epoch   87] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:30:54][INFO] train_test.py:  94: Evaluation: [Epoch   87] loss: 2.4782 accuracy: 0.6000
[10/26 08:30:58][INFO] train_test.py:  62: Training: [Epoch   88] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:30:59][INFO] train_test.py:  94: Evaluation: [Epoch   88] loss: 2.4782 accuracy: 0.6000
[10/26 08:31:03][INFO] train_test.py:  62: Training: [Epoch   89] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:31:04][INFO] train_test.py:  94: Evaluation: [Epoch   89] loss: 2.4782 accuracy: 0.6000
[10/26 08:31:08][INFO] train_test.py:  62: Training: [Epoch   90] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:31:09][INFO] train_test.py:  94: Evaluation: [Epoch   90] loss: 2.4782 accuracy: 0.6000
[10/26 08:31:13][INFO] train_test.py:  62: Training: [Epoch   91] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:31:14][INFO] train_test.py:  94: Evaluation: [Epoch   91] loss: 2.4782 accuracy: 0.6000
[10/26 08:31:19][INFO] train_test.py:  62: Training: [Epoch   92] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:31:20][INFO] train_test.py:  94: Evaluation: [Epoch   92] loss: 2.4782 accuracy: 0.6000
[10/26 08:31:24][INFO] train_test.py:  62: Training: [Epoch   93] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:31:25][INFO] train_test.py:  94: Evaluation: [Epoch   93] loss: 2.4782 accuracy: 0.6000
[10/26 08:31:29][INFO] train_test.py:  62: Training: [Epoch   94] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:31:30][INFO] train_test.py:  94: Evaluation: [Epoch   94] loss: 2.4782 accuracy: 0.6000
[10/26 08:31:34][INFO] train_test.py:  62: Training: [Epoch   95] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:31:35][INFO] train_test.py:  94: Evaluation: [Epoch   95] loss: 2.4782 accuracy: 0.6000
[10/26 08:31:39][INFO] train_test.py:  62: Training: [Epoch   96] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:31:40][INFO] train_test.py:  94: Evaluation: [Epoch   96] loss: 2.4782 accuracy: 0.6000
[10/26 08:31:44][INFO] train_test.py:  62: Training: [Epoch   97] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:31:45][INFO] train_test.py:  94: Evaluation: [Epoch   97] loss: 2.4782 accuracy: 0.6000
[10/26 08:31:50][INFO] train_test.py:  62: Training: [Epoch   98] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:31:51][INFO] train_test.py:  94: Evaluation: [Epoch   98] loss: 2.4782 accuracy: 0.6000
[10/26 08:31:55][INFO] train_test.py:  62: Training: [Epoch   99] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:31:56][INFO] train_test.py:  94: Evaluation: [Epoch   99] loss: 2.4782 accuracy: 0.6000
[10/26 08:32:00][INFO] train_test.py:  62: Training: [Epoch  100] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:32:01][INFO] train_test.py:  94: Evaluation: [Epoch  100] loss: 2.4782 accuracy: 0.6000
[10/26 08:32:01][INFO] train_test.py: 159: Trained with 100 epochs, lr = 0.001, batchsize = 2, momentum = 0.5 with max validation accuracy of 0.60 done in 0:08:48
[10/26 10:09:03][INFO] run.py:  92: Train with configs:
[10/26 10:09:03][INFO] run.py:  93: 
{ AUGMENTATION      }-> False
{ BATCH_SIZE        }-> 2
{ DATA_JSON         }-> data.json
{ DATA_SEPARATOR    }-> ,
{ DECAY             }-> 0.005
{ DEVICES           }-> [0]
{ EPOCHS            }-> 100
{ FLOW              }-> DeepFlow
{ GPU               }-> 0
{ LABEL_DICT        }-> label_dict.json
{ LOAD              }-> False
{ LR                }-> 0.001
{ MODE              }-> train
{ MODEL_NAME        }-> twin
{ MODEL_TYPE        }-> twin
{ MOMENTUM          }-> 0.5
{ NESTEROV          }-> True
{ NORM              }-> normal
{ NUM_CLASSES       }-> 20
{ NUM_WORKERS       }-> 8
{ N_GPU             }-> 1
{ OUTPUT_DIR        }-> .
{ OUTPUT_FILE       }-> ./pred.txt
{ PATH_DATA         }-> data
{ PATH_MODEL        }-> ./twin
{ PATH_PROCESSED_DATA }-> data_processed
{ SEED              }-> 31
{ SIZE_DATA         }-> [100 120 120]
{ VERSION           }-> 31

[10/26 10:09:12][INFO] train_test.py:  62: Training: [Epoch    1] loss: 2.2644 accuracy: 0.8000 lr: 0.001000
[10/26 10:09:14][INFO] train_test.py:  94: Evaluation: [Epoch    1] loss: 2.4782 accuracy: 0.6000
[10/26 10:09:33][INFO] train_test.py:  62: Training: [Epoch    2] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:09:35][INFO] train_test.py:  94: Evaluation: [Epoch    2] loss: 2.4782 accuracy: 0.6000
[10/26 10:09:39][INFO] train_test.py:  62: Training: [Epoch    3] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:09:40][INFO] train_test.py:  94: Evaluation: [Epoch    3] loss: 2.4782 accuracy: 0.6000
[10/26 10:09:44][INFO] train_test.py:  62: Training: [Epoch    4] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:09:45][INFO] train_test.py:  94: Evaluation: [Epoch    4] loss: 2.4782 accuracy: 0.6000
[10/26 10:09:49][INFO] train_test.py:  62: Training: [Epoch    5] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:09:50][INFO] train_test.py:  94: Evaluation: [Epoch    5] loss: 2.4782 accuracy: 0.6000
[10/26 10:09:54][INFO] train_test.py:  62: Training: [Epoch    6] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:09:55][INFO] train_test.py:  94: Evaluation: [Epoch    6] loss: 2.4782 accuracy: 0.6000
[10/26 10:09:59][INFO] train_test.py:  62: Training: [Epoch    7] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:10:00][INFO] train_test.py:  94: Evaluation: [Epoch    7] loss: 2.4782 accuracy: 0.6000
[10/26 10:10:04][INFO] train_test.py:  62: Training: [Epoch    8] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:10:05][INFO] train_test.py:  94: Evaluation: [Epoch    8] loss: 2.4782 accuracy: 0.6000
[10/26 10:10:09][INFO] train_test.py:  62: Training: [Epoch    9] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:10:10][INFO] train_test.py:  94: Evaluation: [Epoch    9] loss: 2.4782 accuracy: 0.6000
[10/26 10:10:14][INFO] train_test.py:  62: Training: [Epoch   10] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:10:15][INFO] train_test.py:  94: Evaluation: [Epoch   10] loss: 2.4782 accuracy: 0.6000
[10/26 10:10:19][INFO] train_test.py:  62: Training: [Epoch   11] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:10:20][INFO] train_test.py:  94: Evaluation: [Epoch   11] loss: 2.4782 accuracy: 0.6000
[10/26 10:10:24][INFO] train_test.py:  62: Training: [Epoch   12] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:10:25][INFO] train_test.py:  94: Evaluation: [Epoch   12] loss: 2.4782 accuracy: 0.6000
[10/26 10:10:29][INFO] train_test.py:  62: Training: [Epoch   13] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:10:30][INFO] train_test.py:  94: Evaluation: [Epoch   13] loss: 2.4782 accuracy: 0.6000
[10/26 10:10:34][INFO] train_test.py:  62: Training: [Epoch   14] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:10:35][INFO] train_test.py:  94: Evaluation: [Epoch   14] loss: 2.4782 accuracy: 0.6000
[10/26 10:10:40][INFO] train_test.py:  62: Training: [Epoch   15] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:10:41][INFO] train_test.py:  94: Evaluation: [Epoch   15] loss: 2.4782 accuracy: 0.6000
[10/26 10:10:45][INFO] train_test.py:  62: Training: [Epoch   16] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:10:46][INFO] train_test.py:  94: Evaluation: [Epoch   16] loss: 2.4782 accuracy: 0.6000
[10/26 10:10:50][INFO] train_test.py:  62: Training: [Epoch   17] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:10:51][INFO] train_test.py:  94: Evaluation: [Epoch   17] loss: 2.4782 accuracy: 0.6000
[10/26 10:10:55][INFO] train_test.py:  62: Training: [Epoch   18] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:10:56][INFO] train_test.py:  94: Evaluation: [Epoch   18] loss: 2.4782 accuracy: 0.6000
[10/26 10:11:00][INFO] train_test.py:  62: Training: [Epoch   19] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:11:01][INFO] train_test.py:  94: Evaluation: [Epoch   19] loss: 2.4782 accuracy: 0.6000
[10/26 10:11:05][INFO] train_test.py:  62: Training: [Epoch   20] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:11:06][INFO] train_test.py:  94: Evaluation: [Epoch   20] loss: 2.4782 accuracy: 0.6000
[10/26 10:11:10][INFO] train_test.py:  62: Training: [Epoch   21] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:11:11][INFO] train_test.py:  94: Evaluation: [Epoch   21] loss: 2.4782 accuracy: 0.6000
[10/26 10:11:15][INFO] train_test.py:  62: Training: [Epoch   22] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:11:16][INFO] train_test.py:  94: Evaluation: [Epoch   22] loss: 2.4782 accuracy: 0.6000
[10/26 10:11:20][INFO] train_test.py:  62: Training: [Epoch   23] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:11:21][INFO] train_test.py:  94: Evaluation: [Epoch   23] loss: 2.4782 accuracy: 0.6000
[10/26 10:11:26][INFO] train_test.py:  62: Training: [Epoch   24] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:11:27][INFO] train_test.py:  94: Evaluation: [Epoch   24] loss: 2.4782 accuracy: 0.6000
[10/26 10:11:31][INFO] train_test.py:  62: Training: [Epoch   25] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:11:32][INFO] train_test.py:  94: Evaluation: [Epoch   25] loss: 2.4782 accuracy: 0.6000
[10/26 10:11:36][INFO] train_test.py:  62: Training: [Epoch   26] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:11:37][INFO] train_test.py:  94: Evaluation: [Epoch   26] loss: 2.4782 accuracy: 0.6000
[10/26 10:11:41][INFO] train_test.py:  62: Training: [Epoch   27] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:11:42][INFO] train_test.py:  94: Evaluation: [Epoch   27] loss: 2.4782 accuracy: 0.6000
[10/26 10:11:46][INFO] train_test.py:  62: Training: [Epoch   28] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:11:47][INFO] train_test.py:  94: Evaluation: [Epoch   28] loss: 2.4782 accuracy: 0.6000
[10/26 10:11:51][INFO] train_test.py:  62: Training: [Epoch   29] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:11:52][INFO] train_test.py:  94: Evaluation: [Epoch   29] loss: 2.4782 accuracy: 0.6000
[10/26 10:11:56][INFO] train_test.py:  62: Training: [Epoch   30] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:11:58][INFO] train_test.py:  94: Evaluation: [Epoch   30] loss: 2.4782 accuracy: 0.6000
[10/26 10:12:02][INFO] train_test.py:  62: Training: [Epoch   31] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:12:03][INFO] train_test.py:  94: Evaluation: [Epoch   31] loss: 2.4782 accuracy: 0.6000
[10/26 10:12:07][INFO] train_test.py:  62: Training: [Epoch   32] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:12:08][INFO] train_test.py:  94: Evaluation: [Epoch   32] loss: 2.4782 accuracy: 0.6000
[10/26 10:12:12][INFO] train_test.py:  62: Training: [Epoch   33] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:12:13][INFO] train_test.py:  94: Evaluation: [Epoch   33] loss: 2.4782 accuracy: 0.6000
[10/26 10:12:17][INFO] train_test.py:  62: Training: [Epoch   34] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:12:18][INFO] train_test.py:  94: Evaluation: [Epoch   34] loss: 2.4782 accuracy: 0.6000
[10/26 10:12:22][INFO] train_test.py:  62: Training: [Epoch   35] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:12:23][INFO] train_test.py:  94: Evaluation: [Epoch   35] loss: 2.4782 accuracy: 0.6000
[10/26 10:12:27][INFO] train_test.py:  62: Training: [Epoch   36] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:12:28][INFO] train_test.py:  94: Evaluation: [Epoch   36] loss: 2.4782 accuracy: 0.6000
[10/26 10:12:32][INFO] train_test.py:  62: Training: [Epoch   37] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:12:33][INFO] train_test.py:  94: Evaluation: [Epoch   37] loss: 2.4782 accuracy: 0.6000
[10/26 10:12:37][INFO] train_test.py:  62: Training: [Epoch   38] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:12:39][INFO] train_test.py:  94: Evaluation: [Epoch   38] loss: 2.4782 accuracy: 0.6000
[10/26 10:12:43][INFO] train_test.py:  62: Training: [Epoch   39] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:12:44][INFO] train_test.py:  94: Evaluation: [Epoch   39] loss: 2.4782 accuracy: 0.6000
[10/26 10:12:48][INFO] train_test.py:  62: Training: [Epoch   40] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:12:49][INFO] train_test.py:  94: Evaluation: [Epoch   40] loss: 2.4782 accuracy: 0.6000
[10/26 10:12:53][INFO] train_test.py:  62: Training: [Epoch   41] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:12:54][INFO] train_test.py:  94: Evaluation: [Epoch   41] loss: 2.4782 accuracy: 0.6000
[10/26 10:12:58][INFO] train_test.py:  62: Training: [Epoch   42] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:12:59][INFO] train_test.py:  94: Evaluation: [Epoch   42] loss: 2.4782 accuracy: 0.6000
[10/26 10:13:03][INFO] train_test.py:  62: Training: [Epoch   43] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:13:04][INFO] train_test.py:  94: Evaluation: [Epoch   43] loss: 2.4782 accuracy: 0.6000
[10/26 10:13:11][INFO] run.py:  92: Train with configs:
[10/26 10:13:11][INFO] run.py:  93: 
{ AUGMENTATION      }-> False
{ BATCH_SIZE        }-> 2
{ DATA_JSON         }-> data.json
{ DATA_SEPARATOR    }-> ,
{ DECAY             }-> 0.005
{ DEVICES           }-> [0]
{ EPOCHS            }-> 100
{ FLOW              }-> DeepFlow
{ GPU               }-> 0
{ LABEL_DICT        }-> label_dict.json
{ LOAD              }-> False
{ LR                }-> 0.001
{ MODE              }-> train
{ MODEL_NAME        }-> twin
{ MODEL_TYPE        }-> twin
{ MOMENTUM          }-> 0.5
{ NESTEROV          }-> True
{ NORM              }-> normal
{ NUM_CLASSES       }-> 20
{ NUM_WORKERS       }-> 8
{ N_GPU             }-> 1
{ OUTPUT_DIR        }-> .
{ OUTPUT_FILE       }-> ./pred.txt
{ PATH_DATA         }-> data
{ PATH_MODEL        }-> ./twin
{ PATH_PROCESSED_DATA }-> data_processed
{ SEED              }-> 31
{ SIZE_DATA         }-> [100 120 120]
{ VERSION           }-> 31

[10/26 10:17:25][INFO] train_test.py:  62: Training: [Epoch    1] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 10:18:38][INFO] train_test.py:  94: Evaluation: [Epoch    1] loss: 3.0021 accuracy: 0.0765
[10/26 10:24:34][INFO] run.py:  92: Train with configs:
[10/26 10:24:34][INFO] run.py:  93: 
{ AUGMENTATION      }-> False
{ BATCH_SIZE        }-> 2
{ DATA_JSON         }-> data.json
{ DATA_SEPARATOR    }-> ,
{ DECAY             }-> 0.005
{ DEVICES           }-> [0]
{ EPOCHS            }-> 100
{ FLOW              }-> DeepFlow
{ GPU               }-> 0
{ LABEL_DICT        }-> label_dict.json
{ LOAD              }-> False
{ LR                }-> 0.001
{ MODE              }-> train
{ MODEL_NAME        }-> twin
{ MODEL_TYPE        }-> twin
{ MOMENTUM          }-> 0.5
{ NESTEROV          }-> True
{ NORM              }-> normal
{ NUM_CLASSES       }-> 20
{ NUM_WORKERS       }-> 8
{ N_GPU             }-> 1
{ OUTPUT_DIR        }-> .
{ OUTPUT_FILE       }-> ./pred.txt
{ PATH_DATA         }-> data
{ PATH_MODEL        }-> ./twin
{ PATH_PROCESSED_DATA }-> data_processed
{ SEED              }-> 31
{ SIZE_DATA         }-> [100 120 120]
{ VERSION           }-> 31

[10/26 10:27:50][INFO] train_test.py:  62: Training: [Epoch    1] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 10:27:58][INFO] train_test.py:  94: Evaluation: [Epoch    1] loss: 3.0021 accuracy: 0.0765
[10/26 10:31:25][INFO] train_test.py:  62: Training: [Epoch    2] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 10:31:33][INFO] train_test.py:  94: Evaluation: [Epoch    2] loss: 3.0021 accuracy: 0.0765
[10/26 10:34:45][INFO] train_test.py:  62: Training: [Epoch    3] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 10:34:53][INFO] train_test.py:  94: Evaluation: [Epoch    3] loss: 3.0021 accuracy: 0.0765
[10/26 10:38:04][INFO] train_test.py:  62: Training: [Epoch    4] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 10:38:12][INFO] train_test.py:  94: Evaluation: [Epoch    4] loss: 3.0021 accuracy: 0.0765
[10/26 10:41:24][INFO] train_test.py:  62: Training: [Epoch    5] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 10:41:32][INFO] train_test.py:  94: Evaluation: [Epoch    5] loss: 3.0021 accuracy: 0.0765
[10/26 10:44:44][INFO] train_test.py:  62: Training: [Epoch    6] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 10:44:52][INFO] train_test.py:  94: Evaluation: [Epoch    6] loss: 3.0021 accuracy: 0.0765
[10/26 10:48:04][INFO] train_test.py:  62: Training: [Epoch    7] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 10:48:12][INFO] train_test.py:  94: Evaluation: [Epoch    7] loss: 3.0021 accuracy: 0.0765
[10/26 10:51:23][INFO] train_test.py:  62: Training: [Epoch    8] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 10:51:31][INFO] train_test.py:  94: Evaluation: [Epoch    8] loss: 3.0021 accuracy: 0.0765
[10/26 10:54:43][INFO] train_test.py:  62: Training: [Epoch    9] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 10:54:51][INFO] train_test.py:  94: Evaluation: [Epoch    9] loss: 3.0021 accuracy: 0.0765
[10/26 10:58:02][INFO] train_test.py:  62: Training: [Epoch   10] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 10:58:11][INFO] train_test.py:  94: Evaluation: [Epoch   10] loss: 3.0021 accuracy: 0.0765
[10/26 11:01:23][INFO] train_test.py:  62: Training: [Epoch   11] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 11:01:31][INFO] train_test.py:  94: Evaluation: [Epoch   11] loss: 3.0021 accuracy: 0.0765
[10/26 11:04:43][INFO] train_test.py:  62: Training: [Epoch   12] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 11:04:51][INFO] train_test.py:  94: Evaluation: [Epoch   12] loss: 3.0021 accuracy: 0.0765
[10/26 11:08:02][INFO] train_test.py:  62: Training: [Epoch   13] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 11:08:10][INFO] train_test.py:  94: Evaluation: [Epoch   13] loss: 3.0021 accuracy: 0.0765
[10/26 11:11:22][INFO] train_test.py:  62: Training: [Epoch   14] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 11:11:30][INFO] train_test.py:  94: Evaluation: [Epoch   14] loss: 3.0021 accuracy: 0.0765
[10/26 11:14:41][INFO] train_test.py:  62: Training: [Epoch   15] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 11:14:49][INFO] train_test.py:  94: Evaluation: [Epoch   15] loss: 3.0021 accuracy: 0.0765
[10/26 11:18:01][INFO] train_test.py:  62: Training: [Epoch   16] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 11:18:09][INFO] train_test.py:  94: Evaluation: [Epoch   16] loss: 3.0021 accuracy: 0.0765
[10/26 11:21:20][INFO] train_test.py:  62: Training: [Epoch   17] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 11:21:28][INFO] train_test.py:  94: Evaluation: [Epoch   17] loss: 3.0021 accuracy: 0.0765
[10/26 11:24:40][INFO] train_test.py:  62: Training: [Epoch   18] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 11:24:48][INFO] train_test.py:  94: Evaluation: [Epoch   18] loss: 3.0021 accuracy: 0.0765
[10/26 11:27:59][INFO] train_test.py:  62: Training: [Epoch   19] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 11:28:07][INFO] train_test.py:  94: Evaluation: [Epoch   19] loss: 3.0021 accuracy: 0.0765
[10/26 11:31:19][INFO] train_test.py:  62: Training: [Epoch   20] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 11:31:27][INFO] train_test.py:  94: Evaluation: [Epoch   20] loss: 3.0021 accuracy: 0.0765
[10/26 11:34:38][INFO] train_test.py:  62: Training: [Epoch   21] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 11:34:46][INFO] train_test.py:  94: Evaluation: [Epoch   21] loss: 3.0021 accuracy: 0.0765
[10/26 11:37:58][INFO] train_test.py:  62: Training: [Epoch   22] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 11:38:06][INFO] train_test.py:  94: Evaluation: [Epoch   22] loss: 3.0021 accuracy: 0.0765
[10/26 11:41:17][INFO] train_test.py:  62: Training: [Epoch   23] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 11:41:25][INFO] train_test.py:  94: Evaluation: [Epoch   23] loss: 3.0021 accuracy: 0.0765
[10/26 11:44:37][INFO] train_test.py:  62: Training: [Epoch   24] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 11:44:45][INFO] train_test.py:  94: Evaluation: [Epoch   24] loss: 3.0021 accuracy: 0.0765
[10/26 11:47:57][INFO] train_test.py:  62: Training: [Epoch   25] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 11:48:05][INFO] train_test.py:  94: Evaluation: [Epoch   25] loss: 3.0021 accuracy: 0.0765
[10/26 11:51:16][INFO] train_test.py:  62: Training: [Epoch   26] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 11:51:24][INFO] train_test.py:  94: Evaluation: [Epoch   26] loss: 3.0021 accuracy: 0.0765
[10/26 11:54:36][INFO] train_test.py:  62: Training: [Epoch   27] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 11:54:44][INFO] train_test.py:  94: Evaluation: [Epoch   27] loss: 3.0021 accuracy: 0.0765
[10/26 11:57:56][INFO] train_test.py:  62: Training: [Epoch   28] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 11:58:04][INFO] train_test.py:  94: Evaluation: [Epoch   28] loss: 3.0021 accuracy: 0.0765
[10/26 12:01:16][INFO] train_test.py:  62: Training: [Epoch   29] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 12:01:24][INFO] train_test.py:  94: Evaluation: [Epoch   29] loss: 3.0021 accuracy: 0.0765
[10/26 12:04:35][INFO] train_test.py:  62: Training: [Epoch   30] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 12:04:43][INFO] train_test.py:  94: Evaluation: [Epoch   30] loss: 3.0021 accuracy: 0.0765
[10/26 12:07:55][INFO] train_test.py:  62: Training: [Epoch   31] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 12:08:03][INFO] train_test.py:  94: Evaluation: [Epoch   31] loss: 3.0021 accuracy: 0.0765
[10/26 12:11:15][INFO] train_test.py:  62: Training: [Epoch   32] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 12:11:23][INFO] train_test.py:  94: Evaluation: [Epoch   32] loss: 3.0021 accuracy: 0.0765
[10/26 12:14:35][INFO] train_test.py:  62: Training: [Epoch   33] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 12:14:43][INFO] train_test.py:  94: Evaluation: [Epoch   33] loss: 3.0021 accuracy: 0.0765
[10/26 12:17:55][INFO] train_test.py:  62: Training: [Epoch   34] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 12:18:03][INFO] train_test.py:  94: Evaluation: [Epoch   34] loss: 3.0021 accuracy: 0.0765
[10/26 12:21:14][INFO] train_test.py:  62: Training: [Epoch   35] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 12:21:22][INFO] train_test.py:  94: Evaluation: [Epoch   35] loss: 3.0021 accuracy: 0.0765
[10/26 12:24:34][INFO] train_test.py:  62: Training: [Epoch   36] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 12:24:42][INFO] train_test.py:  94: Evaluation: [Epoch   36] loss: 3.0021 accuracy: 0.0765
[10/26 12:27:54][INFO] train_test.py:  62: Training: [Epoch   37] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 12:28:02][INFO] train_test.py:  94: Evaluation: [Epoch   37] loss: 3.0021 accuracy: 0.0765
[10/26 12:31:14][INFO] train_test.py:  62: Training: [Epoch   38] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 12:31:22][INFO] train_test.py:  94: Evaluation: [Epoch   38] loss: 3.0021 accuracy: 0.0765
[10/26 12:34:34][INFO] train_test.py:  62: Training: [Epoch   39] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 12:34:42][INFO] train_test.py:  94: Evaluation: [Epoch   39] loss: 3.0021 accuracy: 0.0765
[10/26 12:37:54][INFO] train_test.py:  62: Training: [Epoch   40] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 12:38:02][INFO] train_test.py:  94: Evaluation: [Epoch   40] loss: 3.0021 accuracy: 0.0765
[10/26 12:41:14][INFO] train_test.py:  62: Training: [Epoch   41] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 12:41:22][INFO] train_test.py:  94: Evaluation: [Epoch   41] loss: 3.0021 accuracy: 0.0765
[10/26 12:44:33][INFO] train_test.py:  62: Training: [Epoch   42] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 12:44:41][INFO] train_test.py:  94: Evaluation: [Epoch   42] loss: 3.0021 accuracy: 0.0765
[10/26 12:47:53][INFO] train_test.py:  62: Training: [Epoch   43] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 12:48:01][INFO] train_test.py:  94: Evaluation: [Epoch   43] loss: 3.0021 accuracy: 0.0765
[10/26 12:51:13][INFO] train_test.py:  62: Training: [Epoch   44] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 12:51:21][INFO] train_test.py:  94: Evaluation: [Epoch   44] loss: 3.0021 accuracy: 0.0765
[10/26 12:54:33][INFO] train_test.py:  62: Training: [Epoch   45] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 12:54:41][INFO] train_test.py:  94: Evaluation: [Epoch   45] loss: 3.0021 accuracy: 0.0765
[10/26 12:57:53][INFO] train_test.py:  62: Training: [Epoch   46] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 12:58:01][INFO] train_test.py:  94: Evaluation: [Epoch   46] loss: 3.0021 accuracy: 0.0765
[10/26 13:01:13][INFO] train_test.py:  62: Training: [Epoch   47] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 13:01:21][INFO] train_test.py:  94: Evaluation: [Epoch   47] loss: 3.0021 accuracy: 0.0765
[10/26 13:04:33][INFO] train_test.py:  62: Training: [Epoch   48] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 13:04:41][INFO] train_test.py:  94: Evaluation: [Epoch   48] loss: 3.0021 accuracy: 0.0765
[10/26 13:07:53][INFO] train_test.py:  62: Training: [Epoch   49] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 13:08:01][INFO] train_test.py:  94: Evaluation: [Epoch   49] loss: 3.0021 accuracy: 0.0765
[10/26 13:11:13][INFO] train_test.py:  62: Training: [Epoch   50] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 13:11:21][INFO] train_test.py:  94: Evaluation: [Epoch   50] loss: 3.0021 accuracy: 0.0765
[10/26 13:14:33][INFO] train_test.py:  62: Training: [Epoch   51] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 13:14:41][INFO] train_test.py:  94: Evaluation: [Epoch   51] loss: 3.0021 accuracy: 0.0765
[10/26 13:17:53][INFO] train_test.py:  62: Training: [Epoch   52] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 13:18:01][INFO] train_test.py:  94: Evaluation: [Epoch   52] loss: 3.0021 accuracy: 0.0765
[10/26 13:21:13][INFO] train_test.py:  62: Training: [Epoch   53] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 13:21:21][INFO] train_test.py:  94: Evaluation: [Epoch   53] loss: 3.0021 accuracy: 0.0765
[10/26 13:24:33][INFO] train_test.py:  62: Training: [Epoch   54] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 13:24:41][INFO] train_test.py:  94: Evaluation: [Epoch   54] loss: 3.0021 accuracy: 0.0765
[10/26 13:27:52][INFO] train_test.py:  62: Training: [Epoch   55] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 13:28:01][INFO] train_test.py:  94: Evaluation: [Epoch   55] loss: 3.0021 accuracy: 0.0765
[10/26 13:31:12][INFO] train_test.py:  62: Training: [Epoch   56] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 13:31:21][INFO] train_test.py:  94: Evaluation: [Epoch   56] loss: 3.0021 accuracy: 0.0765
[10/26 13:34:32][INFO] train_test.py:  62: Training: [Epoch   57] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 13:34:41][INFO] train_test.py:  94: Evaluation: [Epoch   57] loss: 3.0021 accuracy: 0.0765
[10/26 13:37:52][INFO] train_test.py:  62: Training: [Epoch   58] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 13:38:00][INFO] train_test.py:  94: Evaluation: [Epoch   58] loss: 3.0021 accuracy: 0.0765
[10/26 13:41:12][INFO] train_test.py:  62: Training: [Epoch   59] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 13:41:20][INFO] train_test.py:  94: Evaluation: [Epoch   59] loss: 3.0021 accuracy: 0.0765
[10/26 13:44:32][INFO] train_test.py:  62: Training: [Epoch   60] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 13:44:40][INFO] train_test.py:  94: Evaluation: [Epoch   60] loss: 3.0021 accuracy: 0.0765
[10/26 13:47:52][INFO] train_test.py:  62: Training: [Epoch   61] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 13:48:00][INFO] train_test.py:  94: Evaluation: [Epoch   61] loss: 3.0021 accuracy: 0.0765
[10/26 13:51:12][INFO] train_test.py:  62: Training: [Epoch   62] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 13:51:20][INFO] train_test.py:  94: Evaluation: [Epoch   62] loss: 3.0021 accuracy: 0.0765
[10/26 13:54:32][INFO] train_test.py:  62: Training: [Epoch   63] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 13:54:40][INFO] train_test.py:  94: Evaluation: [Epoch   63] loss: 3.0021 accuracy: 0.0765
[10/26 13:57:52][INFO] train_test.py:  62: Training: [Epoch   64] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 13:58:00][INFO] train_test.py:  94: Evaluation: [Epoch   64] loss: 3.0021 accuracy: 0.0765
[10/26 14:01:12][INFO] train_test.py:  62: Training: [Epoch   65] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 14:01:20][INFO] train_test.py:  94: Evaluation: [Epoch   65] loss: 3.0021 accuracy: 0.0765
[10/26 14:04:32][INFO] train_test.py:  62: Training: [Epoch   66] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 14:04:41][INFO] train_test.py:  94: Evaluation: [Epoch   66] loss: 3.0021 accuracy: 0.0765
[10/26 14:07:53][INFO] train_test.py:  62: Training: [Epoch   67] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 14:08:01][INFO] train_test.py:  94: Evaluation: [Epoch   67] loss: 3.0021 accuracy: 0.0765
[10/26 14:11:13][INFO] train_test.py:  62: Training: [Epoch   68] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 14:11:21][INFO] train_test.py:  94: Evaluation: [Epoch   68] loss: 3.0021 accuracy: 0.0765
[10/26 14:14:33][INFO] train_test.py:  62: Training: [Epoch   69] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 14:14:41][INFO] train_test.py:  94: Evaluation: [Epoch   69] loss: 3.0021 accuracy: 0.0765
[10/26 14:17:53][INFO] train_test.py:  62: Training: [Epoch   70] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 14:18:01][INFO] train_test.py:  94: Evaluation: [Epoch   70] loss: 3.0021 accuracy: 0.0765
[10/26 14:21:13][INFO] train_test.py:  62: Training: [Epoch   71] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 14:21:21][INFO] train_test.py:  94: Evaluation: [Epoch   71] loss: 3.0021 accuracy: 0.0765
[10/26 14:24:33][INFO] train_test.py:  62: Training: [Epoch   72] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 14:24:41][INFO] train_test.py:  94: Evaluation: [Epoch   72] loss: 3.0021 accuracy: 0.0765
[10/26 14:27:53][INFO] train_test.py:  62: Training: [Epoch   73] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 14:28:01][INFO] train_test.py:  94: Evaluation: [Epoch   73] loss: 3.0021 accuracy: 0.0765
[10/26 14:31:12][INFO] train_test.py:  62: Training: [Epoch   74] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 14:31:20][INFO] train_test.py:  94: Evaluation: [Epoch   74] loss: 3.0021 accuracy: 0.0765
[10/26 14:34:32][INFO] train_test.py:  62: Training: [Epoch   75] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 14:34:40][INFO] train_test.py:  94: Evaluation: [Epoch   75] loss: 3.0021 accuracy: 0.0765
[10/26 14:37:52][INFO] train_test.py:  62: Training: [Epoch   76] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 14:38:00][INFO] train_test.py:  94: Evaluation: [Epoch   76] loss: 3.0021 accuracy: 0.0765
[10/26 14:41:11][INFO] train_test.py:  62: Training: [Epoch   77] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 14:41:19][INFO] train_test.py:  94: Evaluation: [Epoch   77] loss: 3.0021 accuracy: 0.0765
[10/26 14:44:31][INFO] train_test.py:  62: Training: [Epoch   78] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 14:44:39][INFO] train_test.py:  94: Evaluation: [Epoch   78] loss: 3.0021 accuracy: 0.0765
[10/26 14:47:50][INFO] train_test.py:  62: Training: [Epoch   79] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 14:47:58][INFO] train_test.py:  94: Evaluation: [Epoch   79] loss: 3.0021 accuracy: 0.0765
[10/26 14:51:10][INFO] train_test.py:  62: Training: [Epoch   80] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 14:51:18][INFO] train_test.py:  94: Evaluation: [Epoch   80] loss: 3.0021 accuracy: 0.0765
[10/26 14:54:29][INFO] train_test.py:  62: Training: [Epoch   81] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 14:54:37][INFO] train_test.py:  94: Evaluation: [Epoch   81] loss: 3.0021 accuracy: 0.0765
[10/26 14:57:49][INFO] train_test.py:  62: Training: [Epoch   82] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 14:57:57][INFO] train_test.py:  94: Evaluation: [Epoch   82] loss: 3.0021 accuracy: 0.0765
[10/26 15:01:08][INFO] train_test.py:  62: Training: [Epoch   83] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 15:01:16][INFO] train_test.py:  94: Evaluation: [Epoch   83] loss: 3.0021 accuracy: 0.0765
[10/26 15:04:28][INFO] train_test.py:  62: Training: [Epoch   84] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 15:04:36][INFO] train_test.py:  94: Evaluation: [Epoch   84] loss: 3.0021 accuracy: 0.0765
[10/26 15:07:47][INFO] train_test.py:  62: Training: [Epoch   85] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 15:07:55][INFO] train_test.py:  94: Evaluation: [Epoch   85] loss: 3.0021 accuracy: 0.0765
[10/26 15:11:06][INFO] train_test.py:  62: Training: [Epoch   86] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 15:11:14][INFO] train_test.py:  94: Evaluation: [Epoch   86] loss: 3.0021 accuracy: 0.0765
[10/26 15:14:26][INFO] train_test.py:  62: Training: [Epoch   87] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 15:14:34][INFO] train_test.py:  94: Evaluation: [Epoch   87] loss: 3.0021 accuracy: 0.0765
[10/26 15:17:45][INFO] train_test.py:  62: Training: [Epoch   88] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 15:17:53][INFO] train_test.py:  94: Evaluation: [Epoch   88] loss: 3.0021 accuracy: 0.0765
[10/26 15:21:05][INFO] train_test.py:  62: Training: [Epoch   89] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 15:21:13][INFO] train_test.py:  94: Evaluation: [Epoch   89] loss: 3.0021 accuracy: 0.0765
[10/26 15:24:24][INFO] train_test.py:  62: Training: [Epoch   90] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 15:24:32][INFO] train_test.py:  94: Evaluation: [Epoch   90] loss: 3.0021 accuracy: 0.0765
[10/26 15:27:44][INFO] train_test.py:  62: Training: [Epoch   91] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 15:27:52][INFO] train_test.py:  94: Evaluation: [Epoch   91] loss: 3.0021 accuracy: 0.0765
[10/26 15:31:03][INFO] train_test.py:  62: Training: [Epoch   92] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 15:31:11][INFO] train_test.py:  94: Evaluation: [Epoch   92] loss: 3.0021 accuracy: 0.0765
[10/26 15:34:23][INFO] train_test.py:  62: Training: [Epoch   93] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 15:34:31][INFO] train_test.py:  94: Evaluation: [Epoch   93] loss: 3.0021 accuracy: 0.0765
[10/26 15:37:42][INFO] train_test.py:  62: Training: [Epoch   94] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 15:37:50][INFO] train_test.py:  94: Evaluation: [Epoch   94] loss: 3.0021 accuracy: 0.0765
[10/26 15:41:02][INFO] train_test.py:  62: Training: [Epoch   95] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 15:41:10][INFO] train_test.py:  94: Evaluation: [Epoch   95] loss: 3.0021 accuracy: 0.0765
[10/26 15:44:22][INFO] train_test.py:  62: Training: [Epoch   96] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 15:44:30][INFO] train_test.py:  94: Evaluation: [Epoch   96] loss: 3.0021 accuracy: 0.0765
[10/26 15:47:41][INFO] train_test.py:  62: Training: [Epoch   97] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 15:47:49][INFO] train_test.py:  94: Evaluation: [Epoch   97] loss: 3.0021 accuracy: 0.0765
[10/26 15:51:01][INFO] train_test.py:  62: Training: [Epoch   98] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 15:51:09][INFO] train_test.py:  94: Evaluation: [Epoch   98] loss: 3.0021 accuracy: 0.0765
[10/26 15:54:36][INFO] train_test.py:  62: Training: [Epoch   99] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 15:54:44][INFO] train_test.py:  94: Evaluation: [Epoch   99] loss: 3.0021 accuracy: 0.0765
[10/26 15:58:11][INFO] train_test.py:  62: Training: [Epoch  100] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 15:58:19][INFO] train_test.py:  94: Evaluation: [Epoch  100] loss: 3.0021 accuracy: 0.0765
[10/26 15:58:34][INFO] train_test.py: 159: Trained with 100 epochs, lr = 0.001, batchsize = 2, momentum = 0.5 with max validation accuracy of 0.08 done in 5:33:55
[10/27 12:48:51][INFO] run.py:  92: Train with configs:
[10/27 12:48:51][INFO] run.py:  93: 
{ AUGMENTATION      }-> False
{ BATCH_SIZE        }-> 2
{ DATA_JSON         }-> data.json
{ DATA_SEPARATOR    }-> ,
{ DECAY             }-> 0.005
{ DEVICES           }-> [0]
{ EPOCHS            }-> 100
{ FLOW              }-> DeepFlow
{ GPU               }-> 0
{ LABEL_DICT        }-> label_dict.json
{ LOAD              }-> False
{ LR                }-> 0.001
{ MODE              }-> train
{ MODEL_NAME        }-> twin
{ MODEL_TYPE        }-> twin
{ MOMENTUM          }-> 0.5
{ NESTEROV          }-> True
{ NORM              }-> normal
{ NUM_CLASSES       }-> 20
{ NUM_WORKERS       }-> 8
{ N_GPU             }-> 1
{ OUTPUT_DIR        }-> .
{ OUTPUT_FILE       }-> ./pred.txt
{ PATH_DATA         }-> data
{ PATH_MODEL        }-> ./twin
{ PATH_PROCESSED_DATA }-> data_processed
{ SEED              }-> 31
{ SIZE_DATA         }-> [100 120 120]
{ VERSION           }-> 31

[10/27 12:49:15][INFO] run.py:  92: Train with configs:
[10/27 12:49:15][INFO] run.py:  93: 
{ AUGMENTATION      }-> False
{ BATCH_SIZE        }-> 2
{ DATA_JSON         }-> data.json
{ DATA_SEPARATOR    }-> ,
{ DECAY             }-> 0.005
{ DEVICES           }-> [0]
{ EPOCHS            }-> 100
{ FLOW              }-> DeepFlow
{ GPU               }-> 0
{ LABEL_DICT        }-> label_dict.json
{ LOAD              }-> False
{ LR                }-> 0.001
{ MODE              }-> train
{ MODEL_NAME        }-> twin
{ MODEL_TYPE        }-> twin
{ MOMENTUM          }-> 0.5
{ NESTEROV          }-> True
{ NORM              }-> normal
{ NUM_CLASSES       }-> 20
{ NUM_WORKERS       }-> 8
{ N_GPU             }-> 1
{ OUTPUT_DIR        }-> .
{ OUTPUT_FILE       }-> ./pred.txt
{ PATH_DATA         }-> data
{ PATH_MODEL        }-> ./twin
{ PATH_PROCESSED_DATA }-> data_processed
{ SEED              }-> 31
{ SIZE_DATA         }-> [100 120 120]
{ VERSION           }-> 31

[10/27 12:52:29][INFO] train_test.py:  62: Training: [Epoch    1] loss: 2.9957 accuracy: 0.0262 lr: 0.001000
[10/27 12:52:37][INFO] train_test.py:  94: Evaluation: [Epoch    1] loss: 2.9956 accuracy: 0.0383
[10/27 12:56:04][INFO] train_test.py:  62: Training: [Epoch    2] loss: 2.9954 accuracy: 0.0629 lr: 0.001000
[10/27 12:56:11][INFO] train_test.py:  94: Evaluation: [Epoch    2] loss: 2.9954 accuracy: 0.0820
[10/27 12:59:37][INFO] train_test.py:  62: Training: [Epoch    3] loss: 2.9950 accuracy: 0.0944 lr: 0.001000
[10/27 12:59:45][INFO] train_test.py:  94: Evaluation: [Epoch    3] loss: 2.9948 accuracy: 0.1366
[10/27 13:03:12][INFO] train_test.py:  62: Training: [Epoch    4] loss: 2.9932 accuracy: 0.1049 lr: 0.001000
[10/27 13:03:20][INFO] train_test.py:  94: Evaluation: [Epoch    4] loss: 2.9914 accuracy: 0.0874
[10/27 13:09:11][INFO] run.py:  92: Train with configs:
[10/27 13:09:11][INFO] run.py:  93: 
{ AUGMENTATION      }-> False
{ BATCH_SIZE        }-> 2
{ DATA_JSON         }-> data.json
{ DATA_SEPARATOR    }-> ,
{ DECAY             }-> 0.005
{ DEVICES           }-> [0]
{ EPOCHS            }-> 1
{ FLOW              }-> DeepFlow
{ GPU               }-> 0
{ LABEL_DICT        }-> label_dict.json
{ LOAD              }-> False
{ LR                }-> 0.001
{ MODE              }-> train
{ MODEL_NAME        }-> twin
{ MODEL_TYPE        }-> twin
{ MOMENTUM          }-> 0.5
{ NESTEROV          }-> True
{ NORM              }-> normal
{ NUM_CLASSES       }-> 20
{ NUM_WORKERS       }-> 8
{ N_GPU             }-> 1
{ OUTPUT_DIR        }-> .
{ OUTPUT_FILE       }-> ./pred.txt
{ PATH_DATA         }-> /home/dhieu/MediaEval2020/sport/Sport-Video-Classification-MediaEval2020/data
{ PATH_MODEL        }-> ./twin
{ PATH_PROCESSED_DATA }-> /home/dhieu/MediaEval2020/sport/Sport-Video-Classification-MediaEval2020/data_processed
{ SEED              }-> 31
{ SIZE_DATA         }-> [100 120 120]
{ VERSION           }-> 31

[10/27 13:10:39][INFO] run.py:  92: Train with configs:
[10/27 13:10:39][INFO] run.py:  93: 
{ AUGMENTATION      }-> False
{ BATCH_SIZE        }-> 2
{ DATA_JSON         }-> data.json
{ DATA_SEPARATOR    }-> ,
{ DECAY             }-> 0.005
{ DEVICES           }-> [0]
{ EPOCHS            }-> 1
{ FLOW              }-> DeepFlow
{ GPU               }-> 1
{ LABEL_DICT        }-> label_dict.json
{ LOAD              }-> False
{ LR                }-> 0.001
{ MODE              }-> train
{ MODEL_NAME        }-> twin
{ MODEL_TYPE        }-> twin
{ MOMENTUM          }-> 0.5
{ NESTEROV          }-> True
{ NORM              }-> normal
{ NUM_CLASSES       }-> 20
{ NUM_WORKERS       }-> 8
{ N_GPU             }-> 1
{ OUTPUT_DIR        }-> .
{ OUTPUT_FILE       }-> ./pred.txt
{ PATH_DATA         }-> /home/dhieu/MediaEval2020/sport/Sport-Video-Classification-MediaEval2020/data
{ PATH_MODEL        }-> ./twin
{ PATH_PROCESSED_DATA }-> /home/dhieu/MediaEval2020/sport/Sport-Video-Classification-MediaEval2020/data_processed
{ SEED              }-> 31
{ SIZE_DATA         }-> [100 120 120]
{ VERSION           }-> 31

[10/27 13:13:52][INFO] train_test.py:  62: Training: [Epoch    1] loss: 2.9957 accuracy: 0.0262 lr: 0.001000
[10/27 13:14:00][INFO] train_test.py:  94: Evaluation: [Epoch    1] loss: 2.9956 accuracy: 0.0383
[10/27 13:14:07][INFO] train_test.py: 159: Trained with 1 epochs, lr = 0.001, batchsize = 2, momentum = 0.5 with max validation accuracy of 0.04 done in 0:03:23
[10/27 13:17:34][INFO] run.py:  92: Train with configs:
[10/27 13:17:34][INFO] run.py:  93: 
{ AUGMENTATION      }-> False
{ BATCH_SIZE        }-> 2
{ DATA_JSON         }-> data.json
{ DATA_SEPARATOR    }-> ,
{ DECAY             }-> 0.005
{ DEVICES           }-> [0]
{ EPOCHS            }-> 1
{ FLOW              }-> DeepFlow
{ GPU               }-> 1
{ LABEL_DICT        }-> label_dict.json
{ LOAD              }-> False
{ LR                }-> 0.001
{ MODE              }-> train
{ MODEL_NAME        }-> twin
{ MODEL_TYPE        }-> twin
{ MOMENTUM          }-> 0.5
{ NESTEROV          }-> True
{ NORM              }-> normal
{ NUM_CLASSES       }-> 20
{ NUM_WORKERS       }-> 8
{ N_GPU             }-> 1
{ OUTPUT_DIR        }-> .
{ OUTPUT_FILE       }-> ./pred.txt
{ PATH_DATA         }-> /home/dhieu/MediaEval2020/sport/Sport-Video-Classification-MediaEval2020/data
{ PATH_MODEL        }-> ./twin
{ PATH_PROCESSED_DATA }-> /home/dhieu/MediaEval2020/sport/Sport-Video-Classification-MediaEval2020/data_processed
{ SEED              }-> 31
{ SIZE_DATA         }-> [100 120 120]
{ VERSION           }-> 31

[10/27 13:20:49][INFO] train_test.py:  62: Training: [Epoch    1] loss: 2.9957 accuracy: 0.0262 lr: 0.001000
[10/27 13:20:58][INFO] train_test.py:  94: Evaluation: [Epoch    1] loss: 2.9956 accuracy: 0.0383
[10/27 13:21:23][INFO] train_test.py: 159: Trained with 1 epochs, lr = 0.001, batchsize = 2, momentum = 0.5 with max validation accuracy of 0.04 done in 0:03:43
[10/27 13:21:23][DEBUG] font_manager.py: 1259: findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal bold normal>) = 11.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'STIXGeneral' (STIXGeneral-BoldItalic.otf) italic normal bold normal>) = 11.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal bold normal>) = 10.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal bold normal>) = 11.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal bold normal>) = 10.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'NanumBarunGothic' (NanumBarunGothicBold.ttf) normal normal bold normal>) = 10.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntegralsUpD-Bold.otf) normal normal bold normal>) = 10.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal bold normal>) = 11.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal bold condensed>) = 11.535
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal bold normal>) = 10.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal light normal>) = 10.24
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntegralsUpSm-Regular.otf) normal normal regular normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal medium normal>) = 10.145
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal light normal>) = 0.24
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Medium.ttc) normal normal medium normal>) = 10.145
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal bold normal>) = 10.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Symbola' (Symbola_hint.ttf) normal normal 400 normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal bold normal>) = 10.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal bold normal>) = 10.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'STIXIntegralsD' (STIXIntegralsD-Regular.otf) normal normal regular normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'STIXNonUnicode' (STIXNonUnicode-BoldItalic.otf) italic normal bold normal>) = 11.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal bold normal>) = 10.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal bold normal>) = 11.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal bold condensed>) = 10.535
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 400 normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntegralsUpSm-Bold.otf) normal normal bold normal>) = 10.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'STIXVariants' (STIXVariants-Bold.otf) normal normal bold normal>) = 10.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'STIXVariants' (STIXVariants-Regular.otf) normal normal regular normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-R.ttf) normal normal 400 normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Light.ttc) normal normal light normal>) = 10.24
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 400 normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-DemiLight.ttc) normal normal light normal>) = 10.24
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'STIX' (STIX-BoldItalic.otf) italic normal bold normal>) = 11.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizeFiveSym-Regular.otf) normal normal regular normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'STIXSizeFourSym' (STIXSizeFourSym-Regular.otf) normal normal regular normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal bold normal>) = 11.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal medium normal>) = 11.145
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 400 normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 400 normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 400 normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'STIXNonUnicode' (STIXNonUnicode-Italic.otf) italic normal 400 normal>) = 11.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'STIX' (STIX-Regular.otf) normal normal regular normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal bold condensed>) = 0.5349999999999999
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal bold normal>) = 10.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'STIXNonUnicode' (STIXNonUnicode-Bold.otf) normal normal bold normal>) = 10.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal bold normal>) = 10.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal bold normal>) = 11.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Padauk Book' (Padauk-bookbold.ttf) normal normal book normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Black.ttc) normal normal black normal>) = 10.525
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal bold normal>) = 11.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal bold normal>) = 10.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal bold normal>) = 11.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Padauk Book' (Padauk-book.ttf) normal normal book normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal bold normal>) = 11.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'STIXGeneral' (STIXGeneral-Regular.otf) normal normal regular normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'NanumBarunGothic' (NanumBarunGothic.ttf) normal normal 400 normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizeTwoSym-Bold.otf) normal normal bold normal>) = 10.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'STIXIntegralsD' (STIXIntegralsD-Bold.otf) normal normal bold normal>) = 10.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal bold normal>) = 10.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Padauk' (Padauk-bold.ttf) normal normal bold normal>) = 10.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'STIXGeneral' (STIXGeneral-Bold.otf) normal normal bold normal>) = 10.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'STIXNonUnicode' (STIXNonUnicode-Regular.otf) normal normal regular normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal bold normal>) = 10.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 400 normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal bold condensed>) = 11.535
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal bold normal>) = 10.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'STIX' (STIX-Italic.otf) italic normal 400 normal>) = 11.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal bold normal>) = 10.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'TakaoPGothic' (TakaoPGothic.ttf) normal normal 400 normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal bold normal>) = 11.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal bold normal>) = 10.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'STIXIntegralsUp' (STIXIntegralsUp-Regular.otf) normal normal regular normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 400 normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal bold normal>) = 10.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal bold condensed>) = 1.535
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal book normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 0.25
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal bold normal>) = 11.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 400 normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 400 normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'STIXIntegralsUp' (STIXIntegralsUp-Bold.otf) normal normal bold normal>) = 10.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Lohit Punjabi' (Lohit-Punjabi.ttf) normal normal 400 normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'NanumMyeongjo' (NanumMyeongjo.ttf) normal normal 400 normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal bold normal>) = 11.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal bold normal>) = 10.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'STIXSizeOneSym' (STIXSizeOneSym-Bold.otf) normal normal bold normal>) = 10.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'STIXGeneral' (STIXGeneral-Italic.otf) italic normal 400 normal>) = 11.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'STIXIntegralsSm' (STIXIntegralsSm-Regular.otf) normal normal regular normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 1.25
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal bold normal>) = 11.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal bold normal>) = 11.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal bold normal>) = 11.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal bold normal>) = 10.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'STIXSizeFourSym' (STIXSizeFourSym-Bold.otf) normal normal bold normal>) = 10.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal bold normal>) = 10.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal light normal>) = 10.24
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal light normal>) = 11.24
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizeTwoSym-Regular.otf) normal normal regular normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal bold normal>) = 10.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizeThreeSym-Regular.otf) normal normal regular normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 400 normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntegralsUpD-Regular.otf) normal normal regular normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.25
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal bold normal>) = 10.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'TakaoPGothic' (fonts-japanese-gothic.ttf) normal normal 400 normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal bold normal>) = 10.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal light normal>) = 11.24
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'STIX Math' (STIXMath-Regular.otf) normal normal regular normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal bold normal>) = 11.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'STIXIntegralsSm' (STIXIntegralsSm-Bold.otf) normal normal bold normal>) = 10.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal bold normal>) = 10.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Padauk' (Padauk.ttf) normal normal 400 normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'STIX' (STIX-Bold.otf) normal normal bold normal>) = 10.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'NanumGothic' (NanumGothic.ttf) normal normal 400 normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal bold normal>) = 11.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 400 normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizeThreeSym-Bold.otf) normal normal bold normal>) = 10.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal bold normal>) = 11.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Thin.ttc) normal normal 400 normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal bold normal>) = 11.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'NanumGothic' (NanumGothicBold.ttf) normal normal bold normal>) = 10.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'STIXSizeOneSym' (STIXSizeOneSym-Regular.otf) normal normal regular normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal bold condensed>) = 10.535
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'NanumMyeongjo' (NanumMyeongjoBold.ttf) normal normal bold normal>) = 10.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal bold normal>) = 11.335
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal regular normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
[10/27 13:21:23][DEBUG] font_manager.py: 1271: findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
[10/27 13:21:23][DEBUG] font_manager.py: 1294: findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/opt/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
[10/27 13:23:45][INFO] run.py:  92: Train with configs:
[10/27 13:23:45][INFO] run.py:  93: 
{ AUGMENTATION      }-> False
{ BATCH_SIZE        }-> 8
{ DATA_JSON         }-> data.json
{ DATA_SEPARATOR    }-> ,
{ DECAY             }-> 0.005
{ DEVICES           }-> [0]
{ EPOCHS            }-> 100
{ FLOW              }-> DeepFlow
{ GPU               }-> 1
{ LABEL_DICT        }-> label_dict.json
{ LOAD              }-> False
{ LR                }-> 0.001
{ MODE              }-> train
{ MODEL_NAME        }-> twin
{ MODEL_TYPE        }-> twin
{ MOMENTUM          }-> 0.5
{ NESTEROV          }-> True
{ NORM              }-> normal
{ NUM_CLASSES       }-> 20
{ NUM_WORKERS       }-> 8
{ N_GPU             }-> 1
{ OUTPUT_DIR        }-> .
{ OUTPUT_FILE       }-> ./pred.txt
{ PATH_DATA         }-> /home/dhieu/MediaEval2020/sport/Sport-Video-Classification-MediaEval2020/data
{ PATH_MODEL        }-> ./twin
{ PATH_PROCESSED_DATA }-> /home/dhieu/MediaEval2020/sport/Sport-Video-Classification-MediaEval2020/data_processed
{ SEED              }-> 31
{ SIZE_DATA         }-> [100 120 120]
{ VERSION           }-> 31

[10/27 13:25:34][INFO] run.py:  92: Train with configs:
[10/27 13:25:34][INFO] run.py:  93: 
{ AUGMENTATION      }-> False
{ BATCH_SIZE        }-> 8
{ DATA_JSON         }-> data.json
{ DATA_SEPARATOR    }-> ,
{ DECAY             }-> 0.005
{ DEVICES           }-> [0]
{ EPOCHS            }-> 100
{ FLOW              }-> DeepFlow
{ GPU               }-> 1
{ LABEL_DICT        }-> label_dict.json
{ LOAD              }-> False
{ LR                }-> 0.001
{ MODE              }-> train
{ MODEL_NAME        }-> twin
{ MODEL_TYPE        }-> twin
{ MOMENTUM          }-> 0.5
{ NESTEROV          }-> True
{ NORM              }-> normal
{ NUM_CLASSES       }-> 20
{ NUM_WORKERS       }-> 8
{ N_GPU             }-> 1
{ OUTPUT_DIR        }-> .
{ OUTPUT_FILE       }-> ./pred.txt
{ PATH_DATA         }-> /home/dhieu/MediaEval2020/sport/Sport-Video-Classification-MediaEval2020/data
{ PATH_MODEL        }-> ./twin
{ PATH_PROCESSED_DATA }-> /home/dhieu/MediaEval2020/sport/Sport-Video-Classification-MediaEval2020/data_processed
{ SEED              }-> 31
{ SIZE_DATA         }-> [100 120 120]
{ VERSION           }-> 31

[10/27 13:26:22][INFO] run.py:  92: Train with configs:
[10/27 13:26:22][INFO] run.py:  93: 
{ AUGMENTATION      }-> False
{ BATCH_SIZE        }-> 8
{ DATA_JSON         }-> data.json
{ DATA_SEPARATOR    }-> ,
{ DECAY             }-> 0.005
{ DEVICES           }-> [0]
{ EPOCHS            }-> 100
{ FLOW              }-> DeepFlow
{ GPU               }-> 1
{ LABEL_DICT        }-> label_dict.json
{ LOAD              }-> False
{ LR                }-> 0.001
{ MODE              }-> train
{ MODEL_NAME        }-> twin
{ MODEL_TYPE        }-> twin
{ MOMENTUM          }-> 0.5
{ NESTEROV          }-> True
{ NORM              }-> normal
{ NUM_CLASSES       }-> 20
{ NUM_WORKERS       }-> 8
{ N_GPU             }-> 1
{ OUTPUT_DIR        }-> .
{ OUTPUT_FILE       }-> ./pred.txt
{ PATH_DATA         }-> /home/dhieu/MediaEval2020/sport/Sport-Video-Classification-MediaEval2020/data
{ PATH_MODEL        }-> ./twin
{ PATH_PROCESSED_DATA }-> /home/dhieu/MediaEval2020/sport/Sport-Video-Classification-MediaEval2020/data_processed
{ SEED              }-> 31
{ SIZE_DATA         }-> [100 120 120]
{ VERSION           }-> 31

[10/27 13:26:43][INFO] run.py:  92: Train with configs:
[10/27 13:26:43][INFO] run.py:  93: 
{ AUGMENTATION      }-> False
{ BATCH_SIZE        }-> 4
{ DATA_JSON         }-> data.json
{ DATA_SEPARATOR    }-> ,
{ DECAY             }-> 0.005
{ DEVICES           }-> [0]
{ EPOCHS            }-> 100
{ FLOW              }-> DeepFlow
{ GPU               }-> 1
{ LABEL_DICT        }-> label_dict.json
{ LOAD              }-> False
{ LR                }-> 0.001
{ MODE              }-> train
{ MODEL_NAME        }-> twin
{ MODEL_TYPE        }-> twin
{ MOMENTUM          }-> 0.5
{ NESTEROV          }-> True
{ NORM              }-> normal
{ NUM_CLASSES       }-> 20
{ NUM_WORKERS       }-> 8
{ N_GPU             }-> 1
{ OUTPUT_DIR        }-> .
{ OUTPUT_FILE       }-> ./pred.txt
{ PATH_DATA         }-> /home/dhieu/MediaEval2020/sport/Sport-Video-Classification-MediaEval2020/data
{ PATH_MODEL        }-> ./twin
{ PATH_PROCESSED_DATA }-> /home/dhieu/MediaEval2020/sport/Sport-Video-Classification-MediaEval2020/data_processed
{ SEED              }-> 31
{ SIZE_DATA         }-> [100 120 120]
{ VERSION           }-> 31

[10/27 13:28:40][INFO] train_test.py:  62: Training: [Epoch    1] loss: 2.9957 accuracy: 0.0262 lr: 0.001000
[10/27 13:30:22][INFO] run.py:  92: Train with configs:
[10/27 13:30:22][INFO] run.py:  93: 
{ AUGMENTATION      }-> False
{ BATCH_SIZE        }-> 4
{ DATA_JSON         }-> data.json
{ DATA_SEPARATOR    }-> ,
{ DECAY             }-> 0.005
{ DEVICES           }-> [0]
{ EPOCHS            }-> 100
{ FLOW              }-> DeepFlow
{ GPU               }-> 1
{ LABEL_DICT        }-> label_dict.json
{ LOAD              }-> False
{ LR                }-> 0.001
{ MODE              }-> train
{ MODEL_NAME        }-> twin
{ MODEL_TYPE        }-> twin
{ MOMENTUM          }-> 0.5
{ NESTEROV          }-> True
{ NORM              }-> normal
{ NUM_CLASSES       }-> 20
{ NUM_WORKERS       }-> 8
{ N_GPU             }-> 1
{ OUTPUT_DIR        }-> .
{ OUTPUT_FILE       }-> ./pred.txt
{ PATH_DATA         }-> /home/dhieu/MediaEval2020/sport/Sport-Video-Classification-MediaEval2020/data
{ PATH_MODEL        }-> ./twin
{ PATH_PROCESSED_DATA }-> /home/dhieu/MediaEval2020/sport/Sport-Video-Classification-MediaEval2020/data_processed
{ SEED              }-> 31
{ SIZE_DATA         }-> [100 120 120]
{ VERSION           }-> 31

[10/27 13:32:19][INFO] train_test.py:  62: Training: [Epoch    1] loss: 2.9957 accuracy: 0.0262 lr: 0.001000
[10/27 13:32:58][INFO] run.py:  92: Train with configs:
[10/27 13:32:58][INFO] run.py:  93: 
{ AUGMENTATION      }-> False
{ BATCH_SIZE        }-> 3
{ DATA_JSON         }-> data.json
{ DATA_SEPARATOR    }-> ,
{ DECAY             }-> 0.005
{ DEVICES           }-> [0]
{ EPOCHS            }-> 100
{ FLOW              }-> DeepFlow
{ GPU               }-> 1
{ LABEL_DICT        }-> label_dict.json
{ LOAD              }-> False
{ LR                }-> 0.001
{ MODE              }-> train
{ MODEL_NAME        }-> twin
{ MODEL_TYPE        }-> twin
{ MOMENTUM          }-> 0.5
{ NESTEROV          }-> True
{ NORM              }-> normal
{ NUM_CLASSES       }-> 20
{ NUM_WORKERS       }-> 8
{ N_GPU             }-> 1
{ OUTPUT_DIR        }-> .
{ OUTPUT_FILE       }-> ./pred.txt
{ PATH_DATA         }-> /home/dhieu/MediaEval2020/sport/Sport-Video-Classification-MediaEval2020/data
{ PATH_MODEL        }-> ./twin
{ PATH_PROCESSED_DATA }-> /home/dhieu/MediaEval2020/sport/Sport-Video-Classification-MediaEval2020/data_processed
{ SEED              }-> 31
{ SIZE_DATA         }-> [100 120 120]
{ VERSION           }-> 31

[10/27 13:35:19][INFO] train_test.py:  62: Training: [Epoch    1] loss: 2.9957 accuracy: 0.0262 lr: 0.001000
[10/27 13:35:27][INFO] train_test.py:  94: Evaluation: [Epoch    1] loss: 2.9956 accuracy: 0.0328
[10/27 13:38:05][INFO] train_test.py:  62: Training: [Epoch    2] loss: 2.9956 accuracy: 0.0437 lr: 0.001000
[10/27 13:38:13][INFO] train_test.py:  94: Evaluation: [Epoch    2] loss: 2.9955 accuracy: 0.0820
[10/27 13:40:45][INFO] train_test.py:  62: Training: [Epoch    3] loss: 2.9954 accuracy: 0.0682 lr: 0.001000
[10/27 13:40:54][INFO] train_test.py:  94: Evaluation: [Epoch    3] loss: 2.9954 accuracy: 0.0820
[10/27 13:43:26][INFO] train_test.py:  62: Training: [Epoch    4] loss: 2.9951 accuracy: 0.0787 lr: 0.001000
[10/27 13:43:34][INFO] train_test.py:  94: Evaluation: [Epoch    4] loss: 2.9951 accuracy: 0.1202
[10/27 13:46:07][INFO] train_test.py:  62: Training: [Epoch    5] loss: 2.9945 accuracy: 0.1224 lr: 0.001000
[10/27 13:46:15][INFO] train_test.py:  94: Evaluation: [Epoch    5] loss: 2.9943 accuracy: 0.1093
[10/27 13:48:47][INFO] train_test.py:  62: Training: [Epoch    6] loss: 2.9924 accuracy: 0.1049 lr: 0.001000
[10/27 13:48:55][INFO] train_test.py:  94: Evaluation: [Epoch    6] loss: 2.9910 accuracy: 0.0820
[10/27 13:51:27][INFO] train_test.py:  62: Training: [Epoch    7] loss: 2.9791 accuracy: 0.0927 lr: 0.001000
[10/27 13:51:35][INFO] train_test.py:  94: Evaluation: [Epoch    7] loss: 2.9698 accuracy: 0.1366
[10/27 13:54:07][INFO] train_test.py:  62: Training: [Epoch    8] loss: 2.9571 accuracy: 0.0962 lr: 0.001000
[10/27 13:54:16][INFO] train_test.py:  94: Evaluation: [Epoch    8] loss: 2.9593 accuracy: 0.1202
[10/27 13:56:48][INFO] train_test.py:  62: Training: [Epoch    9] loss: 2.9464 accuracy: 0.1241 lr: 0.001000
[10/27 13:56:56][INFO] train_test.py:  94: Evaluation: [Epoch    9] loss: 2.9495 accuracy: 0.0984
[10/27 13:59:28][INFO] train_test.py:  62: Training: [Epoch   10] loss: 2.9336 accuracy: 0.1329 lr: 0.001000
[10/27 13:59:36][INFO] train_test.py:  94: Evaluation: [Epoch   10] loss: 2.9289 accuracy: 0.1366
[10/27 14:02:08][INFO] train_test.py:  62: Training: [Epoch   11] loss: 2.9148 accuracy: 0.1556 lr: 0.001000
[10/27 14:02:17][INFO] train_test.py:  94: Evaluation: [Epoch   11] loss: 2.9521 accuracy: 0.1148
[10/27 14:04:33][INFO] train_test.py:  62: Training: [Epoch   12] loss: 2.9054 accuracy: 0.1731 lr: 0.001000
[10/27 14:04:41][INFO] train_test.py:  94: Evaluation: [Epoch   12] loss: 2.9412 accuracy: 0.1257
[10/27 14:06:57][INFO] train_test.py:  62: Training: [Epoch   13] loss: 2.8833 accuracy: 0.1958 lr: 0.001000
[10/27 14:07:06][INFO] train_test.py:  94: Evaluation: [Epoch   13] loss: 2.8855 accuracy: 0.1858
[10/27 14:09:38][INFO] train_test.py:  62: Training: [Epoch   14] loss: 2.7945 accuracy: 0.2832 lr: 0.001000
[10/27 14:09:46][INFO] train_test.py:  94: Evaluation: [Epoch   14] loss: 2.8457 accuracy: 0.2022
[10/27 14:12:19][INFO] train_test.py:  62: Training: [Epoch   15] loss: 2.7314 accuracy: 0.3531 lr: 0.001000
[10/27 14:12:27][INFO] train_test.py:  94: Evaluation: [Epoch   15] loss: 2.8739 accuracy: 0.1967
[10/27 14:15:25][INFO] train_test.py:  62: Training: [Epoch   16] loss: 2.7189 accuracy: 0.3584 lr: 0.001000
[10/27 14:16:01][INFO] train_test.py:  94: Evaluation: [Epoch   16] loss: 2.7899 accuracy: 0.2842
[10/27 14:18:59][INFO] train_test.py:  62: Training: [Epoch   17] loss: 2.6587 accuracy: 0.4266 lr: 0.001000
[10/27 14:19:08][INFO] train_test.py:  94: Evaluation: [Epoch   17] loss: 2.8421 accuracy: 0.2295
[10/27 14:21:23][INFO] train_test.py:  62: Training: [Epoch   18] loss: 2.6550 accuracy: 0.4248 lr: 0.001000
[10/27 14:21:31][INFO] train_test.py:  94: Evaluation: [Epoch   18] loss: 2.7830 accuracy: 0.2951
[10/27 14:24:29][INFO] train_test.py:  62: Training: [Epoch   19] loss: 2.6412 accuracy: 0.4371 lr: 0.001000
[10/27 14:24:38][INFO] train_test.py:  94: Evaluation: [Epoch   19] loss: 2.7604 accuracy: 0.3115
[10/27 14:27:24][INFO] train_test.py:  62: Training: [Epoch   20] loss: 2.6196 accuracy: 0.4598 lr: 0.001000
[10/27 14:27:33][INFO] train_test.py:  94: Evaluation: [Epoch   20] loss: 2.7765 accuracy: 0.3005
[10/27 14:29:48][INFO] train_test.py:  62: Training: [Epoch   21] loss: 2.6397 accuracy: 0.4423 lr: 0.001000
[10/27 14:29:57][INFO] train_test.py:  94: Evaluation: [Epoch   21] loss: 2.7530 accuracy: 0.3333
[10/27 14:32:46][INFO] train_test.py:  62: Training: [Epoch   22] loss: 2.6263 accuracy: 0.4493 lr: 0.001000
[10/27 14:32:54][INFO] train_test.py:  94: Evaluation: [Epoch   22] loss: 2.7606 accuracy: 0.3224
[10/27 14:35:10][INFO] train_test.py:  62: Training: [Epoch   23] loss: 2.5824 accuracy: 0.4983 lr: 0.001000
[10/27 14:35:18][INFO] train_test.py:  94: Evaluation: [Epoch   23] loss: 2.7512 accuracy: 0.3169
[10/27 14:38:42][INFO] train_test.py:  62: Training: [Epoch   24] loss: 2.5925 accuracy: 0.4860 lr: 0.001000
[10/27 14:38:51][INFO] train_test.py:  94: Evaluation: [Epoch   24] loss: 2.9907 accuracy: 0.0874
[10/27 14:41:06][INFO] train_test.py:  62: Training: [Epoch   25] loss: 2.6973 accuracy: 0.3794 lr: 0.001000
[10/27 14:41:15][INFO] train_test.py:  94: Evaluation: [Epoch   25] loss: 2.8848 accuracy: 0.1858
[10/27 14:43:29][INFO] train_test.py:  62: Training: [Epoch   26] loss: 2.6483 accuracy: 0.4301 lr: 0.001000
[10/27 14:43:38][INFO] train_test.py:  94: Evaluation: [Epoch   26] loss: 2.7883 accuracy: 0.2842
[10/27 14:45:52][INFO] train_test.py:  62: Training: [Epoch   27] loss: 2.6348 accuracy: 0.4423 lr: 0.001000
[10/27 14:46:01][INFO] train_test.py:  94: Evaluation: [Epoch   27] loss: 2.7507 accuracy: 0.3279
[10/27 14:48:51][INFO] train_test.py:  62: Training: [Epoch   28] loss: 2.6323 accuracy: 0.4476 lr: 0.001000
[10/27 14:49:00][INFO] train_test.py:  94: Evaluation: [Epoch   28] loss: 2.8027 accuracy: 0.2678
[10/27 14:51:15][INFO] train_test.py:  62: Training: [Epoch   29] loss: 2.5932 accuracy: 0.4878 lr: 0.001000
[10/27 14:51:23][INFO] train_test.py:  94: Evaluation: [Epoch   29] loss: 2.7992 accuracy: 0.2787
[10/27 14:53:37][INFO] train_test.py:  62: Training: [Epoch   30] loss: 2.6210 accuracy: 0.4580 lr: 0.001000
[10/27 14:53:46][INFO] train_test.py:  94: Evaluation: [Epoch   30] loss: 2.7278 accuracy: 0.3552
[10/27 14:56:17][INFO] train_test.py:  62: Training: [Epoch   31] loss: 2.6208 accuracy: 0.4580 lr: 0.001000
[10/27 14:56:25][INFO] train_test.py:  94: Evaluation: [Epoch   31] loss: 2.7570 accuracy: 0.3279
[10/27 14:58:40][INFO] train_test.py:  62: Training: [Epoch   32] loss: 2.5809 accuracy: 0.4983 lr: 0.001000
[10/27 14:58:48][INFO] train_test.py:  94: Evaluation: [Epoch   32] loss: 2.7355 accuracy: 0.3443
[10/27 15:01:02][INFO] train_test.py:  62: Training: [Epoch   33] loss: 2.6539 accuracy: 0.4266 lr: 0.001000
[10/27 15:01:11][INFO] train_test.py:  94: Evaluation: [Epoch   33] loss: 2.8241 accuracy: 0.2568
[10/27 15:03:25][INFO] train_test.py:  62: Training: [Epoch   34] loss: 2.6549 accuracy: 0.4248 lr: 0.001000
[10/27 15:03:33][INFO] train_test.py:  94: Evaluation: [Epoch   34] loss: 2.7978 accuracy: 0.2787
[10/27 15:05:48][INFO] train_test.py:  62: Training: [Epoch   35] loss: 2.6289 accuracy: 0.4493 lr: 0.001000
[10/27 15:05:56][INFO] train_test.py:  94: Evaluation: [Epoch   35] loss: 2.7259 accuracy: 0.3607
[10/27 15:08:27][INFO] train_test.py:  62: Training: [Epoch   36] loss: 2.6241 accuracy: 0.4528 lr: 0.001000
[10/27 15:08:36][INFO] train_test.py:  94: Evaluation: [Epoch   36] loss: 2.8805 accuracy: 0.1913
[10/27 15:10:50][INFO] train_test.py:  62: Training: [Epoch   37] loss: 2.6083 accuracy: 0.4703 lr: 0.001000
[10/27 15:11:00][INFO] train_test.py:  94: Evaluation: [Epoch   37] loss: 2.7331 accuracy: 0.3443
[10/27 15:13:14][INFO] train_test.py:  62: Training: [Epoch   38] loss: 2.6317 accuracy: 0.4458 lr: 0.001000
[10/27 15:13:22][INFO] train_test.py:  94: Evaluation: [Epoch   38] loss: 2.7768 accuracy: 0.3005
[10/27 15:15:37][INFO] train_test.py:  62: Training: [Epoch   39] loss: 2.6189 accuracy: 0.4598 lr: 0.001000
[10/27 15:15:45][INFO] train_test.py:  94: Evaluation: [Epoch   39] loss: 2.7578 accuracy: 0.3224
[10/27 15:18:00][INFO] train_test.py:  62: Training: [Epoch   40] loss: 2.5914 accuracy: 0.4860 lr: 0.001000
[10/27 15:18:08][INFO] train_test.py:  94: Evaluation: [Epoch   40] loss: 2.7427 accuracy: 0.3388
[10/27 15:20:22][INFO] train_test.py:  62: Training: [Epoch   41] loss: 2.6240 accuracy: 0.4545 lr: 0.001000
[10/27 15:20:30][INFO] train_test.py:  94: Evaluation: [Epoch   41] loss: 2.7486 accuracy: 0.3279
[10/27 15:22:45][INFO] train_test.py:  62: Training: [Epoch   42] loss: 2.8047 accuracy: 0.2762 lr: 0.001000
[10/27 15:22:53][INFO] train_test.py:  94: Evaluation: [Epoch   42] loss: 2.9135 accuracy: 0.1639
[10/27 15:25:07][INFO] train_test.py:  62: Training: [Epoch   43] loss: 2.8370 accuracy: 0.2395 lr: 0.001000
[10/27 15:25:15][INFO] train_test.py:  94: Evaluation: [Epoch   43] loss: 2.9291 accuracy: 0.1475
[10/27 15:27:28][INFO] train_test.py:  62: Training: [Epoch   44] loss: 2.8157 accuracy: 0.2622 lr: 0.001000
[10/27 15:27:36][INFO] train_test.py:  94: Evaluation: [Epoch   44] loss: 2.8447 accuracy: 0.2350
[10/27 15:29:50][INFO] train_test.py:  62: Training: [Epoch   45] loss: 2.7673 accuracy: 0.3112 lr: 0.001000
[10/27 15:29:59][INFO] train_test.py:  94: Evaluation: [Epoch   45] loss: 2.8035 accuracy: 0.2787
[10/27 15:32:13][INFO] train_test.py:  62: Training: [Epoch   46] loss: 2.7077 accuracy: 0.3706 lr: 0.001000
[10/27 15:32:21][INFO] train_test.py:  94: Evaluation: [Epoch   46] loss: 2.7970 accuracy: 0.2787
[10/27 15:34:36][INFO] train_test.py:  62: Training: [Epoch   47] loss: 2.6761 accuracy: 0.4003 lr: 0.001000
[10/27 15:34:46][INFO] train_test.py:  94: Evaluation: [Epoch   47] loss: 2.7917 accuracy: 0.2896
[10/27 15:37:00][INFO] train_test.py:  62: Training: [Epoch   48] loss: 2.6535 accuracy: 0.4248 lr: 0.001000
[10/27 15:37:08][INFO] train_test.py:  94: Evaluation: [Epoch   48] loss: 2.7392 accuracy: 0.3388
[10/27 15:39:23][INFO] train_test.py:  62: Training: [Epoch   49] loss: 2.7866 accuracy: 0.2920 lr: 0.001000
[10/27 15:39:31][INFO] train_test.py:  94: Evaluation: [Epoch   49] loss: 2.9567 accuracy: 0.1202
[10/27 15:41:45][INFO] train_test.py:  62: Training: [Epoch   50] loss: 2.9042 accuracy: 0.1731 lr: 0.001000
[10/27 15:41:54][INFO] train_test.py:  94: Evaluation: [Epoch   50] loss: 2.9340 accuracy: 0.1421
[10/27 15:44:08][INFO] train_test.py:  62: Training: [Epoch   51] loss: 2.8958 accuracy: 0.1801 lr: 0.001000
[10/27 15:44:16][INFO] train_test.py:  94: Evaluation: [Epoch   51] loss: 2.9962 accuracy: 0.0820
[10/27 15:46:30][INFO] train_test.py:  62: Training: [Epoch   52] loss: 2.9682 accuracy: 0.1101 lr: 0.001000
[10/27 15:46:39][INFO] train_test.py:  94: Evaluation: [Epoch   52] loss: 2.9907 accuracy: 0.0874
[10/27 15:48:53][INFO] train_test.py:  62: Training: [Epoch   53] loss: 2.9612 accuracy: 0.1171 lr: 0.001000
[10/27 15:49:01][INFO] train_test.py:  94: Evaluation: [Epoch   53] loss: 2.9907 accuracy: 0.0874
[10/27 15:51:17][INFO] train_test.py:  62: Training: [Epoch   54] loss: 3.0143 accuracy: 0.0647 lr: 0.001000
[10/27 15:51:27][INFO] train_test.py:  94: Evaluation: [Epoch   54] loss: 3.0290 accuracy: 0.0492
[10/27 15:53:41][INFO] train_test.py:  62: Training: [Epoch   55] loss: 3.0241 accuracy: 0.0542 lr: 0.001000
[10/27 15:53:50][INFO] train_test.py:  94: Evaluation: [Epoch   55] loss: 3.0290 accuracy: 0.0492
[10/27 15:56:05][INFO] train_test.py:  62: Training: [Epoch   56] loss: 3.0241 accuracy: 0.0542 lr: 0.001000
[10/27 15:56:13][INFO] train_test.py:  94: Evaluation: [Epoch   56] loss: 3.0290 accuracy: 0.0492
[10/27 15:58:28][INFO] train_test.py:  62: Training: [Epoch   57] loss: 3.0241 accuracy: 0.0542 lr: 0.001000
[10/27 15:58:36][INFO] train_test.py:  94: Evaluation: [Epoch   57] loss: 3.0290 accuracy: 0.0492
[10/27 16:00:51][INFO] train_test.py:  62: Training: [Epoch   58] loss: 3.0232 accuracy: 0.0542 lr: 0.001000
[10/27 16:01:00][INFO] train_test.py:  94: Evaluation: [Epoch   58] loss: 3.0290 accuracy: 0.0492
[10/27 16:05:50][INFO] train_test.py:  62: Training: [Epoch   59] loss: 3.0241 accuracy: 0.0542 lr: 0.001000
[10/27 16:08:00][INFO] train_test.py:  94: Evaluation: [Epoch   59] loss: 3.0290 accuracy: 0.0492
[10/27 16:10:20][INFO] train_test.py:  62: Training: [Epoch   60] loss: 3.0241 accuracy: 0.0542 lr: 0.001000
[10/27 16:10:31][INFO] train_test.py:  94: Evaluation: [Epoch   60] loss: 3.0290 accuracy: 0.0492
[10/27 16:15:26][INFO] train_test.py:  62: Training: [Epoch   61] loss: 3.0241 accuracy: 0.0542 lr: 0.001000
[10/27 16:15:37][INFO] train_test.py:  94: Evaluation: [Epoch   61] loss: 3.0290 accuracy: 0.0492
[10/27 16:18:00][INFO] train_test.py:  62: Training: [Epoch   62] loss: 3.0241 accuracy: 0.0542 lr: 0.001000
[10/27 16:18:09][INFO] train_test.py:  94: Evaluation: [Epoch   62] loss: 3.0290 accuracy: 0.0492
[10/27 16:20:23][INFO] train_test.py:  62: Training: [Epoch   63] loss: 3.0241 accuracy: 0.0542 lr: 0.001000
[10/27 16:20:31][INFO] train_test.py:  94: Evaluation: [Epoch   63] loss: 3.0290 accuracy: 0.0492
[10/27 16:22:46][INFO] train_test.py:  62: Training: [Epoch   64] loss: 3.0241 accuracy: 0.0542 lr: 0.001000
[10/27 16:22:54][INFO] train_test.py:  94: Evaluation: [Epoch   64] loss: 3.0290 accuracy: 0.0492
[10/27 16:25:09][INFO] train_test.py:  62: Training: [Epoch   65] loss: 3.0241 accuracy: 0.0542 lr: 0.001000
[10/27 16:25:18][INFO] train_test.py:  94: Evaluation: [Epoch   65] loss: 3.0290 accuracy: 0.0492
[10/27 16:27:32][INFO] train_test.py:  62: Training: [Epoch   66] loss: 3.0241 accuracy: 0.0542 lr: 0.001000
[10/27 16:27:40][INFO] train_test.py:  94: Evaluation: [Epoch   66] loss: 3.0290 accuracy: 0.0492
[10/27 16:29:55][INFO] train_test.py:  62: Training: [Epoch   67] loss: 3.0241 accuracy: 0.0542 lr: 0.001000
[10/27 16:30:03][INFO] train_test.py:  94: Evaluation: [Epoch   67] loss: 3.0290 accuracy: 0.0492
[10/27 16:32:17][INFO] train_test.py:  62: Training: [Epoch   68] loss: 3.0241 accuracy: 0.0542 lr: 0.001000
[10/27 16:32:25][INFO] train_test.py:  94: Evaluation: [Epoch   68] loss: 3.0290 accuracy: 0.0492
[10/27 16:34:40][INFO] train_test.py:  62: Training: [Epoch   69] loss: 3.0241 accuracy: 0.0542 lr: 0.001000
[10/27 16:34:48][INFO] train_test.py:  94: Evaluation: [Epoch   69] loss: 3.0290 accuracy: 0.0492
[10/27 16:37:02][INFO] train_test.py:  62: Training: [Epoch   70] loss: 3.0241 accuracy: 0.0542 lr: 0.001000
[10/27 16:37:11][INFO] train_test.py:  94: Evaluation: [Epoch   70] loss: 3.0290 accuracy: 0.0492
[10/27 16:39:26][INFO] train_test.py:  62: Training: [Epoch   71] loss: 3.0241 accuracy: 0.0542 lr: 0.001000
[10/27 16:39:34][INFO] train_test.py:  94: Evaluation: [Epoch   71] loss: 3.0290 accuracy: 0.0492
[10/27 16:41:49][INFO] train_test.py:  62: Training: [Epoch   72] loss: 3.0241 accuracy: 0.0542 lr: 0.001000
[10/27 16:41:58][INFO] train_test.py:  94: Evaluation: [Epoch   72] loss: 3.0290 accuracy: 0.0492
[10/27 16:44:12][INFO] train_test.py:  62: Training: [Epoch   73] loss: 3.0241 accuracy: 0.0542 lr: 0.001000
[10/27 16:44:20][INFO] train_test.py:  94: Evaluation: [Epoch   73] loss: 3.0290 accuracy: 0.0492
[10/27 16:46:35][INFO] train_test.py:  62: Training: [Epoch   74] loss: 3.0241 accuracy: 0.0542 lr: 0.001000
[10/27 16:46:43][INFO] train_test.py:  94: Evaluation: [Epoch   74] loss: 3.0290 accuracy: 0.0492
[10/27 16:48:57][INFO] train_test.py:  62: Training: [Epoch   75] loss: 3.0232 accuracy: 0.0542 lr: 0.001000
[10/27 16:49:05][INFO] train_test.py:  94: Evaluation: [Epoch   75] loss: 3.0290 accuracy: 0.0492
[10/27 16:53:55][INFO] train_test.py:  62: Training: [Epoch   76] loss: 3.0241 accuracy: 0.0542 lr: 0.001000
[10/27 16:54:03][INFO] train_test.py:  94: Evaluation: [Epoch   76] loss: 3.0290 accuracy: 0.0492
[10/27 16:56:18][INFO] train_test.py:  62: Training: [Epoch   77] loss: 3.0241 accuracy: 0.0542 lr: 0.001000
[10/27 16:56:26][INFO] train_test.py:  94: Evaluation: [Epoch   77] loss: 3.0290 accuracy: 0.0492
[10/27 16:58:41][INFO] train_test.py:  62: Training: [Epoch   78] loss: 3.0241 accuracy: 0.0542 lr: 0.001000
[10/27 16:58:49][INFO] train_test.py:  94: Evaluation: [Epoch   78] loss: 3.0290 accuracy: 0.0492
[10/27 17:01:04][INFO] train_test.py:  62: Training: [Epoch   79] loss: 3.0241 accuracy: 0.0542 lr: 0.001000
[10/27 17:01:12][INFO] train_test.py:  94: Evaluation: [Epoch   79] loss: 3.0290 accuracy: 0.0492
[10/27 17:03:27][INFO] train_test.py:  62: Training: [Epoch   80] loss: 3.0241 accuracy: 0.0542 lr: 0.001000
[10/27 17:03:35][INFO] train_test.py:  94: Evaluation: [Epoch   80] loss: 3.0290 accuracy: 0.0492
[10/27 17:05:50][INFO] train_test.py:  62: Training: [Epoch   81] loss: 3.0241 accuracy: 0.0542 lr: 0.001000
[10/27 17:05:58][INFO] train_test.py:  94: Evaluation: [Epoch   81] loss: 3.0290 accuracy: 0.0492
[10/27 17:08:13][INFO] train_test.py:  62: Training: [Epoch   82] loss: 3.0241 accuracy: 0.0542 lr: 0.001000
[10/27 17:08:21][INFO] train_test.py:  94: Evaluation: [Epoch   82] loss: 3.0290 accuracy: 0.0492
[10/27 17:10:36][INFO] train_test.py:  62: Training: [Epoch   83] loss: 3.0241 accuracy: 0.0542 lr: 0.001000
[10/27 17:10:44][INFO] train_test.py:  94: Evaluation: [Epoch   83] loss: 3.0290 accuracy: 0.0492
[10/27 17:13:00][INFO] train_test.py:  62: Training: [Epoch   84] loss: 3.0232 accuracy: 0.0542 lr: 0.001000
[10/27 17:13:08][INFO] train_test.py:  94: Evaluation: [Epoch   84] loss: 3.0290 accuracy: 0.0492
[10/27 17:15:23][INFO] train_test.py:  62: Training: [Epoch   85] loss: 3.0241 accuracy: 0.0542 lr: 0.001000
[10/27 17:15:31][INFO] train_test.py:  94: Evaluation: [Epoch   85] loss: 3.0290 accuracy: 0.0492
[10/27 17:17:45][INFO] train_test.py:  62: Training: [Epoch   86] loss: 3.0241 accuracy: 0.0542 lr: 0.001000
[10/27 17:17:54][INFO] train_test.py:  94: Evaluation: [Epoch   86] loss: 3.0290 accuracy: 0.0492
[10/27 17:20:08][INFO] train_test.py:  62: Training: [Epoch   87] loss: 3.0240 accuracy: 0.0542 lr: 0.001000
[10/27 17:20:17][INFO] train_test.py:  94: Evaluation: [Epoch   87] loss: 3.0289 accuracy: 0.0492
[10/27 17:22:32][INFO] train_test.py:  62: Training: [Epoch   88] loss: 3.0241 accuracy: 0.0542 lr: 0.001000
[10/27 17:22:40][INFO] train_test.py:  94: Evaluation: [Epoch   88] loss: 3.0289 accuracy: 0.0492
[10/27 17:24:56][INFO] train_test.py:  62: Training: [Epoch   89] loss: 3.0241 accuracy: 0.0542 lr: 0.001000
[10/27 17:25:04][INFO] train_test.py:  94: Evaluation: [Epoch   89] loss: 3.0289 accuracy: 0.0492
[10/27 17:27:19][INFO] train_test.py:  62: Training: [Epoch   90] loss: 3.0241 accuracy: 0.0542 lr: 0.001000
[10/27 17:27:27][INFO] train_test.py:  94: Evaluation: [Epoch   90] loss: 3.0289 accuracy: 0.0492
[10/27 17:29:42][INFO] train_test.py:  62: Training: [Epoch   91] loss: 3.0241 accuracy: 0.0542 lr: 0.001000
[10/27 17:29:51][INFO] train_test.py:  94: Evaluation: [Epoch   91] loss: 3.0288 accuracy: 0.0492
[10/27 17:32:05][INFO] train_test.py:  62: Training: [Epoch   92] loss: 3.0241 accuracy: 0.0542 lr: 0.001000
[10/27 17:32:14][INFO] train_test.py:  94: Evaluation: [Epoch   92] loss: 3.0288 accuracy: 0.0492
[10/27 17:34:29][INFO] train_test.py:  62: Training: [Epoch   93] loss: 3.0241 accuracy: 0.0542 lr: 0.001000
[10/27 17:34:37][INFO] train_test.py:  94: Evaluation: [Epoch   93] loss: 3.0288 accuracy: 0.0492
[10/27 17:36:52][INFO] train_test.py:  62: Training: [Epoch   94] loss: 3.0240 accuracy: 0.0542 lr: 0.001000
[10/27 17:37:01][INFO] train_test.py:  94: Evaluation: [Epoch   94] loss: 3.0289 accuracy: 0.0492
[10/27 17:39:16][INFO] train_test.py:  62: Training: [Epoch   95] loss: 3.0240 accuracy: 0.0542 lr: 0.001000
[10/27 17:39:24][INFO] train_test.py:  94: Evaluation: [Epoch   95] loss: 3.0290 accuracy: 0.0492
[10/27 17:41:39][INFO] train_test.py:  62: Training: [Epoch   96] loss: 3.0241 accuracy: 0.0542 lr: 0.001000
[10/27 17:41:47][INFO] train_test.py:  94: Evaluation: [Epoch   96] loss: 3.0290 accuracy: 0.0492
[10/27 17:44:02][INFO] train_test.py:  62: Training: [Epoch   97] loss: 3.0241 accuracy: 0.0542 lr: 0.001000
[10/27 17:44:10][INFO] train_test.py:  94: Evaluation: [Epoch   97] loss: 3.0290 accuracy: 0.0492
[10/27 17:46:25][INFO] train_test.py:  62: Training: [Epoch   98] loss: 3.0241 accuracy: 0.0542 lr: 0.001000
[10/27 17:46:34][INFO] train_test.py:  94: Evaluation: [Epoch   98] loss: 3.0290 accuracy: 0.0492
[10/27 17:48:48][INFO] train_test.py:  62: Training: [Epoch   99] loss: 3.0241 accuracy: 0.0542 lr: 0.001000
[10/27 17:48:57][INFO] train_test.py:  94: Evaluation: [Epoch   99] loss: 3.0290 accuracy: 0.0492
[10/27 17:51:12][INFO] train_test.py:  62: Training: [Epoch  100] loss: 3.0241 accuracy: 0.0542 lr: 0.001000
[10/27 17:51:20][INFO] train_test.py:  94: Evaluation: [Epoch  100] loss: 3.0290 accuracy: 0.0492
[10/27 17:51:20][INFO] train_test.py: 159: Trained with 100 epochs, lr = 0.001, batchsize = 3, momentum = 0.5 with max validation accuracy of 0.36 done in 4:18:16
[10/27 18:00:00][INFO] run.py:  92: Train with configs:
[10/27 18:00:00][INFO] run.py:  93: 
{ AUGMENTATION      }-> False
{ BATCH_SIZE        }-> 3
{ DATA_JSON         }-> data.json
{ DATA_SEPARATOR    }-> ,
{ DECAY             }-> 0.005
{ DEVICES           }-> [0]
{ EPOCHS            }-> 100
{ FLOW              }-> DeepFlow
{ GPU               }-> 1
{ LABEL_DICT        }-> label_dict.json
{ LOAD              }-> False
{ LR                }-> 0.0005
{ MODE              }-> train
{ MODEL_NAME        }-> twin
{ MODEL_TYPE        }-> twin
{ MOMENTUM          }-> 0.5
{ NESTEROV          }-> True
{ NORM              }-> normal
{ NUM_CLASSES       }-> 20
{ NUM_WORKERS       }-> 8
{ N_GPU             }-> 1
{ OUTPUT_DIR        }-> .
{ OUTPUT_FILE       }-> ./pred.txt
{ PATH_DATA         }-> /home/dhieu/MediaEval2020/sport/Sport-Video-Classification-MediaEval2020/data
{ PATH_MODEL        }-> ./twin
{ PATH_PROCESSED_DATA }-> /home/dhieu/MediaEval2020/sport/Sport-Video-Classification-MediaEval2020/data_processed
{ SEED              }-> 31
{ SIZE_DATA         }-> [100 120 120]
{ VERSION           }-> 31

[10/27 18:01:08][INFO] run.py:  92: Train with configs:
[10/27 18:01:08][INFO] run.py:  93: 
{ AUGMENTATION      }-> False
{ BATCH_SIZE        }-> 3
{ DATA_JSON         }-> data.json
{ DATA_SEPARATOR    }-> ,
{ DECAY             }-> 0.005
{ DEVICES           }-> [0]
{ EPOCHS            }-> 100
{ FLOW              }-> DeepFlow
{ GPU               }-> 1
{ LABEL_DICT        }-> label_dict.json
{ LOAD              }-> False
{ LR                }-> 0.0005
{ MODE              }-> train
{ MODEL_NAME        }-> twin
{ MODEL_TYPE        }-> twin
{ MOMENTUM          }-> 0.5
{ NESTEROV          }-> True
{ NORM              }-> normal
{ NUM_CLASSES       }-> 20
{ NUM_WORKERS       }-> 8
{ N_GPU             }-> 1
{ OUTPUT_DIR        }-> .
{ OUTPUT_FILE       }-> ./pred.txt
{ PATH_DATA         }-> /home/dhieu/MediaEval2020/sport/Sport-Video-Classification-MediaEval2020/data
{ PATH_MODEL        }-> ./twin
{ PATH_PROCESSED_DATA }-> /home/dhieu/MediaEval2020/sport/Sport-Video-Classification-MediaEval2020/data_processed
{ SEED              }-> 31
{ SIZE_DATA         }-> [100 120 120]
{ VERSION           }-> 31

[10/29 16:17:44][INFO] run.py:  92: Train with configs:
[10/29 16:17:44][INFO] run.py:  93: 
{ AUGMENTATION      }-> False
{ BATCH_SIZE        }-> 10
{ DATA_JSON         }-> data.json
{ DATA_SEPARATOR    }-> ,
{ DECAY             }-> 0.005
{ DEVICES           }-> [0, 1]
{ EPOCHS            }-> 200
{ FLOW              }-> DeepFlow
{ GPU               }-> 0,1
{ LABEL_DICT        }-> label_dict.json
{ LOAD              }-> False
{ LR                }-> 0.0005
{ MODE              }-> train
{ MODEL_NAME        }-> twin
{ MODEL_TYPE        }-> twin
{ MOMENTUM          }-> 0.5
{ NESTEROV          }-> True
{ NORM              }-> normal
{ NUM_CLASSES       }-> 20
{ NUM_WORKERS       }-> 12
{ N_GPU             }-> 2
{ OUTPUT_DIR        }-> .
{ OUTPUT_FILE       }-> ./pred.txt
{ PATH_DATA         }-> /home/dhieu/MediaEval2020/sport/Sport-Video-Classification-MediaEval2020/data
{ PATH_MODEL        }-> ./twin
{ PATH_PROCESSED_DATA }-> /home/dhieu/MediaEval2020/sport/Sport-Video-Classification-MediaEval2020/data_processed
{ SEED              }-> 2020
{ SIZE_DATA         }-> [100 120 120]
{ VERSION           }-> 2020
{ dtype             }-> <class 'torch.cuda.FloatTensor'>

[10/29 16:18:05][INFO] run.py:  92: Train with configs:
[10/29 16:18:05][INFO] run.py:  93: 
{ AUGMENTATION      }-> False
{ BATCH_SIZE        }-> 10
{ DATA_JSON         }-> data.json
{ DATA_SEPARATOR    }-> ,
{ DECAY             }-> 0.005
{ DEVICES           }-> [0, 1]
{ EPOCHS            }-> 200
{ FLOW              }-> DeepFlow
{ GPU               }-> 0,1
{ LABEL_DICT        }-> label_dict.json
{ LOAD              }-> False
{ LR                }-> 0.0005
{ MODE              }-> train
{ MODEL_NAME        }-> twin
{ MODEL_TYPE        }-> twin
{ MOMENTUM          }-> 0.5
{ NESTEROV          }-> True
{ NORM              }-> normal
{ NUM_CLASSES       }-> 20
{ NUM_WORKERS       }-> 12
{ N_GPU             }-> 2
{ OUTPUT_DIR        }-> .
{ OUTPUT_FILE       }-> ./pred.txt
{ PATH_DATA         }-> /home/dhieu/MediaEval2020/sport/Sport-Video-Classification-MediaEval2020/data
{ PATH_MODEL        }-> ./twin
{ PATH_PROCESSED_DATA }-> /home/dhieu/MediaEval2020/sport/Sport-Video-Classification-MediaEval2020/data_processed
{ SEED              }-> 2020
{ SIZE_DATA         }-> [100 120 120]
{ VERSION           }-> 2020
{ dtype             }-> <class 'torch.cuda.FloatTensor'>

[10/29 16:19:01][INFO] run.py:  92: Train with configs:
[10/29 16:19:01][INFO] run.py:  93: 
{ AUGMENTATION      }-> False
{ BATCH_SIZE        }-> 10
{ DATA_JSON         }-> data.json
{ DATA_SEPARATOR    }-> ,
{ DECAY             }-> 0.005
{ DEVICES           }-> [0, 1]
{ EPOCHS            }-> 200
{ FLOW              }-> DeepFlow
{ GPU               }-> 0,1
{ LABEL_DICT        }-> label_dict.json
{ LOAD              }-> False
{ LR                }-> 0.0005
{ MODE              }-> train
{ MODEL_NAME        }-> twin
{ MODEL_TYPE        }-> twin
{ MOMENTUM          }-> 0.5
{ NESTEROV          }-> True
{ NORM              }-> normal
{ NUM_CLASSES       }-> 20
{ NUM_WORKERS       }-> 12
{ N_GPU             }-> 2
{ OUTPUT_DIR        }-> .
{ OUTPUT_FILE       }-> ./pred.txt
{ PATH_DATA         }-> /home/dhieu/MediaEval2020/sport/Sport-Video-Classification-MediaEval2020/data
{ PATH_MODEL        }-> ./twin
{ PATH_PROCESSED_DATA }-> /home/dhieu/MediaEval2020/sport/Sport-Video-Classification-MediaEval2020/data_processed
{ SEED              }-> 2020
{ SIZE_DATA         }-> [100 120 120]
{ VERSION           }-> 2020
{ dtype             }-> <class 'torch.cuda.FloatTensor'>

[10/29 16:20:28][INFO] train_test.py:  63: Training: [Epoch    1] loss: 2.9959 accuracy: 0.0542 lr: 0.000500
[10/29 16:20:52][INFO] train_test.py:  95: Evaluation: [Epoch    1] loss: 2.9958 accuracy: 0.0546
[10/29 16:21:55][INFO] run.py:  92: Train with configs:
[10/29 16:21:55][INFO] run.py:  93: 
{ AUGMENTATION      }-> False
{ BATCH_SIZE        }-> 10
{ DATA_JSON         }-> data.json
{ DATA_SEPARATOR    }-> ,
{ DECAY             }-> 0.005
{ DEVICES           }-> [0, 1]
{ EPOCHS            }-> 200
{ FLOW              }-> DeepFlow
{ GPU               }-> 0,1
{ LABEL_DICT        }-> label_dict.json
{ LOAD              }-> False
{ LR                }-> 0.0005
{ MODE              }-> train
{ MODEL_NAME        }-> twin
{ MODEL_TYPE        }-> twin
{ MOMENTUM          }-> 0.5
{ NESTEROV          }-> True
{ NORM              }-> normal
{ NUM_CLASSES       }-> 20
{ NUM_WORKERS       }-> 12
{ N_GPU             }-> 2
{ OUTPUT_DIR        }-> .
{ OUTPUT_FILE       }-> ./pred.txt
{ PATH_DATA         }-> /home/dhieu/MediaEval2020/sport/Sport-Video-Classification-MediaEval2020/data
{ PATH_MODEL        }-> ./twin
{ PATH_PROCESSED_DATA }-> /home/dhieu/MediaEval2020/sport/Sport-Video-Classification-MediaEval2020/data_processed
{ SEED              }-> 2020
{ SIZE_DATA         }-> [100 120 120]
{ VERSION           }-> 2020
{ dtype             }-> <class 'torch.cuda.FloatTensor'>

[10/29 16:23:25][INFO] train_test.py:  63: Training: [Epoch    1] loss: 2.9959 accuracy: 0.0542 lr: 0.000500
[10/29 16:23:48][INFO] train_test.py:  95: Evaluation: [Epoch    1] loss: 2.9958 accuracy: 0.0546
[10/29 16:26:35][INFO] run.py:  92: Train with configs:
[10/29 16:26:35][INFO] run.py:  93: 
{ AUGMENTATION      }-> False
{ BATCH_SIZE        }-> 10
{ DATA_JSON         }-> data.json
{ DATA_SEPARATOR    }-> ,
{ DECAY             }-> 0.005
{ DEVICES           }-> [0, 1]
{ EPOCHS            }-> 200
{ FLOW              }-> DeepFlow
{ GPU               }-> 0,1
{ LABEL_DICT        }-> label_dict.json
{ LOAD              }-> False
{ LR                }-> 0.0005
{ MODE              }-> train
{ MODEL_NAME        }-> twin
{ MODEL_TYPE        }-> twin
{ MOMENTUM          }-> 0.5
{ NESTEROV          }-> True
{ NORM              }-> normal
{ NUM_CLASSES       }-> 20
{ NUM_WORKERS       }-> 12
{ N_GPU             }-> 2
{ OUTPUT_DIR        }-> .
{ OUTPUT_FILE       }-> ./pred.txt
{ PATH_DATA         }-> /home/dhieu/MediaEval2020/sport/Sport-Video-Classification-MediaEval2020/data
{ PATH_MODEL        }-> ./twin
{ PATH_PROCESSED_DATA }-> /home/dhieu/MediaEval2020/sport/Sport-Video-Classification-MediaEval2020/data_processed
{ SEED              }-> 2020
{ SIZE_DATA         }-> [100 120 120]
{ VERSION           }-> 2020
{ dtype             }-> <class 'torch.cuda.FloatTensor'>

[10/29 16:29:51][INFO] run.py:  92: Train with configs:
[10/29 16:29:51][INFO] run.py:  93: 
{ AUGMENTATION      }-> False
{ BATCH_SIZE        }-> 10
{ DATA_JSON         }-> data.json
{ DATA_SEPARATOR    }-> ,
{ DECAY             }-> 0.005
{ DEVICES           }-> [0, 1]
{ EPOCHS            }-> 200
{ FLOW              }-> DeepFlow
{ GPU               }-> 0,1
{ LABEL_DICT        }-> label_dict.json
{ LOAD              }-> False
{ LR                }-> 0.0005
{ MODE              }-> train
{ MODEL_NAME        }-> twin
{ MODEL_TYPE        }-> twin
{ MOMENTUM          }-> 0.5
{ NESTEROV          }-> True
{ NORM              }-> normal
{ NUM_CLASSES       }-> 20
{ NUM_WORKERS       }-> 12
{ N_GPU             }-> 2
{ OUTPUT_DIR        }-> .
{ OUTPUT_FILE       }-> ./pred.txt
{ PATH_DATA         }-> /home/dhieu/MediaEval2020/sport/Sport-Video-Classification-MediaEval2020/data
{ PATH_MODEL        }-> ./twin
{ PATH_PROCESSED_DATA }-> /home/dhieu/MediaEval2020/sport/Sport-Video-Classification-MediaEval2020/data_processed
{ SEED              }-> 2020
{ SIZE_DATA         }-> [100 120 120]
{ VERSION           }-> 2020
{ dtype             }-> <class 'torch.cuda.FloatTensor'>

[10/29 16:31:20][INFO] train_test.py:  66: Training: [Epoch    1] loss: 2.9959 accuracy: 0.0542 lr: 0.000500
[10/29 16:31:43][INFO] train_test.py: 101: Evaluation: [Epoch    1] loss: 2.9958 accuracy: 0.0546
[10/29 16:33:20][INFO] train_test.py:  66: Training: [Epoch    2] loss: 2.9959 accuracy: 0.0577 lr: 0.000500
[10/29 16:33:44][INFO] train_test.py: 101: Evaluation: [Epoch    2] loss: 2.9958 accuracy: 0.0601
[10/29 16:35:21][INFO] train_test.py:  66: Training: [Epoch    3] loss: 2.9958 accuracy: 0.0577 lr: 0.000500
[10/29 16:35:44][INFO] train_test.py: 101: Evaluation: [Epoch    3] loss: 2.9958 accuracy: 0.0765
[10/29 16:35:52][INFO] run.py:  92: Train with configs:
[10/29 16:35:52][INFO] run.py:  93: 
{ AUGMENTATION      }-> False
{ BATCH_SIZE        }-> 10
{ DATA_JSON         }-> data.json
{ DATA_SEPARATOR    }-> ,
{ DECAY             }-> 0.005
{ DEVICES           }-> [0, 1]
{ EPOCHS            }-> 200
{ FLOW              }-> DeepFlow
{ GPU               }-> 0,1
{ LABEL_DICT        }-> label_dict.json
{ LOAD              }-> False
{ LR                }-> 0.0005
{ MODE              }-> train
{ MODEL_NAME        }-> twin
{ MODEL_TYPE        }-> twin
{ MOMENTUM          }-> 0.5
{ NESTEROV          }-> True
{ NORM              }-> normal
{ NUM_CLASSES       }-> 20
{ NUM_WORKERS       }-> 12
{ N_GPU             }-> 2
{ OUTPUT_DIR        }-> .
{ OUTPUT_FILE       }-> ./pred.txt
{ PATH_DATA         }-> /home/dhieu/MediaEval2020/sport/Sport-Video-Classification-MediaEval2020/data
{ PATH_MODEL        }-> ./twin
{ PATH_PROCESSED_DATA }-> /home/dhieu/MediaEval2020/sport/Sport-Video-Classification-MediaEval2020/data_processed
{ SEED              }-> 2020
{ SIZE_DATA         }-> [100 120 120]
{ VERSION           }-> 2020
{ dtype             }-> <class 'torch.cuda.FloatTensor'>

[10/29 16:37:21][INFO] train_test.py:  66: Training: [Epoch    1] loss: 2.9959 accuracy: 0.0542 lr: 0.000500
[10/29 16:37:45][INFO] train_test.py: 101: Evaluation: [Epoch    1] loss: 2.9958 accuracy: 0.0546
[10/29 16:39:20][INFO] train_test.py:  66: Training: [Epoch    2] loss: 2.9959 accuracy: 0.0577 lr: 0.000500
[10/29 16:39:44][INFO] train_test.py: 101: Evaluation: [Epoch    2] loss: 2.9958 accuracy: 0.0601
[10/29 16:41:20][INFO] train_test.py:  66: Training: [Epoch    3] loss: 2.9958 accuracy: 0.0577 lr: 0.000500
[10/29 16:41:44][INFO] train_test.py: 101: Evaluation: [Epoch    3] loss: 2.9958 accuracy: 0.0765
[10/29 16:43:20][INFO] train_test.py:  66: Training: [Epoch    4] loss: 2.9958 accuracy: 0.0559 lr: 0.000500
[10/29 16:43:44][INFO] train_test.py: 101: Evaluation: [Epoch    4] loss: 2.9958 accuracy: 0.0765
[10/29 16:45:20][INFO] train_test.py:  66: Training: [Epoch    5] loss: 2.9958 accuracy: 0.0717 lr: 0.000500
[10/29 16:45:44][INFO] train_test.py: 101: Evaluation: [Epoch    5] loss: 2.9958 accuracy: 0.0820
[10/29 16:47:20][INFO] train_test.py:  66: Training: [Epoch    6] loss: 2.9958 accuracy: 0.0769 lr: 0.000500
[10/29 16:47:44][INFO] train_test.py: 101: Evaluation: [Epoch    6] loss: 2.9957 accuracy: 0.0656
[10/29 16:49:20][INFO] train_test.py:  66: Training: [Epoch    7] loss: 2.9958 accuracy: 0.0839 lr: 0.000500
[10/29 16:49:44][INFO] train_test.py: 101: Evaluation: [Epoch    7] loss: 2.9957 accuracy: 0.0765
[10/29 16:51:20][INFO] train_test.py:  66: Training: [Epoch    8] loss: 2.9957 accuracy: 0.0892 lr: 0.000500
[10/29 16:51:44][INFO] train_test.py: 101: Evaluation: [Epoch    8] loss: 2.9957 accuracy: 0.0820
[10/29 16:53:20][INFO] train_test.py:  66: Training: [Epoch    9] loss: 2.9957 accuracy: 0.0909 lr: 0.000500
[10/29 16:53:44][INFO] train_test.py: 101: Evaluation: [Epoch    9] loss: 2.9957 accuracy: 0.0820
[10/29 16:55:20][INFO] train_test.py:  66: Training: [Epoch   10] loss: 2.9957 accuracy: 0.0909 lr: 0.000500
[10/29 16:55:44][INFO] train_test.py: 101: Evaluation: [Epoch   10] loss: 2.9956 accuracy: 0.0820
[10/29 16:57:39][INFO] train_test.py:  66: Training: [Epoch   11] loss: 2.9956 accuracy: 0.0909 lr: 0.000500
[10/29 16:58:03][INFO] train_test.py: 101: Evaluation: [Epoch   11] loss: 2.9956 accuracy: 0.0820
[10/29 16:59:37][INFO] train_test.py:  66: Training: [Epoch   12] loss: 2.9956 accuracy: 0.0909 lr: 0.000500
[10/29 17:00:01][INFO] train_test.py: 101: Evaluation: [Epoch   12] loss: 2.9956 accuracy: 0.0820
[10/29 17:01:36][INFO] train_test.py:  66: Training: [Epoch   13] loss: 2.9956 accuracy: 0.0909 lr: 0.000500
[10/29 17:02:00][INFO] train_test.py: 101: Evaluation: [Epoch   13] loss: 2.9955 accuracy: 0.0820
[10/29 17:03:35][INFO] train_test.py:  66: Training: [Epoch   14] loss: 2.9955 accuracy: 0.0909 lr: 0.000500
[10/29 17:03:59][INFO] train_test.py: 101: Evaluation: [Epoch   14] loss: 2.9955 accuracy: 0.0820
[10/29 17:05:34][INFO] train_test.py:  66: Training: [Epoch   15] loss: 2.9955 accuracy: 0.0909 lr: 0.000500
[10/29 17:05:58][INFO] train_test.py: 101: Evaluation: [Epoch   15] loss: 2.9955 accuracy: 0.0820
[10/29 17:07:33][INFO] train_test.py:  66: Training: [Epoch   16] loss: 2.9954 accuracy: 0.0909 lr: 0.000500
[10/29 17:07:57][INFO] train_test.py: 101: Evaluation: [Epoch   16] loss: 2.9954 accuracy: 0.0820
[10/29 17:13:14][INFO] run.py:  92: Train with configs:
[10/29 17:13:14][INFO] run.py:  93: 
{ AUGMENTATION      }-> False
{ BATCH_SIZE        }-> 10
{ DATA_JSON         }-> data.json
{ DATA_SEPARATOR    }-> ,
{ DECAY             }-> 0.005
{ DEVICES           }-> [0, 1]
{ EPOCHS            }-> 200
{ FLOW              }-> DeepFlow
{ GPU               }-> 0,1
{ LABEL_DICT        }-> label_dict.json
{ LOAD              }-> False
{ LR                }-> 0.001
{ MODE              }-> train
{ MODEL_NAME        }-> twin
{ MODEL_TYPE        }-> twin
{ MOMENTUM          }-> 0.5
{ NESTEROV          }-> True
{ NORM              }-> normal
{ NUM_CLASSES       }-> 20
{ NUM_WORKERS       }-> 12
{ N_GPU             }-> 2
{ OUTPUT_DIR        }-> .
{ OUTPUT_FILE       }-> ./pred.txt
{ PATH_DATA         }-> /home/dhieu/MediaEval2020/sport/Sport-Video-Classification-MediaEval2020/data
{ PATH_MODEL        }-> ./twin
{ PATH_PROCESSED_DATA }-> /home/dhieu/MediaEval2020/sport/Sport-Video-Classification-MediaEval2020/data_processed
{ SEED              }-> 2020
{ SIZE_DATA         }-> [100 120 120]
{ VERSION           }-> 2020
{ dtype             }-> <class 'torch.cuda.FloatTensor'>

[10/29 17:14:41][INFO] train_test.py:  66: Training: [Epoch    1] loss: 2.9959 accuracy: 0.0524 lr: 0.001000
[10/29 17:15:04][INFO] train_test.py: 101: Evaluation: [Epoch    1] loss: 2.9958 accuracy: 0.0601
[10/29 17:16:41][INFO] train_test.py:  66: Training: [Epoch    2] loss: 2.9959 accuracy: 0.0594 lr: 0.001000
[10/29 17:17:05][INFO] train_test.py: 101: Evaluation: [Epoch    2] loss: 2.9958 accuracy: 0.0820
[10/29 17:18:41][INFO] train_test.py:  66: Training: [Epoch    3] loss: 2.9958 accuracy: 0.0717 lr: 0.001000
[10/29 17:19:05][INFO] train_test.py: 101: Evaluation: [Epoch    3] loss: 2.9957 accuracy: 0.0710
[10/29 17:20:42][INFO] train_test.py:  66: Training: [Epoch    4] loss: 2.9957 accuracy: 0.0927 lr: 0.001000
[10/29 17:21:06][INFO] train_test.py: 101: Evaluation: [Epoch    4] loss: 2.9957 accuracy: 0.0820
[10/29 17:22:42][INFO] train_test.py:  66: Training: [Epoch    5] loss: 2.9957 accuracy: 0.0909 lr: 0.001000
[10/29 17:23:05][INFO] train_test.py: 101: Evaluation: [Epoch    5] loss: 2.9956 accuracy: 0.0820
[10/29 17:24:42][INFO] train_test.py:  66: Training: [Epoch    6] loss: 2.9956 accuracy: 0.0909 lr: 0.001000
[10/29 17:25:06][INFO] train_test.py: 101: Evaluation: [Epoch    6] loss: 2.9956 accuracy: 0.0820
[10/29 17:26:41][INFO] train_test.py:  66: Training: [Epoch    7] loss: 2.9955 accuracy: 0.0909 lr: 0.001000
[10/29 17:27:05][INFO] train_test.py: 101: Evaluation: [Epoch    7] loss: 2.9955 accuracy: 0.0820
[10/29 17:28:42][INFO] train_test.py:  66: Training: [Epoch    8] loss: 2.9954 accuracy: 0.0909 lr: 0.001000
[10/29 17:29:06][INFO] train_test.py: 101: Evaluation: [Epoch    8] loss: 2.9954 accuracy: 0.0820
[10/29 17:30:42][INFO] train_test.py:  66: Training: [Epoch    9] loss: 2.9953 accuracy: 0.0909 lr: 0.001000
[10/29 17:31:05][INFO] train_test.py: 101: Evaluation: [Epoch    9] loss: 2.9953 accuracy: 0.0820
[10/29 17:32:42][INFO] train_test.py:  66: Training: [Epoch   10] loss: 2.9951 accuracy: 0.0909 lr: 0.001000
[10/29 17:33:06][INFO] train_test.py: 101: Evaluation: [Epoch   10] loss: 2.9951 accuracy: 0.0820
[10/29 17:34:43][INFO] train_test.py:  66: Training: [Epoch   11] loss: 2.9949 accuracy: 0.0909 lr: 0.001000
[10/29 17:35:06][INFO] train_test.py: 101: Evaluation: [Epoch   11] loss: 2.9949 accuracy: 0.0820
[10/29 17:36:43][INFO] train_test.py:  66: Training: [Epoch   12] loss: 2.9946 accuracy: 0.0909 lr: 0.001000
[10/29 17:37:07][INFO] train_test.py: 101: Evaluation: [Epoch   12] loss: 2.9946 accuracy: 0.0874
[10/29 17:38:42][INFO] train_test.py:  66: Training: [Epoch   13] loss: 2.9942 accuracy: 0.1066 lr: 0.001000
[10/29 17:39:06][INFO] train_test.py: 101: Evaluation: [Epoch   13] loss: 2.9941 accuracy: 0.0984
[10/29 17:40:43][INFO] train_test.py:  66: Training: [Epoch   14] loss: 2.9934 accuracy: 0.1154 lr: 0.001000
[10/29 17:41:07][INFO] train_test.py: 101: Evaluation: [Epoch   14] loss: 2.9934 accuracy: 0.1038
[10/29 17:42:44][INFO] train_test.py:  66: Training: [Epoch   15] loss: 2.9923 accuracy: 0.1206 lr: 0.001000
[10/29 17:43:08][INFO] train_test.py: 101: Evaluation: [Epoch   15] loss: 2.9921 accuracy: 0.1148
[10/29 17:44:44][INFO] train_test.py:  66: Training: [Epoch   16] loss: 2.9901 accuracy: 0.1154 lr: 0.001000
[10/29 17:45:08][INFO] train_test.py: 101: Evaluation: [Epoch   16] loss: 2.9892 accuracy: 0.1093
[10/29 17:46:46][INFO] train_test.py:  66: Training: [Epoch   17] loss: 2.9840 accuracy: 0.1101 lr: 0.001000
[10/29 17:47:10][INFO] train_test.py: 101: Evaluation: [Epoch   17] loss: 2.9797 accuracy: 0.0765
[10/29 17:48:46][INFO] train_test.py:  66: Training: [Epoch   18] loss: 2.9655 accuracy: 0.0874 lr: 0.001000
[10/29 17:49:09][INFO] train_test.py: 101: Evaluation: [Epoch   18] loss: 2.9725 accuracy: 0.0765
[10/29 17:50:46][INFO] train_test.py:  66: Training: [Epoch   19] loss: 2.9591 accuracy: 0.0839 lr: 0.001000
[10/29 17:51:10][INFO] train_test.py: 101: Evaluation: [Epoch   19] loss: 2.9589 accuracy: 0.0765
[10/29 17:52:47][INFO] train_test.py:  66: Training: [Epoch   20] loss: 2.9464 accuracy: 0.1189 lr: 0.001000
[10/29 17:53:11][INFO] train_test.py: 101: Evaluation: [Epoch   20] loss: 2.9496 accuracy: 0.1038
[10/29 17:54:47][INFO] train_test.py:  66: Training: [Epoch   21] loss: 2.9380 accuracy: 0.1224 lr: 0.001000
[10/29 17:55:11][INFO] train_test.py: 101: Evaluation: [Epoch   21] loss: 2.9453 accuracy: 0.1202
[10/29 17:56:47][INFO] train_test.py:  66: Training: [Epoch   22] loss: 2.9275 accuracy: 0.1399 lr: 0.001000
[10/29 17:57:11][INFO] train_test.py: 101: Evaluation: [Epoch   22] loss: 2.9572 accuracy: 0.0984
[10/29 17:58:30][INFO] train_test.py:  66: Training: [Epoch   23] loss: 2.9272 accuracy: 0.1538 lr: 0.001000
[10/29 17:58:54][INFO] train_test.py: 101: Evaluation: [Epoch   23] loss: 2.9684 accuracy: 0.0874
[10/29 18:00:14][INFO] train_test.py:  66: Training: [Epoch   24] loss: 2.9189 accuracy: 0.1573 lr: 0.001000
[10/29 18:00:38][INFO] train_test.py: 101: Evaluation: [Epoch   24] loss: 2.9273 accuracy: 0.1421
[10/29 18:02:14][INFO] train_test.py:  66: Training: [Epoch   25] loss: 2.8859 accuracy: 0.1958 lr: 0.001000
[10/29 18:02:38][INFO] train_test.py: 101: Evaluation: [Epoch   25] loss: 2.9400 accuracy: 0.1148
[10/29 18:03:58][INFO] train_test.py:  66: Training: [Epoch   26] loss: 2.8785 accuracy: 0.2010 lr: 0.001000
[10/29 18:04:22][INFO] train_test.py: 101: Evaluation: [Epoch   26] loss: 2.9155 accuracy: 0.1585
[10/29 18:05:59][INFO] train_test.py:  66: Training: [Epoch   27] loss: 2.8657 accuracy: 0.2150 lr: 0.001000
[10/29 18:06:23][INFO] train_test.py: 101: Evaluation: [Epoch   27] loss: 2.9199 accuracy: 0.1585
[10/29 18:07:43][INFO] train_test.py:  66: Training: [Epoch   28] loss: 2.8718 accuracy: 0.2028 lr: 0.001000
[10/29 18:08:06][INFO] train_test.py: 101: Evaluation: [Epoch   28] loss: 2.8823 accuracy: 0.1913
[10/29 18:09:43][INFO] train_test.py:  66: Training: [Epoch   29] loss: 2.8466 accuracy: 0.2343 lr: 0.001000
[10/29 18:10:07][INFO] train_test.py: 101: Evaluation: [Epoch   29] loss: 2.9020 accuracy: 0.1749
[10/29 18:11:26][INFO] train_test.py:  66: Training: [Epoch   30] loss: 2.8470 accuracy: 0.2255 lr: 0.001000
[10/29 18:11:50][INFO] train_test.py: 101: Evaluation: [Epoch   30] loss: 2.8460 accuracy: 0.2350
[10/29 18:13:27][INFO] train_test.py:  66: Training: [Epoch   31] loss: 2.8269 accuracy: 0.2500 lr: 0.001000
[10/29 18:13:51][INFO] train_test.py: 101: Evaluation: [Epoch   31] loss: 2.8637 accuracy: 0.2240
[10/29 18:15:10][INFO] train_test.py:  66: Training: [Epoch   32] loss: 2.8250 accuracy: 0.2517 lr: 0.001000
[10/29 18:15:34][INFO] train_test.py: 101: Evaluation: [Epoch   32] loss: 2.9592 accuracy: 0.1202
[10/29 18:16:54][INFO] train_test.py:  66: Training: [Epoch   33] loss: 2.8830 accuracy: 0.1941 lr: 0.001000
[10/29 18:17:18][INFO] train_test.py: 101: Evaluation: [Epoch   33] loss: 2.8359 accuracy: 0.2459
[10/29 18:18:54][INFO] train_test.py:  66: Training: [Epoch   34] loss: 2.8153 accuracy: 0.2552 lr: 0.001000
[10/29 18:19:18][INFO] train_test.py: 101: Evaluation: [Epoch   34] loss: 2.9655 accuracy: 0.1093
[10/29 18:20:38][INFO] train_test.py:  66: Training: [Epoch   35] loss: 2.9158 accuracy: 0.1538 lr: 0.001000
[10/29 18:21:02][INFO] train_test.py: 101: Evaluation: [Epoch   35] loss: 2.8764 accuracy: 0.1913
[10/29 18:22:22][INFO] train_test.py:  66: Training: [Epoch   36] loss: 2.8408 accuracy: 0.2395 lr: 0.001000
[10/29 18:22:46][INFO] train_test.py: 101: Evaluation: [Epoch   36] loss: 2.8525 accuracy: 0.2350
[10/29 18:24:06][INFO] train_test.py:  66: Training: [Epoch   37] loss: 2.8072 accuracy: 0.2675 lr: 0.001000
[10/29 18:24:30][INFO] train_test.py: 101: Evaluation: [Epoch   37] loss: 2.8338 accuracy: 0.2404
[10/29 18:26:06][INFO] train_test.py:  66: Training: [Epoch   38] loss: 2.7875 accuracy: 0.3007 lr: 0.001000
[10/29 18:26:30][INFO] train_test.py: 101: Evaluation: [Epoch   38] loss: 2.8442 accuracy: 0.2240
[10/29 18:27:49][INFO] train_test.py:  66: Training: [Epoch   39] loss: 2.7749 accuracy: 0.3007 lr: 0.001000
[10/29 18:28:13][INFO] train_test.py: 101: Evaluation: [Epoch   39] loss: 2.8436 accuracy: 0.2240
[10/29 18:29:33][INFO] train_test.py:  66: Training: [Epoch   40] loss: 2.7853 accuracy: 0.2920 lr: 0.001000
[10/29 18:29:57][INFO] train_test.py: 101: Evaluation: [Epoch   40] loss: 2.8219 accuracy: 0.2459
[10/29 18:31:33][INFO] train_test.py:  66: Training: [Epoch   41] loss: 2.7823 accuracy: 0.2955 lr: 0.001000
[10/29 18:31:57][INFO] train_test.py: 101: Evaluation: [Epoch   41] loss: 2.8463 accuracy: 0.2240
[10/29 18:33:17][INFO] train_test.py:  66: Training: [Epoch   42] loss: 2.7721 accuracy: 0.3094 lr: 0.001000
[10/29 18:33:40][INFO] train_test.py: 101: Evaluation: [Epoch   42] loss: 2.9520 accuracy: 0.1366
[10/29 18:35:00][INFO] train_test.py:  66: Training: [Epoch   43] loss: 2.8402 accuracy: 0.2395 lr: 0.001000
[10/29 18:35:24][INFO] train_test.py: 101: Evaluation: [Epoch   43] loss: 2.8201 accuracy: 0.2678
[10/29 18:37:00][INFO] train_test.py:  66: Training: [Epoch   44] loss: 2.7644 accuracy: 0.3112 lr: 0.001000
[10/29 18:37:24][INFO] train_test.py: 101: Evaluation: [Epoch   44] loss: 2.8334 accuracy: 0.2350
[10/29 18:38:44][INFO] train_test.py:  66: Training: [Epoch   45] loss: 2.7504 accuracy: 0.3252 lr: 0.001000
[10/29 18:39:07][INFO] train_test.py: 101: Evaluation: [Epoch   45] loss: 2.8836 accuracy: 0.1913
[10/29 18:40:27][INFO] train_test.py:  66: Training: [Epoch   46] loss: 2.8360 accuracy: 0.2395 lr: 0.001000
[10/29 18:40:51][INFO] train_test.py: 101: Evaluation: [Epoch   46] loss: 2.8880 accuracy: 0.1858
[10/29 18:42:11][INFO] train_test.py:  66: Training: [Epoch   47] loss: 2.8093 accuracy: 0.2745 lr: 0.001000
[10/29 18:42:35][INFO] train_test.py: 101: Evaluation: [Epoch   47] loss: 2.8879 accuracy: 0.1858
[10/29 18:43:55][INFO] train_test.py:  66: Training: [Epoch   48] loss: 2.7591 accuracy: 0.3147 lr: 0.001000
[10/29 18:44:19][INFO] train_test.py: 101: Evaluation: [Epoch   48] loss: 2.8466 accuracy: 0.2186
[10/29 18:45:38][INFO] train_test.py:  66: Training: [Epoch   49] loss: 2.7635 accuracy: 0.3112 lr: 0.001000
[10/29 18:46:02][INFO] train_test.py: 101: Evaluation: [Epoch   49] loss: 2.8626 accuracy: 0.2131
[10/29 18:47:22][INFO] train_test.py:  66: Training: [Epoch   50] loss: 2.7448 accuracy: 0.3287 lr: 0.001000
[10/29 18:47:46][INFO] train_test.py: 101: Evaluation: [Epoch   50] loss: 2.8288 accuracy: 0.2350
[10/29 18:49:05][INFO] train_test.py:  66: Training: [Epoch   51] loss: 2.7325 accuracy: 0.3497 lr: 0.001000
[10/29 18:49:29][INFO] train_test.py: 101: Evaluation: [Epoch   51] loss: 2.7936 accuracy: 0.2732
[10/29 18:51:06][INFO] train_test.py:  66: Training: [Epoch   52] loss: 2.7353 accuracy: 0.3479 lr: 0.001000
[10/29 18:51:30][INFO] train_test.py: 101: Evaluation: [Epoch   52] loss: 2.8152 accuracy: 0.2568
[10/29 18:52:49][INFO] train_test.py:  66: Training: [Epoch   53] loss: 2.7203 accuracy: 0.3566 lr: 0.001000
[10/29 18:53:13][INFO] train_test.py: 101: Evaluation: [Epoch   53] loss: 2.8790 accuracy: 0.1858
[10/29 18:54:33][INFO] train_test.py:  66: Training: [Epoch   54] loss: 2.7255 accuracy: 0.3444 lr: 0.001000
[10/29 18:54:57][INFO] train_test.py: 101: Evaluation: [Epoch   54] loss: 2.7977 accuracy: 0.2678
[10/29 18:56:17][INFO] train_test.py:  66: Training: [Epoch   55] loss: 2.7242 accuracy: 0.3514 lr: 0.001000
[10/29 18:56:42][INFO] train_test.py: 101: Evaluation: [Epoch   55] loss: 2.8051 accuracy: 0.2568
[10/29 18:58:01][INFO] train_test.py:  66: Training: [Epoch   56] loss: 2.7230 accuracy: 0.3619 lr: 0.001000
[10/29 18:58:25][INFO] train_test.py: 101: Evaluation: [Epoch   56] loss: 2.8342 accuracy: 0.2404
[10/29 18:59:45][INFO] train_test.py:  66: Training: [Epoch   57] loss: 2.7003 accuracy: 0.3776 lr: 0.001000
[10/29 19:00:09][INFO] train_test.py: 101: Evaluation: [Epoch   57] loss: 2.7849 accuracy: 0.2787
[10/29 19:01:46][INFO] train_test.py:  66: Training: [Epoch   58] loss: 2.7056 accuracy: 0.3794 lr: 0.001000
[10/29 19:02:10][INFO] train_test.py: 101: Evaluation: [Epoch   58] loss: 2.7832 accuracy: 0.2896
[10/29 19:03:47][INFO] train_test.py:  66: Training: [Epoch   59] loss: 2.6887 accuracy: 0.3864 lr: 0.001000
[10/29 19:04:11][INFO] train_test.py: 101: Evaluation: [Epoch   59] loss: 2.8643 accuracy: 0.1913
[10/29 19:05:31][INFO] train_test.py:  66: Training: [Epoch   60] loss: 2.6895 accuracy: 0.3846 lr: 0.001000
[10/29 19:05:55][INFO] train_test.py: 101: Evaluation: [Epoch   60] loss: 2.7865 accuracy: 0.2842
[10/29 19:07:15][INFO] train_test.py:  66: Training: [Epoch   61] loss: 2.6696 accuracy: 0.4056 lr: 0.001000
[10/29 19:07:38][INFO] train_test.py: 101: Evaluation: [Epoch   61] loss: 2.7644 accuracy: 0.3169
[10/29 19:09:15][INFO] train_test.py:  66: Training: [Epoch   62] loss: 2.6809 accuracy: 0.4056 lr: 0.001000
[10/29 19:09:38][INFO] train_test.py: 101: Evaluation: [Epoch   62] loss: 2.8914 accuracy: 0.1858
[10/29 19:10:58][INFO] train_test.py:  66: Training: [Epoch   63] loss: 2.7615 accuracy: 0.3094 lr: 0.001000
[10/29 19:11:22][INFO] train_test.py: 101: Evaluation: [Epoch   63] loss: 2.8450 accuracy: 0.2295
[10/29 19:12:42][INFO] train_test.py:  66: Training: [Epoch   64] loss: 2.7589 accuracy: 0.3199 lr: 0.001000
[10/29 19:13:06][INFO] train_test.py: 101: Evaluation: [Epoch   64] loss: 2.8371 accuracy: 0.2240
[10/29 19:14:26][INFO] train_test.py:  66: Training: [Epoch   65] loss: 2.7494 accuracy: 0.3252 lr: 0.001000
[10/29 19:14:49][INFO] train_test.py: 101: Evaluation: [Epoch   65] loss: 2.8272 accuracy: 0.2514
[10/29 19:16:10][INFO] train_test.py:  66: Training: [Epoch   66] loss: 2.7457 accuracy: 0.3269 lr: 0.001000
[10/29 19:16:33][INFO] train_test.py: 101: Evaluation: [Epoch   66] loss: 2.8212 accuracy: 0.2514
[10/29 19:17:53][INFO] train_test.py:  66: Training: [Epoch   67] loss: 2.7360 accuracy: 0.3304 lr: 0.001000
[10/29 19:18:17][INFO] train_test.py: 101: Evaluation: [Epoch   67] loss: 2.8173 accuracy: 0.2568
[10/29 19:19:37][INFO] train_test.py:  66: Training: [Epoch   68] loss: 2.7331 accuracy: 0.3304 lr: 0.001000
[10/29 19:20:01][INFO] train_test.py: 101: Evaluation: [Epoch   68] loss: 2.8395 accuracy: 0.2404
[10/29 19:21:21][INFO] train_test.py:  66: Training: [Epoch   69] loss: 2.7399 accuracy: 0.3304 lr: 0.001000
[10/29 19:21:44][INFO] train_test.py: 101: Evaluation: [Epoch   69] loss: 2.8227 accuracy: 0.2514
[10/29 19:23:04][INFO] train_test.py:  66: Training: [Epoch   70] loss: 2.7444 accuracy: 0.3339 lr: 0.001000
[10/29 19:23:28][INFO] train_test.py: 101: Evaluation: [Epoch   70] loss: 2.8088 accuracy: 0.2732
[10/29 19:24:48][INFO] train_test.py:  66: Training: [Epoch   71] loss: 2.6647 accuracy: 0.4021 lr: 0.001000
[10/29 19:25:11][INFO] train_test.py: 101: Evaluation: [Epoch   71] loss: 2.7923 accuracy: 0.2732
[10/29 19:26:31][INFO] train_test.py:  66: Training: [Epoch   72] loss: 2.6669 accuracy: 0.4091 lr: 0.001000
[10/29 19:26:55][INFO] train_test.py: 101: Evaluation: [Epoch   72] loss: 2.8658 accuracy: 0.1967
[10/29 19:28:15][INFO] train_test.py:  66: Training: [Epoch   73] loss: 2.6530 accuracy: 0.4283 lr: 0.001000
[10/29 19:28:38][INFO] train_test.py: 101: Evaluation: [Epoch   73] loss: 2.7499 accuracy: 0.3224
[10/29 19:30:15][INFO] train_test.py:  66: Training: [Epoch   74] loss: 2.6405 accuracy: 0.4423 lr: 0.001000
[10/29 19:30:38][INFO] train_test.py: 101: Evaluation: [Epoch   74] loss: 2.7444 accuracy: 0.3443
[10/29 19:32:14][INFO] train_test.py:  66: Training: [Epoch   75] loss: 2.6119 accuracy: 0.4580 lr: 0.001000
[10/29 19:32:38][INFO] train_test.py: 101: Evaluation: [Epoch   75] loss: 2.7352 accuracy: 0.3443
[10/29 19:34:15][INFO] train_test.py:  66: Training: [Epoch   76] loss: 2.6443 accuracy: 0.4283 lr: 0.001000
[10/29 19:34:39][INFO] train_test.py: 101: Evaluation: [Epoch   76] loss: 2.7289 accuracy: 0.3443
[10/29 19:36:16][INFO] train_test.py:  66: Training: [Epoch   77] loss: 2.6110 accuracy: 0.4720 lr: 0.001000
[10/29 19:36:40][INFO] train_test.py: 101: Evaluation: [Epoch   77] loss: 2.7608 accuracy: 0.3115
[10/29 19:38:00][INFO] train_test.py:  66: Training: [Epoch   78] loss: 2.5923 accuracy: 0.4860 lr: 0.001000
[10/29 19:38:24][INFO] train_test.py: 101: Evaluation: [Epoch   78] loss: 2.7237 accuracy: 0.3443
[10/29 19:40:01][INFO] train_test.py:  66: Training: [Epoch   79] loss: 2.5805 accuracy: 0.4983 lr: 0.001000
[10/29 19:40:25][INFO] train_test.py: 101: Evaluation: [Epoch   79] loss: 2.7099 accuracy: 0.3607
[10/29 19:42:02][INFO] train_test.py:  66: Training: [Epoch   80] loss: 2.5674 accuracy: 0.5087 lr: 0.001000
[10/29 19:42:26][INFO] train_test.py: 101: Evaluation: [Epoch   80] loss: 2.6806 accuracy: 0.3989
[10/29 19:44:02][INFO] train_test.py:  66: Training: [Epoch   81] loss: 2.5552 accuracy: 0.5245 lr: 0.001000
[10/29 19:44:26][INFO] train_test.py: 101: Evaluation: [Epoch   81] loss: 2.6711 accuracy: 0.4098
[10/29 19:46:02][INFO] train_test.py:  66: Training: [Epoch   82] loss: 2.5628 accuracy: 0.5175 lr: 0.001000
[10/29 19:46:26][INFO] train_test.py: 101: Evaluation: [Epoch   82] loss: 2.9471 accuracy: 0.1366
[10/29 19:47:46][INFO] train_test.py:  66: Training: [Epoch   83] loss: 2.6493 accuracy: 0.4283 lr: 0.001000
[10/29 19:48:10][INFO] train_test.py: 101: Evaluation: [Epoch   83] loss: 2.6966 accuracy: 0.3825
[10/29 19:49:30][INFO] train_test.py:  66: Training: [Epoch   84] loss: 2.6008 accuracy: 0.4825 lr: 0.001000
[10/29 19:49:54][INFO] train_test.py: 101: Evaluation: [Epoch   84] loss: 2.8181 accuracy: 0.2623
[10/29 19:51:14][INFO] train_test.py:  66: Training: [Epoch   85] loss: 2.5946 accuracy: 0.4825 lr: 0.001000
[10/29 19:51:37][INFO] train_test.py: 101: Evaluation: [Epoch   85] loss: 2.6832 accuracy: 0.3989
[10/29 19:52:57][INFO] train_test.py:  66: Training: [Epoch   86] loss: 2.5882 accuracy: 0.4825 lr: 0.001000
[10/29 19:53:21][INFO] train_test.py: 101: Evaluation: [Epoch   86] loss: 2.6827 accuracy: 0.3989
[10/29 19:54:41][INFO] train_test.py:  66: Training: [Epoch   87] loss: 2.5954 accuracy: 0.4808 lr: 0.001000
[10/29 19:55:05][INFO] train_test.py: 101: Evaluation: [Epoch   87] loss: 2.6858 accuracy: 0.3934
[10/29 19:56:24][INFO] train_test.py:  66: Training: [Epoch   88] loss: 2.5881 accuracy: 0.4860 lr: 0.001000
[10/29 19:56:48][INFO] train_test.py: 101: Evaluation: [Epoch   88] loss: 2.6845 accuracy: 0.3934
[10/29 19:58:09][INFO] train_test.py:  66: Training: [Epoch   89] loss: 2.5830 accuracy: 0.4913 lr: 0.001000
[10/29 19:58:33][INFO] train_test.py: 101: Evaluation: [Epoch   89] loss: 2.6779 accuracy: 0.3989
[10/29 19:59:53][INFO] train_test.py:  66: Training: [Epoch   90] loss: 2.5876 accuracy: 0.4930 lr: 0.001000
[10/29 20:00:17][INFO] train_test.py: 101: Evaluation: [Epoch   90] loss: 2.6785 accuracy: 0.3989
[10/29 20:01:37][INFO] train_test.py:  66: Training: [Epoch   91] loss: 2.5798 accuracy: 0.4930 lr: 0.001000
[10/29 20:02:01][INFO] train_test.py: 101: Evaluation: [Epoch   91] loss: 2.6772 accuracy: 0.3989
[10/29 20:03:20][INFO] train_test.py:  66: Training: [Epoch   92] loss: 2.5799 accuracy: 0.4930 lr: 0.001000
[10/29 20:03:44][INFO] train_test.py: 101: Evaluation: [Epoch   92] loss: 2.6861 accuracy: 0.3880
[10/29 20:05:04][INFO] train_test.py:  66: Training: [Epoch   93] loss: 2.5792 accuracy: 0.4930 lr: 0.001000
[10/29 20:05:28][INFO] train_test.py: 101: Evaluation: [Epoch   93] loss: 2.6825 accuracy: 0.3934
[10/29 20:06:48][INFO] train_test.py:  66: Training: [Epoch   94] loss: 2.5722 accuracy: 0.4930 lr: 0.001000
[10/29 20:07:12][INFO] train_test.py: 101: Evaluation: [Epoch   94] loss: 2.6822 accuracy: 0.3934
[10/29 20:08:32][INFO] train_test.py:  66: Training: [Epoch   95] loss: 2.5720 accuracy: 0.4930 lr: 0.001000
[10/29 20:08:56][INFO] train_test.py: 101: Evaluation: [Epoch   95] loss: 2.6820 accuracy: 0.3934
[10/29 20:10:16][INFO] train_test.py:  66: Training: [Epoch   96] loss: 2.5785 accuracy: 0.4930 lr: 0.001000
[10/29 20:10:40][INFO] train_test.py: 101: Evaluation: [Epoch   96] loss: 2.6781 accuracy: 0.3989
[10/29 20:11:59][INFO] train_test.py:  66: Training: [Epoch   97] loss: 2.5716 accuracy: 0.4930 lr: 0.001000
[10/29 20:12:23][INFO] train_test.py: 101: Evaluation: [Epoch   97] loss: 2.6836 accuracy: 0.3934
[10/29 20:13:43][INFO] train_test.py:  66: Training: [Epoch   98] loss: 2.5780 accuracy: 0.4930 lr: 0.001000
[10/29 20:14:07][INFO] train_test.py: 101: Evaluation: [Epoch   98] loss: 2.6816 accuracy: 0.3934
[10/29 20:15:27][INFO] train_test.py:  66: Training: [Epoch   99] loss: 2.5778 accuracy: 0.4930 lr: 0.001000
[10/29 20:15:51][INFO] train_test.py: 101: Evaluation: [Epoch   99] loss: 2.6828 accuracy: 0.3934
[10/29 20:17:11][INFO] train_test.py:  66: Training: [Epoch  100] loss: 2.5708 accuracy: 0.4930 lr: 0.001000
[10/29 20:17:35][INFO] train_test.py: 101: Evaluation: [Epoch  100] loss: 2.6831 accuracy: 0.3934
[10/29 20:18:54][INFO] train_test.py:  66: Training: [Epoch  101] loss: 2.5814 accuracy: 0.4965 lr: 0.001000
[10/29 20:19:18][INFO] train_test.py: 101: Evaluation: [Epoch  101] loss: 2.6838 accuracy: 0.3934
[10/29 20:20:38][INFO] train_test.py:  66: Training: [Epoch  102] loss: 2.5573 accuracy: 0.5175 lr: 0.001000
[10/29 20:21:02][INFO] train_test.py: 101: Evaluation: [Epoch  102] loss: 2.6789 accuracy: 0.4044
[10/29 20:22:22][INFO] train_test.py:  66: Training: [Epoch  103] loss: 2.5206 accuracy: 0.5507 lr: 0.001000
[10/29 20:22:46][INFO] train_test.py: 101: Evaluation: [Epoch  103] loss: 2.6849 accuracy: 0.3934
[10/29 20:24:05][INFO] train_test.py:  66: Training: [Epoch  104] loss: 2.5254 accuracy: 0.5577 lr: 0.001000
[10/29 20:24:29][INFO] train_test.py: 101: Evaluation: [Epoch  104] loss: 2.6922 accuracy: 0.3934
[10/29 20:25:49][INFO] train_test.py:  66: Training: [Epoch  105] loss: 2.5163 accuracy: 0.5699 lr: 0.001000
[10/29 20:26:13][INFO] train_test.py: 101: Evaluation: [Epoch  105] loss: 2.6798 accuracy: 0.4098
[10/29 20:27:33][INFO] train_test.py:  66: Training: [Epoch  106] loss: 2.5086 accuracy: 0.5804 lr: 0.001000
[10/29 20:27:57][INFO] train_test.py: 101: Evaluation: [Epoch  106] loss: 2.6416 accuracy: 0.4372
[10/29 20:29:32][INFO] train_test.py:  66: Training: [Epoch  107] loss: 2.4755 accuracy: 0.6171 lr: 0.001000
[10/29 20:29:56][INFO] train_test.py: 101: Evaluation: [Epoch  107] loss: 2.6413 accuracy: 0.4426
[10/29 20:31:31][INFO] train_test.py:  66: Training: [Epoch  108] loss: 2.4352 accuracy: 0.6451 lr: 0.001000
[10/29 20:31:55][INFO] train_test.py: 101: Evaluation: [Epoch  108] loss: 2.6525 accuracy: 0.4153
[10/29 20:33:14][INFO] train_test.py:  66: Training: [Epoch  109] loss: 2.4292 accuracy: 0.6486 lr: 0.001000
[10/29 20:33:38][INFO] train_test.py: 101: Evaluation: [Epoch  109] loss: 2.6452 accuracy: 0.4372
[10/29 20:34:58][INFO] train_test.py:  66: Training: [Epoch  110] loss: 2.4251 accuracy: 0.6556 lr: 0.001000
[10/29 20:35:22][INFO] train_test.py: 101: Evaluation: [Epoch  110] loss: 2.6864 accuracy: 0.3880
[10/29 20:36:42][INFO] train_test.py:  66: Training: [Epoch  111] loss: 2.4340 accuracy: 0.6503 lr: 0.001000
[10/29 20:37:06][INFO] train_test.py: 101: Evaluation: [Epoch  111] loss: 2.6360 accuracy: 0.4317
[10/29 20:38:41][INFO] train_test.py:  66: Training: [Epoch  112] loss: 2.4214 accuracy: 0.6591 lr: 0.001000
[10/29 20:39:05][INFO] train_test.py: 101: Evaluation: [Epoch  112] loss: 2.6408 accuracy: 0.4372
[10/29 20:40:25][INFO] train_test.py:  66: Training: [Epoch  113] loss: 2.4179 accuracy: 0.6608 lr: 0.001000
[10/29 20:40:48][INFO] train_test.py: 101: Evaluation: [Epoch  113] loss: 2.6205 accuracy: 0.4590
[10/29 20:42:24][INFO] train_test.py:  66: Training: [Epoch  114] loss: 2.4017 accuracy: 0.6696 lr: 0.001000
[10/29 20:42:47][INFO] train_test.py: 101: Evaluation: [Epoch  114] loss: 2.6674 accuracy: 0.4208
[10/29 20:44:07][INFO] train_test.py:  66: Training: [Epoch  115] loss: 2.4098 accuracy: 0.6678 lr: 0.001000
[10/29 20:44:31][INFO] train_test.py: 101: Evaluation: [Epoch  115] loss: 2.6189 accuracy: 0.4590
[10/29 20:46:07][INFO] train_test.py:  66: Training: [Epoch  116] loss: 2.4104 accuracy: 0.6626 lr: 0.001000
[10/29 20:46:31][INFO] train_test.py: 101: Evaluation: [Epoch  116] loss: 2.6504 accuracy: 0.4208
[10/29 20:47:51][INFO] train_test.py:  66: Training: [Epoch  117] loss: 2.4195 accuracy: 0.6661 lr: 0.001000
[10/29 20:48:15][INFO] train_test.py: 101: Evaluation: [Epoch  117] loss: 2.6257 accuracy: 0.4426
[10/29 20:49:35][INFO] train_test.py:  66: Training: [Epoch  118] loss: 2.3976 accuracy: 0.6731 lr: 0.001000
[10/29 20:49:59][INFO] train_test.py: 101: Evaluation: [Epoch  118] loss: 2.6206 accuracy: 0.4590
[10/29 20:51:19][INFO] train_test.py:  66: Training: [Epoch  119] loss: 2.4040 accuracy: 0.6731 lr: 0.001000
[10/29 20:51:43][INFO] train_test.py: 101: Evaluation: [Epoch  119] loss: 2.6285 accuracy: 0.4536
[10/29 20:53:03][INFO] train_test.py:  66: Training: [Epoch  120] loss: 2.4039 accuracy: 0.6731 lr: 0.001000
[10/29 20:53:27][INFO] train_test.py: 101: Evaluation: [Epoch  120] loss: 2.6210 accuracy: 0.4481
[10/29 20:54:46][INFO] train_test.py:  66: Training: [Epoch  121] loss: 2.4034 accuracy: 0.6731 lr: 0.001000
[10/29 20:55:10][INFO] train_test.py: 101: Evaluation: [Epoch  121] loss: 2.6242 accuracy: 0.4481
[10/29 20:56:30][INFO] train_test.py:  66: Training: [Epoch  122] loss: 2.3966 accuracy: 0.6731 lr: 0.001000
[10/29 20:56:54][INFO] train_test.py: 101: Evaluation: [Epoch  122] loss: 2.6195 accuracy: 0.4536
[10/29 20:58:14][INFO] train_test.py:  66: Training: [Epoch  123] loss: 2.4031 accuracy: 0.6731 lr: 0.001000
[10/29 20:58:38][INFO] train_test.py: 101: Evaluation: [Epoch  123] loss: 2.6189 accuracy: 0.4481
[10/29 20:59:57][INFO] train_test.py:  66: Training: [Epoch  124] loss: 2.4097 accuracy: 0.6731 lr: 0.001000
[10/29 21:00:21][INFO] train_test.py: 101: Evaluation: [Epoch  124] loss: 2.6173 accuracy: 0.4536
[10/29 21:01:57][INFO] train_test.py:  66: Training: [Epoch  125] loss: 2.3961 accuracy: 0.6731 lr: 0.001000
[10/29 21:02:21][INFO] train_test.py: 101: Evaluation: [Epoch  125] loss: 2.6175 accuracy: 0.4590
[10/29 21:03:41][INFO] train_test.py:  66: Training: [Epoch  126] loss: 2.3960 accuracy: 0.6731 lr: 0.001000
[10/29 21:04:05][INFO] train_test.py: 101: Evaluation: [Epoch  126] loss: 2.6172 accuracy: 0.4590
[10/29 21:05:39][INFO] train_test.py:  66: Training: [Epoch  127] loss: 2.4027 accuracy: 0.6731 lr: 0.001000
[10/29 21:06:03][INFO] train_test.py: 101: Evaluation: [Epoch  127] loss: 2.6211 accuracy: 0.4590
[10/29 21:07:23][INFO] train_test.py:  66: Training: [Epoch  128] loss: 2.4028 accuracy: 0.6731 lr: 0.001000
[10/29 21:07:46][INFO] train_test.py: 101: Evaluation: [Epoch  128] loss: 2.6202 accuracy: 0.4426
[10/29 21:09:07][INFO] train_test.py:  66: Training: [Epoch  129] loss: 2.3955 accuracy: 0.6748 lr: 0.001000
[10/29 21:09:30][INFO] train_test.py: 101: Evaluation: [Epoch  129] loss: 2.6180 accuracy: 0.4590
[10/29 21:10:50][INFO] train_test.py:  66: Training: [Epoch  130] loss: 2.3942 accuracy: 0.6748 lr: 0.001000
[10/29 21:11:14][INFO] train_test.py: 101: Evaluation: [Epoch  130] loss: 2.6159 accuracy: 0.4645
[10/29 21:12:50][INFO] train_test.py:  66: Training: [Epoch  131] loss: 2.3941 accuracy: 0.6748 lr: 0.001000
[10/29 21:13:14][INFO] train_test.py: 101: Evaluation: [Epoch  131] loss: 2.6149 accuracy: 0.4699
[10/29 21:14:49][INFO] train_test.py:  66: Training: [Epoch  132] loss: 2.4075 accuracy: 0.6748 lr: 0.001000
[10/29 21:15:13][INFO] train_test.py: 101: Evaluation: [Epoch  132] loss: 2.6166 accuracy: 0.4645
[10/29 21:16:32][INFO] train_test.py:  66: Training: [Epoch  133] loss: 2.3941 accuracy: 0.6748 lr: 0.001000
[10/29 21:16:56][INFO] train_test.py: 101: Evaluation: [Epoch  133] loss: 2.6167 accuracy: 0.4536
[10/29 21:18:16][INFO] train_test.py:  66: Training: [Epoch  134] loss: 2.4007 accuracy: 0.6748 lr: 0.001000
[10/29 21:18:40][INFO] train_test.py: 101: Evaluation: [Epoch  134] loss: 2.6185 accuracy: 0.4481
[10/29 21:19:59][INFO] train_test.py:  66: Training: [Epoch  135] loss: 2.4007 accuracy: 0.6748 lr: 0.001000
[10/29 21:20:22][INFO] train_test.py: 101: Evaluation: [Epoch  135] loss: 2.6178 accuracy: 0.4481
[10/29 21:21:42][INFO] train_test.py:  66: Training: [Epoch  136] loss: 2.4005 accuracy: 0.6748 lr: 0.001000
[10/29 21:22:06][INFO] train_test.py: 101: Evaluation: [Epoch  136] loss: 2.6153 accuracy: 0.4590
[10/29 21:23:26][INFO] train_test.py:  66: Training: [Epoch  137] loss: 2.4074 accuracy: 0.6748 lr: 0.001000
[10/29 21:23:50][INFO] train_test.py: 101: Evaluation: [Epoch  137] loss: 2.6143 accuracy: 0.4645
[10/29 21:25:26][INFO] train_test.py:  66: Training: [Epoch  138] loss: 2.3936 accuracy: 0.6748 lr: 0.001000
[10/29 21:25:49][INFO] train_test.py: 101: Evaluation: [Epoch  138] loss: 2.6165 accuracy: 0.4590
[10/29 21:27:09][INFO] train_test.py:  66: Training: [Epoch  139] loss: 2.4005 accuracy: 0.6748 lr: 0.001000
[10/29 21:27:34][INFO] train_test.py: 101: Evaluation: [Epoch  139] loss: 2.6147 accuracy: 0.4754
[10/29 21:28:53][INFO] train_test.py:  66: Training: [Epoch  140] loss: 2.3937 accuracy: 0.6748 lr: 0.001000
[10/29 21:29:17][INFO] train_test.py: 101: Evaluation: [Epoch  140] loss: 2.6123 accuracy: 0.4645
[10/29 21:30:53][INFO] train_test.py:  66: Training: [Epoch  141] loss: 2.3937 accuracy: 0.6748 lr: 0.001000
[10/29 21:31:17][INFO] train_test.py: 101: Evaluation: [Epoch  141] loss: 2.6146 accuracy: 0.4590
[10/29 21:32:36][INFO] train_test.py:  66: Training: [Epoch  142] loss: 2.4055 accuracy: 0.6766 lr: 0.001000
[10/29 21:33:00][INFO] train_test.py: 101: Evaluation: [Epoch  142] loss: 2.6306 accuracy: 0.4426
[10/29 21:34:20][INFO] train_test.py:  66: Training: [Epoch  143] loss: 2.3999 accuracy: 0.6766 lr: 0.001000
[10/29 21:34:44][INFO] train_test.py: 101: Evaluation: [Epoch  143] loss: 2.6171 accuracy: 0.4645
[10/29 21:36:03][INFO] train_test.py:  66: Training: [Epoch  144] loss: 2.4079 accuracy: 0.6713 lr: 0.001000
[10/29 21:36:27][INFO] train_test.py: 101: Evaluation: [Epoch  144] loss: 2.6179 accuracy: 0.4590
[10/29 21:37:47][INFO] train_test.py:  66: Training: [Epoch  145] loss: 2.3928 accuracy: 0.6766 lr: 0.001000
[10/29 21:38:11][INFO] train_test.py: 101: Evaluation: [Epoch  145] loss: 2.6193 accuracy: 0.4590
[10/29 21:39:30][INFO] train_test.py:  66: Training: [Epoch  146] loss: 2.3992 accuracy: 0.6766 lr: 0.001000
[10/29 21:39:54][INFO] train_test.py: 101: Evaluation: [Epoch  146] loss: 2.6170 accuracy: 0.4590
[10/29 21:41:14][INFO] train_test.py:  66: Training: [Epoch  147] loss: 2.3922 accuracy: 0.6766 lr: 0.001000
[10/29 21:41:38][INFO] train_test.py: 101: Evaluation: [Epoch  147] loss: 2.6164 accuracy: 0.4590
[10/29 21:42:57][INFO] train_test.py:  66: Training: [Epoch  148] loss: 2.3989 accuracy: 0.6766 lr: 0.001000
[10/29 21:43:21][INFO] train_test.py: 101: Evaluation: [Epoch  148] loss: 2.6142 accuracy: 0.4590
[10/29 21:44:41][INFO] train_test.py:  66: Training: [Epoch  149] loss: 2.3989 accuracy: 0.6766 lr: 0.001000
[10/29 21:45:05][INFO] train_test.py: 101: Evaluation: [Epoch  149] loss: 2.6190 accuracy: 0.4590
[10/29 21:46:25][INFO] train_test.py:  66: Training: [Epoch  150] loss: 2.4059 accuracy: 0.6766 lr: 0.001000
[10/29 21:46:49][INFO] train_test.py: 101: Evaluation: [Epoch  150] loss: 2.6165 accuracy: 0.4645
[10/29 21:48:08][INFO] train_test.py:  66: Training: [Epoch  151] loss: 2.3989 accuracy: 0.6766 lr: 0.001000
[10/29 21:48:32][INFO] train_test.py: 101: Evaluation: [Epoch  151] loss: 2.6144 accuracy: 0.4590
[10/29 21:49:52][INFO] train_test.py:  66: Training: [Epoch  152] loss: 2.3986 accuracy: 0.6766 lr: 0.001000
[10/29 21:50:16][INFO] train_test.py: 101: Evaluation: [Epoch  152] loss: 2.6113 accuracy: 0.4536
[10/29 21:51:51][INFO] train_test.py:  66: Training: [Epoch  153] loss: 2.3985 accuracy: 0.6766 lr: 0.001000
[10/29 21:52:15][INFO] train_test.py: 101: Evaluation: [Epoch  153] loss: 2.6154 accuracy: 0.4590
[10/29 21:53:35][INFO] train_test.py:  66: Training: [Epoch  154] loss: 2.3988 accuracy: 0.6766 lr: 0.001000
[10/29 21:53:59][INFO] train_test.py: 101: Evaluation: [Epoch  154] loss: 2.6155 accuracy: 0.4536
[10/29 21:55:19][INFO] train_test.py:  66: Training: [Epoch  155] loss: 2.3916 accuracy: 0.6766 lr: 0.001000
[10/29 21:55:43][INFO] train_test.py: 101: Evaluation: [Epoch  155] loss: 2.6143 accuracy: 0.4699
[10/29 21:57:02][INFO] train_test.py:  66: Training: [Epoch  156] loss: 2.3982 accuracy: 0.6766 lr: 0.001000
[10/29 21:57:26][INFO] train_test.py: 101: Evaluation: [Epoch  156] loss: 2.6127 accuracy: 0.4590
[10/29 21:58:47][INFO] train_test.py:  66: Training: [Epoch  157] loss: 2.3915 accuracy: 0.6766 lr: 0.001000
[10/29 21:59:11][INFO] train_test.py: 101: Evaluation: [Epoch  157] loss: 2.6110 accuracy: 0.4645
[10/29 22:00:46][INFO] train_test.py:  66: Training: [Epoch  158] loss: 2.3914 accuracy: 0.6766 lr: 0.001000
[10/29 22:01:10][INFO] train_test.py: 101: Evaluation: [Epoch  158] loss: 2.6135 accuracy: 0.4536
[10/29 22:02:29][INFO] train_test.py:  66: Training: [Epoch  159] loss: 2.3914 accuracy: 0.6766 lr: 0.001000
[10/29 22:02:53][INFO] train_test.py: 101: Evaluation: [Epoch  159] loss: 2.6147 accuracy: 0.4590
[10/29 22:04:13][INFO] train_test.py:  66: Training: [Epoch  160] loss: 2.3979 accuracy: 0.6766 lr: 0.001000
[10/29 22:04:37][INFO] train_test.py: 101: Evaluation: [Epoch  160] loss: 2.6144 accuracy: 0.4590
[10/29 22:05:57][INFO] train_test.py:  66: Training: [Epoch  161] loss: 2.3962 accuracy: 0.6818 lr: 0.001000
[10/29 22:06:21][INFO] train_test.py: 101: Evaluation: [Epoch  161] loss: 2.6174 accuracy: 0.4481
[10/29 22:07:42][INFO] train_test.py:  66: Training: [Epoch  162] loss: 2.3951 accuracy: 0.6818 lr: 0.001000
[10/29 22:08:06][INFO] train_test.py: 101: Evaluation: [Epoch  162] loss: 2.5992 accuracy: 0.4809
[10/29 22:09:43][INFO] train_test.py:  66: Training: [Epoch  163] loss: 2.3965 accuracy: 0.6836 lr: 0.001000
[10/29 22:10:07][INFO] train_test.py: 101: Evaluation: [Epoch  163] loss: 2.5951 accuracy: 0.4863
[10/29 22:11:44][INFO] train_test.py:  66: Training: [Epoch  164] loss: 2.3840 accuracy: 0.6941 lr: 0.001000
[10/29 22:12:08][INFO] train_test.py: 101: Evaluation: [Epoch  164] loss: 2.5924 accuracy: 0.4863
[10/29 22:13:43][INFO] train_test.py:  66: Training: [Epoch  165] loss: 2.3743 accuracy: 0.6958 lr: 0.001000
[10/29 22:14:07][INFO] train_test.py: 101: Evaluation: [Epoch  165] loss: 2.5935 accuracy: 0.4809
[10/29 22:15:27][INFO] train_test.py:  66: Training: [Epoch  166] loss: 2.3804 accuracy: 0.6958 lr: 0.001000
[10/29 22:15:52][INFO] train_test.py: 101: Evaluation: [Epoch  166] loss: 2.5942 accuracy: 0.4809
[10/29 22:17:12][INFO] train_test.py:  66: Training: [Epoch  167] loss: 2.3724 accuracy: 0.6976 lr: 0.001000
[10/29 22:17:37][INFO] train_test.py: 101: Evaluation: [Epoch  167] loss: 2.5891 accuracy: 0.4918
[10/29 22:19:13][INFO] train_test.py:  66: Training: [Epoch  168] loss: 2.3716 accuracy: 0.6976 lr: 0.001000
[10/29 22:19:37][INFO] train_test.py: 101: Evaluation: [Epoch  168] loss: 2.5890 accuracy: 0.4918
[10/29 22:21:12][INFO] train_test.py:  66: Training: [Epoch  169] loss: 2.3848 accuracy: 0.6976 lr: 0.001000
[10/29 22:21:37][INFO] train_test.py: 101: Evaluation: [Epoch  169] loss: 2.5854 accuracy: 0.4973
[10/29 22:23:14][INFO] train_test.py:  66: Training: [Epoch  170] loss: 2.3716 accuracy: 0.6976 lr: 0.001000
[10/29 22:23:38][INFO] train_test.py: 101: Evaluation: [Epoch  170] loss: 2.5855 accuracy: 0.4918
[10/29 22:24:59][INFO] train_test.py:  66: Training: [Epoch  171] loss: 2.3697 accuracy: 0.6993 lr: 0.001000
[10/29 22:25:23][INFO] train_test.py: 101: Evaluation: [Epoch  171] loss: 2.5881 accuracy: 0.4863
[10/29 22:26:43][INFO] train_test.py:  66: Training: [Epoch  172] loss: 2.3762 accuracy: 0.6993 lr: 0.001000
[10/29 22:27:07][INFO] train_test.py: 101: Evaluation: [Epoch  172] loss: 2.5833 accuracy: 0.4973
[10/29 22:28:45][INFO] train_test.py:  66: Training: [Epoch  173] loss: 2.3760 accuracy: 0.6993 lr: 0.001000
[10/29 22:29:09][INFO] train_test.py: 101: Evaluation: [Epoch  173] loss: 2.5857 accuracy: 0.4863
[10/29 22:30:28][INFO] train_test.py:  66: Training: [Epoch  174] loss: 2.3693 accuracy: 0.6993 lr: 0.001000
[10/29 22:30:52][INFO] train_test.py: 101: Evaluation: [Epoch  174] loss: 2.5825 accuracy: 0.4973
[10/29 22:32:29][INFO] train_test.py:  66: Training: [Epoch  175] loss: 2.3691 accuracy: 0.6993 lr: 0.001000
[10/29 22:32:53][INFO] train_test.py: 101: Evaluation: [Epoch  175] loss: 2.5835 accuracy: 0.5082
[10/29 22:34:13][INFO] train_test.py:  66: Training: [Epoch  176] loss: 2.3755 accuracy: 0.6993 lr: 0.001000
[10/29 22:34:37][INFO] train_test.py: 101: Evaluation: [Epoch  176] loss: 2.5832 accuracy: 0.5027
[10/29 22:35:59][INFO] train_test.py:  66: Training: [Epoch  177] loss: 2.3675 accuracy: 0.7045 lr: 0.001000
[10/29 22:36:23][INFO] train_test.py: 101: Evaluation: [Epoch  177] loss: 2.5785 accuracy: 0.5137
[10/29 22:38:00][INFO] train_test.py:  66: Training: [Epoch  178] loss: 2.3596 accuracy: 0.7185 lr: 0.001000
[10/29 22:38:24][INFO] train_test.py: 101: Evaluation: [Epoch  178] loss: 2.5700 accuracy: 0.5137
[10/29 22:40:00][INFO] train_test.py:  66: Training: [Epoch  179] loss: 2.3499 accuracy: 0.7203 lr: 0.001000
[10/29 22:40:24][INFO] train_test.py: 101: Evaluation: [Epoch  179] loss: 2.5750 accuracy: 0.5082
[10/29 22:41:43][INFO] train_test.py:  66: Training: [Epoch  180] loss: 2.3560 accuracy: 0.7220 lr: 0.001000
[10/29 22:42:07][INFO] train_test.py: 101: Evaluation: [Epoch  180] loss: 2.5657 accuracy: 0.5082
[10/29 22:43:43][INFO] train_test.py:  66: Training: [Epoch  181] loss: 2.3603 accuracy: 0.7238 lr: 0.001000
[10/29 22:44:06][INFO] train_test.py: 101: Evaluation: [Epoch  181] loss: 2.5656 accuracy: 0.5191
[10/29 22:45:42][INFO] train_test.py:  66: Training: [Epoch  182] loss: 2.3393 accuracy: 0.7343 lr: 0.001000
[10/29 22:46:06][INFO] train_test.py: 101: Evaluation: [Epoch  182] loss: 2.5671 accuracy: 0.5246
[10/29 22:47:25][INFO] train_test.py:  66: Training: [Epoch  183] loss: 2.3302 accuracy: 0.7483 lr: 0.001000
[10/29 22:47:49][INFO] train_test.py: 101: Evaluation: [Epoch  183] loss: 2.5814 accuracy: 0.4973
[10/29 22:49:09][INFO] train_test.py:  66: Training: [Epoch  184] loss: 2.3201 accuracy: 0.7570 lr: 0.001000
[10/29 22:49:33][INFO] train_test.py: 101: Evaluation: [Epoch  184] loss: 2.5772 accuracy: 0.5027
[10/29 22:51:45][INFO] train_test.py:  66: Training: [Epoch  185] loss: 2.3120 accuracy: 0.7622 lr: 0.001000
[10/29 22:52:09][INFO] train_test.py: 101: Evaluation: [Epoch  185] loss: 2.5699 accuracy: 0.5246
[10/29 22:53:28][INFO] train_test.py:  66: Training: [Epoch  186] loss: 2.3087 accuracy: 0.7710 lr: 0.001000
[10/29 22:53:51][INFO] train_test.py: 101: Evaluation: [Epoch  186] loss: 2.5599 accuracy: 0.5246
[10/29 22:55:29][INFO] train_test.py:  66: Training: [Epoch  187] loss: 2.3013 accuracy: 0.7710 lr: 0.001000
[10/29 22:55:53][INFO] train_test.py: 101: Evaluation: [Epoch  187] loss: 2.5645 accuracy: 0.5246
[10/29 22:57:12][INFO] train_test.py:  66: Training: [Epoch  188] loss: 2.3079 accuracy: 0.7710 lr: 0.001000
[10/29 22:57:36][INFO] train_test.py: 101: Evaluation: [Epoch  188] loss: 2.5552 accuracy: 0.5301
[10/29 22:59:10][INFO] train_test.py:  66: Training: [Epoch  189] loss: 2.3009 accuracy: 0.7710 lr: 0.001000
[10/29 22:59:34][INFO] train_test.py: 101: Evaluation: [Epoch  189] loss: 2.5537 accuracy: 0.5301
[10/29 23:01:09][INFO] train_test.py:  66: Training: [Epoch  190] loss: 2.3007 accuracy: 0.7710 lr: 0.001000
[10/29 23:01:33][INFO] train_test.py: 101: Evaluation: [Epoch  190] loss: 2.5590 accuracy: 0.5301
[10/29 23:02:52][INFO] train_test.py:  66: Training: [Epoch  191] loss: 2.3064 accuracy: 0.7657 lr: 0.001000
[10/29 23:03:15][INFO] train_test.py: 101: Evaluation: [Epoch  191] loss: 2.5768 accuracy: 0.4918
[10/29 23:04:35][INFO] train_test.py:  66: Training: [Epoch  192] loss: 2.2971 accuracy: 0.7762 lr: 0.001000
[10/29 23:04:59][INFO] train_test.py: 101: Evaluation: [Epoch  192] loss: 2.5794 accuracy: 0.5082
[10/29 23:06:18][INFO] train_test.py:  66: Training: [Epoch  193] loss: 2.3128 accuracy: 0.7675 lr: 0.001000
[10/29 23:06:42][INFO] train_test.py: 101: Evaluation: [Epoch  193] loss: 2.7133 accuracy: 0.3607
[10/29 23:08:00][INFO] train_test.py:  66: Training: [Epoch  194] loss: 2.3209 accuracy: 0.7605 lr: 0.001000
[10/29 23:08:24][INFO] train_test.py: 101: Evaluation: [Epoch  194] loss: 2.5647 accuracy: 0.5191
[10/29 23:09:44][INFO] train_test.py:  66: Training: [Epoch  195] loss: 2.2965 accuracy: 0.7762 lr: 0.001000
[10/29 23:10:08][INFO] train_test.py: 101: Evaluation: [Epoch  195] loss: 2.5704 accuracy: 0.5027
[10/29 23:11:27][INFO] train_test.py:  66: Training: [Epoch  196] loss: 2.2961 accuracy: 0.7762 lr: 0.001000
[10/29 23:11:51][INFO] train_test.py: 101: Evaluation: [Epoch  196] loss: 2.5629 accuracy: 0.5082
[10/29 23:13:10][INFO] train_test.py:  66: Training: [Epoch  197] loss: 2.3025 accuracy: 0.7762 lr: 0.001000
[10/29 23:13:34][INFO] train_test.py: 101: Evaluation: [Epoch  197] loss: 2.5653 accuracy: 0.5191
[10/29 23:14:56][INFO] train_test.py:  66: Training: [Epoch  198] loss: 2.3026 accuracy: 0.7762 lr: 0.001000
[10/29 23:15:20][INFO] train_test.py: 101: Evaluation: [Epoch  198] loss: 2.5655 accuracy: 0.5191
[10/29 23:16:41][INFO] train_test.py:  66: Training: [Epoch  199] loss: 2.3021 accuracy: 0.7762 lr: 0.001000
[10/29 23:17:05][INFO] train_test.py: 101: Evaluation: [Epoch  199] loss: 2.5631 accuracy: 0.5137
[10/29 23:18:25][INFO] train_test.py:  66: Training: [Epoch  200] loss: 2.2952 accuracy: 0.7762 lr: 0.001000
[10/29 23:18:49][INFO] train_test.py: 101: Evaluation: [Epoch  200] loss: 2.5645 accuracy: 0.5137
[10/29 23:18:49][INFO] train_test.py: 165: Trained with 200 epochs, lr = 0.001, batchsize = 10, momentum = 0.5 with max validation accuracy of 0.53 done in 6:05:29
[10/30 01:45:38][INFO] run.py:  94: Train with configs:
[10/30 01:45:38][INFO] run.py:  95: 
{ AUGMENTATION      }-> False
{ BATCH_SIZE        }-> 10
{ DATA_JSON         }-> data.json
{ DATA_SEPARATOR    }-> ,
{ DECAY             }-> 0.005
{ DEVICES           }-> [0, 1]
{ EPOCHS            }-> 1000
{ FLOW              }-> DeepFlow
{ GPU               }-> 0,1
{ LABEL_DICT        }-> label_dict.json
{ LOAD              }-> True
{ LR                }-> 0.001
{ MODE              }-> train
{ MODEL_NAME        }-> twin
{ MODEL_TYPE        }-> twin
{ MOMENTUM          }-> 0.5
{ NESTEROV          }-> True
{ NORM              }-> normal
{ NUM_CLASSES       }-> 20
{ NUM_WORKERS       }-> 12
{ N_GPU             }-> 2
{ OUTPUT_DIR        }-> .
{ OUTPUT_FILE       }-> ./pred.txt
{ PATH_DATA         }-> /home/dhieu/MediaEval2020/sport/Sport-Video-Classification-MediaEval2020/data
{ PATH_MODEL        }-> ./twin
{ PATH_PROCESSED_DATA }-> /home/dhieu/MediaEval2020/sport/Sport-Video-Classification-MediaEval2020/data_processed
{ SEED              }-> 2020
{ SIZE_DATA         }-> [100 120 120]
{ VERSION           }-> 2020
{ dtype             }-> <class 'torch.cuda.FloatTensor'>

[10/30 01:45:42][INFO] train_test.py: 132: Load model ./twin for retraining
[10/30 01:45:44][INFO] train_test.py: 135: Model from epoch 189
[10/30 01:45:44][INFO] train_test.py: 139: loss_train_ : 2.30089
[10/30 01:45:44][INFO] train_test.py: 139: acc_train_ : 0.770979
[10/30 01:45:44][INFO] train_test.py: 139: loss_val_ : 2.55373
[10/30 01:45:44][INFO] train_test.py: 139: acc_val_ : 0.530055
[10/30 01:47:06][INFO] train_test.py:  66: Training: [Epoch  189] loss: 2.3007 accuracy: 0.7710 lr: 0.001000
[10/30 01:47:30][INFO] train_test.py: 101: Evaluation: [Epoch  189] loss: 2.5590 accuracy: 0.5246
[10/30 01:48:50][INFO] train_test.py:  66: Training: [Epoch  190] loss: 2.3046 accuracy: 0.7675 lr: 0.001000
[10/30 01:49:13][INFO] train_test.py: 101: Evaluation: [Epoch  190] loss: 2.5609 accuracy: 0.5301
[10/30 01:50:33][INFO] train_test.py:  66: Training: [Epoch  191] loss: 2.2993 accuracy: 0.7727 lr: 0.001000
[10/30 01:50:57][INFO] train_test.py: 101: Evaluation: [Epoch  191] loss: 2.5542 accuracy: 0.5301
[10/30 01:52:17][INFO] train_test.py:  66: Training: [Epoch  192] loss: 2.3058 accuracy: 0.7727 lr: 0.001000
[10/30 01:52:41][INFO] train_test.py: 101: Evaluation: [Epoch  192] loss: 2.5529 accuracy: 0.5410
[10/30 01:54:07][INFO] train_test.py:  66: Training: [Epoch  193] loss: 2.2988 accuracy: 0.7727 lr: 0.001000
[10/30 01:54:30][INFO] train_test.py: 101: Evaluation: [Epoch  193] loss: 2.5551 accuracy: 0.5246
[10/30 01:55:50][INFO] train_test.py:  66: Training: [Epoch  194] loss: 2.3055 accuracy: 0.7727 lr: 0.001000
[10/30 01:56:14][INFO] train_test.py: 101: Evaluation: [Epoch  194] loss: 2.5507 accuracy: 0.5355
[10/30 01:57:48][INFO] train_test.py:  66: Training: [Epoch  195] loss: 2.2995 accuracy: 0.7727 lr: 0.001000
[10/30 01:58:12][INFO] train_test.py: 101: Evaluation: [Epoch  195] loss: 2.5598 accuracy: 0.5137
[10/30 01:59:32][INFO] train_test.py:  66: Training: [Epoch  196] loss: 2.3101 accuracy: 0.7762 lr: 0.001000
[10/30 01:59:56][INFO] train_test.py: 101: Evaluation: [Epoch  196] loss: 2.5616 accuracy: 0.5246
[10/30 02:01:15][INFO] train_test.py:  66: Training: [Epoch  197] loss: 2.2958 accuracy: 0.7762 lr: 0.001000
[10/30 02:01:39][INFO] train_test.py: 101: Evaluation: [Epoch  197] loss: 2.5540 accuracy: 0.5355
[10/30 02:02:59][INFO] train_test.py:  66: Training: [Epoch  198] loss: 2.2954 accuracy: 0.7762 lr: 0.001000
[10/30 02:03:23][INFO] train_test.py: 101: Evaluation: [Epoch  198] loss: 2.5528 accuracy: 0.5355
[10/30 02:04:43][INFO] train_test.py:  66: Training: [Epoch  199] loss: 2.2951 accuracy: 0.7762 lr: 0.001000
[10/30 02:05:07][INFO] train_test.py: 101: Evaluation: [Epoch  199] loss: 2.5512 accuracy: 0.5355
[10/30 02:06:26][INFO] train_test.py:  66: Training: [Epoch  200] loss: 2.2950 accuracy: 0.7762 lr: 0.001000
[10/30 02:06:50][INFO] train_test.py: 101: Evaluation: [Epoch  200] loss: 2.5532 accuracy: 0.5355
[10/30 02:06:50][INFO] train_test.py: 165: Trained with 200 epochs, lr = 0.001, batchsize = 10, momentum = 0.5 with max validation accuracy of 0.54 done in 0:21:07
[10/30 02:06:50][DEBUG] font_manager.py: 1334: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal 200 normal>) = 0.24
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Thin.ttc) normal normal 250 normal>) = 10.1925
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal 700 condensed>) = 1.535
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 1.25
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXVariants' (STIXVariants-Bold.otf) normal normal 700 normal>) = 10.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'TakaoPGothic' (fonts-japanese-gothic.ttf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 500 normal>) = 10.145
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeOneSym' (STIXSizeOneSym-Regular.otf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizeFiveSym-Regular.otf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal 700 condensed>) = 0.5349999999999999
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 500 normal>) = 11.145
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-R.ttf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIX' (STIX-Regular.otf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Padauk' (Padauk-bold.ttf) normal normal 700 normal>) = 10.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'NanumMyeongjo' (NanumMyeongjo.ttf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Lohit Punjabi' (Lohit-Punjabi.ttf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 500 normal>) = 11.145
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntegralsUpD-Bold.otf) normal normal 700 normal>) = 10.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIX' (STIX-Italic.otf) italic normal 400 normal>) = 11.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXIntegralsSm' (STIXIntegralsSm-Bold.otf) normal normal 700 normal>) = 10.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXGeneral' (STIXGeneral-BoldItalic.otf) italic normal 700 normal>) = 11.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXNonUnicode' (STIXNonUnicode-BoldItalic.otf) italic normal 700 normal>) = 11.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIX' (STIX-BoldItalic.otf) italic normal 700 normal>) = 11.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXIntegralsD' (STIXIntegralsD-Regular.otf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal 700 condensed>) = 10.535
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'NanumMyeongjo' (NanumMyeongjoBold.ttf) normal normal 600 normal>) = 10.24
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIX' (STIX-Bold.otf) normal normal 700 normal>) = 10.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-DemiLight.ttc) normal normal 350 normal>) = 10.0975
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXIntegralsD' (STIXIntegralsD-Bold.otf) normal normal 700 normal>) = 10.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Black.ttc) normal normal 900 normal>) = 10.525
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXNonUnicode' (STIXNonUnicode-Bold.otf) normal normal 700 normal>) = 10.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntegralsUpSm-Bold.otf) normal normal 700 normal>) = 10.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 500 normal>) = 10.145
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 500 normal>) = 10.145
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'NanumBarunGothic' (NanumBarunGothic.ttf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 0.25
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Symbola' (Symbola_hint.ttf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'NanumBarunGothic' (NanumBarunGothicBold.ttf) normal normal 600 normal>) = 10.24
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 500 normal>) = 10.145
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeFourSym' (STIXSizeFourSym-Bold.otf) normal normal 700 normal>) = 10.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'NanumGothic' (NanumGothic.ttf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizeTwoSym-Bold.otf) normal normal 700 normal>) = 10.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXIntegralsUp' (STIXIntegralsUp-Regular.otf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizeThreeSym-Bold.otf) normal normal 700 normal>) = 10.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIX Math' (STIXMath-Regular.otf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.25
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizeThreeSym-Regular.otf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 500 normal>) = 11.145
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 500 normal>) = 11.145
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'NanumGothic' (NanumGothicBold.ttf) normal normal 600 normal>) = 10.24
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntegralsUpD-Regular.otf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizeTwoSym-Regular.otf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXGeneral' (STIXGeneral-Regular.otf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXGeneral' (STIXGeneral-Italic.otf) italic normal 400 normal>) = 11.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXIntegralsUp' (STIXIntegralsUp-Bold.otf) normal normal 700 normal>) = 10.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Medium.ttc) normal normal 500 normal>) = 10.145
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Light.ttc) normal normal 300 normal>) = 10.145
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXNonUnicode' (STIXNonUnicode-Regular.otf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Padauk' (Padauk.ttf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Padauk Book' (Padauk-book.ttf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'TakaoPGothic' (TakaoPGothic.ttf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXVariants' (STIXVariants-Regular.otf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 500 normal>) = 10.145
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeOneSym' (STIXSizeOneSym-Bold.otf) normal normal 700 normal>) = 10.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntegralsUpSm-Regular.otf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXIntegralsSm' (STIXIntegralsSm-Regular.otf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeFourSym' (STIXSizeFourSym-Regular.otf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXGeneral' (STIXGeneral-Bold.otf) normal normal 700 normal>) = 10.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXNonUnicode' (STIXNonUnicode-Italic.otf) italic normal 400 normal>) = 11.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Padauk Book' (Padauk-bookbold.ttf) normal normal 700 normal>) = 10.335
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
[10/30 02:06:50][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
[10/30 02:06:50][DEBUG] font_manager.py: 1367: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/opt/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
[10/30 02:16:21][INFO] run.py:  94: Train with configs:
[10/30 02:16:21][INFO] run.py:  95: 
{ AUGMENTATION      }-> False
{ BATCH_SIZE        }-> 10
{ DATA_JSON         }-> data.json
{ DATA_SEPARATOR    }-> ,
{ DECAY             }-> 0.005
{ DEVICES           }-> [0, 1]
{ EPOCHS            }-> 1000
{ FLOW              }-> DeepFlow
{ GPU               }-> 0,1
{ LABEL_DICT        }-> label_dict.json
{ LOAD              }-> True
{ LR                }-> 0.001
{ MODE              }-> train
{ MODEL_NAME        }-> twin
{ MODEL_TYPE        }-> twin
{ MOMENTUM          }-> 0.5
{ NESTEROV          }-> True
{ NORM              }-> normal
{ NUM_CLASSES       }-> 20
{ NUM_WORKERS       }-> 12
{ N_GPU             }-> 2
{ OUTPUT_DIR        }-> .
{ OUTPUT_FILE       }-> ./pred.txt
{ PATH_DATA         }-> /home/dhieu/MediaEval2020/sport/Sport-Video-Classification-MediaEval2020/data
{ PATH_MODEL        }-> ./twin
{ PATH_PROCESSED_DATA }-> /home/dhieu/MediaEval2020/sport/Sport-Video-Classification-MediaEval2020/data_processed
{ SEED              }-> 2020
{ SIZE_DATA         }-> [100 120 120]
{ VERSION           }-> 2020
{ dtype             }-> <class 'torch.cuda.FloatTensor'>

[10/30 02:16:26][INFO] train_test.py: 132: Load model ./twin for retraining
[10/30 02:16:28][INFO] train_test.py: 135: Model from epoch 194
[10/30 02:16:28][INFO] train_test.py: 139: loss_train_ : 2.30548
[10/30 02:16:28][INFO] train_test.py: 139: acc_train_ : 0.772727
[10/30 02:16:28][INFO] train_test.py: 139: loss_val_ : 2.55068
[10/30 02:16:28][INFO] train_test.py: 139: acc_val_ : 0.535519
[10/30 02:17:50][INFO] train_test.py:  66: Training: [Epoch  194] loss: 2.2987 accuracy: 0.7727 lr: 0.001000
[10/30 02:18:14][INFO] train_test.py: 101: Evaluation: [Epoch  194] loss: 2.5558 accuracy: 0.5301
[10/30 02:19:34][INFO] train_test.py:  66: Training: [Epoch  195] loss: 2.3155 accuracy: 0.7605 lr: 0.001000
[10/30 02:19:57][INFO] train_test.py: 101: Evaluation: [Epoch  195] loss: 2.5601 accuracy: 0.5246
[10/30 02:21:17][INFO] train_test.py:  66: Training: [Epoch  196] loss: 2.2995 accuracy: 0.7745 lr: 0.001000
[10/30 02:21:41][INFO] train_test.py: 101: Evaluation: [Epoch  196] loss: 2.5585 accuracy: 0.5246
[10/30 02:23:00][INFO] train_test.py:  66: Training: [Epoch  197] loss: 2.3032 accuracy: 0.7762 lr: 0.001000
[10/30 02:23:24][INFO] train_test.py: 101: Evaluation: [Epoch  197] loss: 2.5529 accuracy: 0.5246
[10/30 02:24:44][INFO] train_test.py:  66: Training: [Epoch  198] loss: 2.2956 accuracy: 0.7762 lr: 0.001000
[10/30 02:25:08][INFO] train_test.py: 101: Evaluation: [Epoch  198] loss: 2.5458 accuracy: 0.5301
[10/30 02:26:43][INFO] train_test.py:  66: Training: [Epoch  199] loss: 2.3020 accuracy: 0.7762 lr: 0.001000
[10/30 02:27:07][INFO] train_test.py: 101: Evaluation: [Epoch  199] loss: 2.5509 accuracy: 0.5246
[10/30 02:28:27][INFO] train_test.py:  66: Training: [Epoch  200] loss: 2.2951 accuracy: 0.7762 lr: 0.001000
[10/30 02:28:51][INFO] train_test.py: 101: Evaluation: [Epoch  200] loss: 2.5444 accuracy: 0.5355
[10/30 02:29:07][INFO] train_test.py: 165: Trained with 200 epochs, lr = 0.001, batchsize = 10, momentum = 0.5 with max validation accuracy of 0.54 done in 0:12:40
[10/30 02:29:07][DEBUG] font_manager.py: 1334: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal 200 normal>) = 0.24
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Thin.ttc) normal normal 250 normal>) = 10.1925
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal 700 condensed>) = 1.535
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 1.25
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXVariants' (STIXVariants-Bold.otf) normal normal 700 normal>) = 10.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'TakaoPGothic' (fonts-japanese-gothic.ttf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 500 normal>) = 10.145
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeOneSym' (STIXSizeOneSym-Regular.otf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizeFiveSym-Regular.otf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal 700 condensed>) = 0.5349999999999999
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 500 normal>) = 11.145
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-R.ttf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIX' (STIX-Regular.otf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Padauk' (Padauk-bold.ttf) normal normal 700 normal>) = 10.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'NanumMyeongjo' (NanumMyeongjo.ttf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Lohit Punjabi' (Lohit-Punjabi.ttf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 500 normal>) = 11.145
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntegralsUpD-Bold.otf) normal normal 700 normal>) = 10.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIX' (STIX-Italic.otf) italic normal 400 normal>) = 11.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXIntegralsSm' (STIXIntegralsSm-Bold.otf) normal normal 700 normal>) = 10.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXGeneral' (STIXGeneral-BoldItalic.otf) italic normal 700 normal>) = 11.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXNonUnicode' (STIXNonUnicode-BoldItalic.otf) italic normal 700 normal>) = 11.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIX' (STIX-BoldItalic.otf) italic normal 700 normal>) = 11.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXIntegralsD' (STIXIntegralsD-Regular.otf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal 700 condensed>) = 10.535
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'NanumMyeongjo' (NanumMyeongjoBold.ttf) normal normal 600 normal>) = 10.24
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIX' (STIX-Bold.otf) normal normal 700 normal>) = 10.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-DemiLight.ttc) normal normal 350 normal>) = 10.0975
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXIntegralsD' (STIXIntegralsD-Bold.otf) normal normal 700 normal>) = 10.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Black.ttc) normal normal 900 normal>) = 10.525
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXNonUnicode' (STIXNonUnicode-Bold.otf) normal normal 700 normal>) = 10.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntegralsUpSm-Bold.otf) normal normal 700 normal>) = 10.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 500 normal>) = 10.145
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 500 normal>) = 10.145
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'NanumBarunGothic' (NanumBarunGothic.ttf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 0.25
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Symbola' (Symbola_hint.ttf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'NanumBarunGothic' (NanumBarunGothicBold.ttf) normal normal 600 normal>) = 10.24
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 500 normal>) = 10.145
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeFourSym' (STIXSizeFourSym-Bold.otf) normal normal 700 normal>) = 10.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'NanumGothic' (NanumGothic.ttf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizeTwoSym-Bold.otf) normal normal 700 normal>) = 10.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXIntegralsUp' (STIXIntegralsUp-Regular.otf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizeThreeSym-Bold.otf) normal normal 700 normal>) = 10.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIX Math' (STIXMath-Regular.otf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.25
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizeThreeSym-Regular.otf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 500 normal>) = 11.145
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 500 normal>) = 11.145
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'NanumGothic' (NanumGothicBold.ttf) normal normal 600 normal>) = 10.24
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntegralsUpD-Regular.otf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizeTwoSym-Regular.otf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXGeneral' (STIXGeneral-Regular.otf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXGeneral' (STIXGeneral-Italic.otf) italic normal 400 normal>) = 11.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXIntegralsUp' (STIXIntegralsUp-Bold.otf) normal normal 700 normal>) = 10.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Medium.ttc) normal normal 500 normal>) = 10.145
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Light.ttc) normal normal 300 normal>) = 10.145
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXNonUnicode' (STIXNonUnicode-Regular.otf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Padauk' (Padauk.ttf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Padauk Book' (Padauk-book.ttf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'TakaoPGothic' (TakaoPGothic.ttf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXVariants' (STIXVariants-Regular.otf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 500 normal>) = 10.145
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeOneSym' (STIXSizeOneSym-Bold.otf) normal normal 700 normal>) = 10.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntegralsUpSm-Regular.otf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXIntegralsSm' (STIXIntegralsSm-Regular.otf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeFourSym' (STIXSizeFourSym-Regular.otf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXGeneral' (STIXGeneral-Bold.otf) normal normal 700 normal>) = 10.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXNonUnicode' (STIXNonUnicode-Italic.otf) italic normal 400 normal>) = 11.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Padauk Book' (Padauk-bookbold.ttf) normal normal 700 normal>) = 10.335
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
[10/30 02:29:07][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
[10/30 02:29:07][DEBUG] font_manager.py: 1367: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/opt/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
[10/30 02:31:33][INFO] run.py:  94: Train with configs:
[10/30 02:31:33][INFO] run.py:  95: 
{ AUGMENTATION      }-> False
{ BATCH_SIZE        }-> 10
{ DATA_JSON         }-> data.json
{ DATA_SEPARATOR    }-> ,
{ DECAY             }-> 0.005
{ DEVICES           }-> [0, 1]
{ EPOCHS            }-> 1000
{ FLOW              }-> DeepFlow
{ GPU               }-> 0,1
{ LABEL_DICT        }-> label_dict.json
{ LOAD              }-> True
{ LR                }-> 0.001
{ MODE              }-> train
{ MODEL_NAME        }-> twin
{ MODEL_TYPE        }-> twin
{ MOMENTUM          }-> 0.5
{ NESTEROV          }-> True
{ NORM              }-> normal
{ NUM_CLASSES       }-> 20
{ NUM_WORKERS       }-> 12
{ N_GPU             }-> 2
{ OUTPUT_DIR        }-> .
{ OUTPUT_FILE       }-> ./pred.txt
{ PATH_DATA         }-> /home/dhieu/MediaEval2020/sport/Sport-Video-Classification-MediaEval2020/data
{ PATH_MODEL        }-> ./twin
{ PATH_PROCESSED_DATA }-> /home/dhieu/MediaEval2020/sport/Sport-Video-Classification-MediaEval2020/data_processed
{ SEED              }-> 2020
{ SIZE_DATA         }-> [100 120 120]
{ VERSION           }-> 2020
{ dtype             }-> <class 'torch.cuda.FloatTensor'>

[10/30 02:31:38][INFO] train_test.py: 132: Load model ./twin for retraining
[10/30 02:31:40][INFO] train_test.py: 135: Model from epoch 200
[10/30 02:31:40][INFO] train_test.py: 139: loss_train_ : 2.29514
[10/30 02:31:40][INFO] train_test.py: 139: acc_train_ : 0.776224
[10/30 02:31:40][INFO] train_test.py: 139: loss_val_ : 2.54437
[10/30 02:31:40][INFO] train_test.py: 139: acc_val_ : 0.535519
[10/30 02:34:01][INFO] run.py:  96: Train with configs:
[10/30 02:34:01][INFO] run.py:  97: 
{ AUGMENTATION      }-> False
{ BATCH_SIZE        }-> 10
{ DATA_JSON         }-> data.json
{ DATA_SEPARATOR    }-> ,
{ DECAY             }-> 0.005
{ DEVICES           }-> [0, 1]
{ EPOCHS            }-> 1000
{ FLOW              }-> DeepFlow
{ GPU               }-> 0,1
{ LABEL_DICT        }-> label_dict.json
{ LOAD              }-> True
{ LR                }-> 0.001
{ MODE              }-> train
{ MODEL_NAME        }-> twin
{ MODEL_TYPE        }-> twin
{ MOMENTUM          }-> 0.5
{ NESTEROV          }-> True
{ NORM              }-> normal
{ NUM_CLASSES       }-> 20
{ NUM_WORKERS       }-> 12
{ N_GPU             }-> 2
{ OUTPUT_DIR        }-> .
{ OUTPUT_FILE       }-> ./pred.txt
{ PATH_DATA         }-> /home/dhieu/MediaEval2020/sport/Sport-Video-Classification-MediaEval2020/data
{ PATH_MODEL        }-> ./twin
{ PATH_PROCESSED_DATA }-> /home/dhieu/MediaEval2020/sport/Sport-Video-Classification-MediaEval2020/data_processed
{ SEED              }-> 2020
{ SIZE_DATA         }-> [100 120 120]
{ VERSION           }-> 2020
{ dtype             }-> <class 'torch.cuda.FloatTensor'>

[10/30 02:34:06][INFO] train_test.py: 132: Load model ./twin for retraining
[10/30 02:34:07][INFO] train_test.py: 135: Model from epoch 200
[10/30 02:34:07][INFO] train_test.py: 139: loss_train_ : 2.29514
[10/30 02:34:07][INFO] train_test.py: 139: acc_train_ : 0.776224
[10/30 02:34:07][INFO] train_test.py: 139: loss_val_ : 2.54437
[10/30 02:34:07][INFO] train_test.py: 139: acc_val_ : 0.535519
[10/30 02:35:30][INFO] train_test.py:  66: Training: [Epoch  200] loss: 2.2949 accuracy: 0.7762 lr: 0.001000
[10/30 02:35:54][INFO] train_test.py: 101: Evaluation: [Epoch  200] loss: 2.5432 accuracy: 0.5301
[10/30 02:35:54][INFO] train_test.py: 159: Minimum of Loss_val is updated from 2.5444 to 2.5432
[10/30 02:37:28][INFO] train_test.py:  66: Training: [Epoch  201] loss: 2.2949 accuracy: 0.7762 lr: 0.001000
[10/30 02:37:52][INFO] train_test.py: 101: Evaluation: [Epoch  201] loss: 2.5414 accuracy: 0.5410
[10/30 02:37:52][INFO] train_test.py: 159: Minimum of Loss_val is updated from 2.5432 to 2.5414
[10/30 02:39:27][INFO] train_test.py:  66: Training: [Epoch  202] loss: 2.2948 accuracy: 0.7762 lr: 0.001000
[10/30 02:39:51][INFO] train_test.py: 101: Evaluation: [Epoch  202] loss: 2.5444 accuracy: 0.5301
[10/30 02:41:10][INFO] train_test.py:  66: Training: [Epoch  203] loss: 2.3017 accuracy: 0.7762 lr: 0.001000
[10/30 02:41:34][INFO] train_test.py: 101: Evaluation: [Epoch  203] loss: 2.5409 accuracy: 0.5355
[10/30 02:41:34][INFO] train_test.py: 159: Minimum of Loss_val is updated from 2.5414 to 2.5409
[10/30 02:43:09][INFO] train_test.py:  66: Training: [Epoch  204] loss: 2.2948 accuracy: 0.7762 lr: 0.001000
[10/30 02:43:33][INFO] train_test.py: 101: Evaluation: [Epoch  204] loss: 2.5408 accuracy: 0.5355
[10/30 02:43:33][INFO] train_test.py: 159: Minimum of Loss_val is updated from 2.5409 to 2.5408
[10/30 02:45:07][INFO] train_test.py:  66: Training: [Epoch  205] loss: 2.3015 accuracy: 0.7762 lr: 0.001000
[10/30 02:45:31][INFO] train_test.py: 101: Evaluation: [Epoch  205] loss: 2.5414 accuracy: 0.5355
[10/30 02:46:51][INFO] train_test.py:  66: Training: [Epoch  206] loss: 2.2947 accuracy: 0.7762 lr: 0.001000
[10/30 02:47:14][INFO] train_test.py: 101: Evaluation: [Epoch  206] loss: 2.5433 accuracy: 0.5355
[10/30 02:48:34][INFO] train_test.py:  66: Training: [Epoch  207] loss: 2.3081 accuracy: 0.7762 lr: 0.001000
[10/30 02:48:58][INFO] train_test.py: 101: Evaluation: [Epoch  207] loss: 2.5462 accuracy: 0.5410
[10/30 02:50:18][INFO] train_test.py:  66: Training: [Epoch  208] loss: 2.2946 accuracy: 0.7762 lr: 0.001000
[10/30 02:50:42][INFO] train_test.py: 101: Evaluation: [Epoch  208] loss: 2.5367 accuracy: 0.5410
[10/30 02:50:42][INFO] train_test.py: 159: Minimum of Loss_val is updated from 2.5408 to 2.5367
[10/30 02:52:17][INFO] train_test.py:  66: Training: [Epoch  209] loss: 2.2946 accuracy: 0.7762 lr: 0.001000
[10/30 02:52:41][INFO] train_test.py: 101: Evaluation: [Epoch  209] loss: 2.5395 accuracy: 0.5410
[10/30 02:54:01][INFO] train_test.py:  66: Training: [Epoch  210] loss: 2.2947 accuracy: 0.7762 lr: 0.001000
[10/30 02:54:25][INFO] train_test.py: 101: Evaluation: [Epoch  210] loss: 2.5391 accuracy: 0.5410
[10/30 02:55:45][INFO] train_test.py:  66: Training: [Epoch  211] loss: 2.2945 accuracy: 0.7762 lr: 0.001000
[10/30 02:56:09][INFO] train_test.py: 101: Evaluation: [Epoch  211] loss: 2.5415 accuracy: 0.5355
[10/30 02:57:28][INFO] train_test.py:  66: Training: [Epoch  212] loss: 2.3012 accuracy: 0.7762 lr: 0.001000
[10/30 02:57:52][INFO] train_test.py: 101: Evaluation: [Epoch  212] loss: 2.5409 accuracy: 0.5410
[10/30 02:59:12][INFO] train_test.py:  66: Training: [Epoch  213] loss: 2.3012 accuracy: 0.7762 lr: 0.001000
[10/30 02:59:36][INFO] train_test.py: 101: Evaluation: [Epoch  213] loss: 2.5405 accuracy: 0.5410
[10/30 03:00:55][INFO] train_test.py:  66: Training: [Epoch  214] loss: 2.3012 accuracy: 0.7762 lr: 0.001000
[10/30 03:01:19][INFO] train_test.py: 101: Evaluation: [Epoch  214] loss: 2.5373 accuracy: 0.5464
[10/30 03:02:39][INFO] train_test.py:  66: Training: [Epoch  215] loss: 2.2945 accuracy: 0.7762 lr: 0.001000
[10/30 03:03:03][INFO] train_test.py: 101: Evaluation: [Epoch  215] loss: 2.5376 accuracy: 0.5464
[10/30 03:04:23][INFO] train_test.py:  66: Training: [Epoch  216] loss: 2.3011 accuracy: 0.7762 lr: 0.001000
[10/30 03:04:47][INFO] train_test.py: 101: Evaluation: [Epoch  216] loss: 2.5403 accuracy: 0.5355
[10/30 03:06:07][INFO] train_test.py:  66: Training: [Epoch  217] loss: 2.3011 accuracy: 0.7762 lr: 0.001000
[10/30 03:06:30][INFO] train_test.py: 101: Evaluation: [Epoch  217] loss: 2.5411 accuracy: 0.5410
[10/30 03:07:50][INFO] train_test.py:  66: Training: [Epoch  218] loss: 2.3011 accuracy: 0.7762 lr: 0.001000
[10/30 03:08:14][INFO] train_test.py: 101: Evaluation: [Epoch  218] loss: 2.5386 accuracy: 0.5410
[10/30 03:09:35][INFO] train_test.py:  66: Training: [Epoch  219] loss: 2.2943 accuracy: 0.7762 lr: 0.001000
[10/30 03:09:58][INFO] train_test.py: 101: Evaluation: [Epoch  219] loss: 2.5388 accuracy: 0.5410
[10/30 03:11:18][INFO] train_test.py:  66: Training: [Epoch  220] loss: 2.3012 accuracy: 0.7762 lr: 0.001000
[10/30 03:11:42][INFO] train_test.py: 101: Evaluation: [Epoch  220] loss: 2.5375 accuracy: 0.5355
[10/30 03:13:02][INFO] train_test.py:  66: Training: [Epoch  221] loss: 2.2942 accuracy: 0.7762 lr: 0.001000
[10/30 03:13:26][INFO] train_test.py: 101: Evaluation: [Epoch  221] loss: 2.5412 accuracy: 0.5355
[10/30 03:14:46][INFO] train_test.py:  66: Training: [Epoch  222] loss: 2.2942 accuracy: 0.7762 lr: 0.001000
[10/30 03:15:10][INFO] train_test.py: 101: Evaluation: [Epoch  222] loss: 2.5378 accuracy: 0.5464
[10/30 03:16:29][INFO] train_test.py:  66: Training: [Epoch  223] loss: 2.2943 accuracy: 0.7762 lr: 0.001000
[10/30 03:16:54][INFO] train_test.py: 101: Evaluation: [Epoch  223] loss: 2.5350 accuracy: 0.5574
[10/30 03:16:54][INFO] train_test.py: 159: Minimum of Loss_val is updated from 2.5367 to 2.5350
[10/30 03:18:28][INFO] train_test.py:  66: Training: [Epoch  224] loss: 2.3011 accuracy: 0.7762 lr: 0.001000
[10/30 03:18:52][INFO] train_test.py: 101: Evaluation: [Epoch  224] loss: 2.5397 accuracy: 0.5464
[10/30 03:20:12][INFO] train_test.py:  66: Training: [Epoch  225] loss: 2.2943 accuracy: 0.7762 lr: 0.001000
[10/30 03:20:36][INFO] train_test.py: 101: Evaluation: [Epoch  225] loss: 2.5385 accuracy: 0.5410
[10/30 03:21:55][INFO] train_test.py:  66: Training: [Epoch  226] loss: 2.2942 accuracy: 0.7762 lr: 0.001000
[10/30 03:22:19][INFO] train_test.py: 101: Evaluation: [Epoch  226] loss: 2.5396 accuracy: 0.5464
[10/30 03:23:39][INFO] train_test.py:  66: Training: [Epoch  227] loss: 2.2942 accuracy: 0.7762 lr: 0.001000
[10/30 03:24:03][INFO] train_test.py: 101: Evaluation: [Epoch  227] loss: 2.5394 accuracy: 0.5355
[10/30 03:25:22][INFO] train_test.py:  66: Training: [Epoch  228] loss: 2.3009 accuracy: 0.7762 lr: 0.001000
[10/30 03:25:46][INFO] train_test.py: 101: Evaluation: [Epoch  228] loss: 2.5372 accuracy: 0.5464
[10/30 03:27:06][INFO] train_test.py:  66: Training: [Epoch  229] loss: 2.2941 accuracy: 0.7762 lr: 0.001000
[10/30 03:27:30][INFO] train_test.py: 101: Evaluation: [Epoch  229] loss: 2.5378 accuracy: 0.5519
[10/30 03:28:50][INFO] train_test.py:  66: Training: [Epoch  230] loss: 2.2941 accuracy: 0.7762 lr: 0.001000
[10/30 03:29:14][INFO] train_test.py: 101: Evaluation: [Epoch  230] loss: 2.5397 accuracy: 0.5410
[10/30 03:30:34][INFO] train_test.py:  66: Training: [Epoch  231] loss: 2.3010 accuracy: 0.7762 lr: 0.001000
[10/30 03:30:58][INFO] train_test.py: 101: Evaluation: [Epoch  231] loss: 2.5371 accuracy: 0.5464
[10/30 03:32:18][INFO] train_test.py:  66: Training: [Epoch  232] loss: 2.3008 accuracy: 0.7762 lr: 0.001000
[10/30 03:32:41][INFO] train_test.py: 101: Evaluation: [Epoch  232] loss: 2.5377 accuracy: 0.5464
[10/30 03:34:01][INFO] train_test.py:  66: Training: [Epoch  233] loss: 2.2940 accuracy: 0.7762 lr: 0.001000
[10/30 03:34:25][INFO] train_test.py: 101: Evaluation: [Epoch  233] loss: 2.5378 accuracy: 0.5464
[10/30 03:35:45][INFO] train_test.py:  66: Training: [Epoch  234] loss: 2.3007 accuracy: 0.7780 lr: 0.001000
[10/30 03:36:09][INFO] train_test.py: 101: Evaluation: [Epoch  234] loss: 2.5357 accuracy: 0.5410
[10/30 03:37:28][INFO] train_test.py:  66: Training: [Epoch  235] loss: 2.3060 accuracy: 0.7780 lr: 0.001000
[10/30 03:37:52][INFO] train_test.py: 101: Evaluation: [Epoch  235] loss: 2.5442 accuracy: 0.5246
[10/30 03:39:12][INFO] train_test.py:  66: Training: [Epoch  236] loss: 2.2929 accuracy: 0.7780 lr: 0.001000
[10/30 03:39:36][INFO] train_test.py: 101: Evaluation: [Epoch  236] loss: 2.5374 accuracy: 0.5519
[10/30 03:40:56][INFO] train_test.py:  66: Training: [Epoch  237] loss: 2.2927 accuracy: 0.7780 lr: 0.001000
[10/30 03:41:20][INFO] train_test.py: 101: Evaluation: [Epoch  237] loss: 2.5381 accuracy: 0.5410
[10/30 03:42:40][INFO] train_test.py:  66: Training: [Epoch  238] loss: 2.2926 accuracy: 0.7780 lr: 0.001000
[10/30 03:43:04][INFO] train_test.py: 101: Evaluation: [Epoch  238] loss: 2.5387 accuracy: 0.5410
[10/30 03:44:23][INFO] train_test.py:  66: Training: [Epoch  239] loss: 2.2925 accuracy: 0.7780 lr: 0.001000
[10/30 03:44:47][INFO] train_test.py: 101: Evaluation: [Epoch  239] loss: 2.5356 accuracy: 0.5519
[10/30 03:46:07][INFO] train_test.py:  66: Training: [Epoch  240] loss: 2.2910 accuracy: 0.7832 lr: 0.001000
[10/30 03:46:31][INFO] train_test.py: 101: Evaluation: [Epoch  240] loss: 2.5736 accuracy: 0.5082
[10/30 03:47:51][INFO] train_test.py:  66: Training: [Epoch  241] loss: 2.2857 accuracy: 0.7885 lr: 0.001000
[10/30 03:48:15][INFO] train_test.py: 101: Evaluation: [Epoch  241] loss: 2.5525 accuracy: 0.5355
[10/30 03:49:35][INFO] train_test.py:  66: Training: [Epoch  242] loss: 2.2821 accuracy: 0.7920 lr: 0.001000
[10/30 03:49:59][INFO] train_test.py: 101: Evaluation: [Epoch  242] loss: 2.5378 accuracy: 0.5464
[10/30 03:51:18][INFO] train_test.py:  66: Training: [Epoch  243] loss: 2.2892 accuracy: 0.7850 lr: 0.001000
[10/30 03:51:42][INFO] train_test.py: 101: Evaluation: [Epoch  243] loss: 2.5131 accuracy: 0.5738
[10/30 03:51:42][INFO] train_test.py: 159: Minimum of Loss_val is updated from 2.5350 to 2.5131
[10/30 03:53:18][INFO] train_test.py:  66: Training: [Epoch  244] loss: 2.2734 accuracy: 0.8007 lr: 0.001000
[10/30 03:53:42][INFO] train_test.py: 101: Evaluation: [Epoch  244] loss: 2.5343 accuracy: 0.5464
[10/30 03:55:01][INFO] train_test.py:  66: Training: [Epoch  245] loss: 2.2790 accuracy: 0.8007 lr: 0.001000
[10/30 03:55:25][INFO] train_test.py: 101: Evaluation: [Epoch  245] loss: 2.5221 accuracy: 0.5683
[10/30 03:56:45][INFO] train_test.py:  66: Training: [Epoch  246] loss: 2.2767 accuracy: 0.8024 lr: 0.001000
[10/30 03:57:09][INFO] train_test.py: 101: Evaluation: [Epoch  246] loss: 2.5176 accuracy: 0.5738
[10/30 03:58:29][INFO] train_test.py:  66: Training: [Epoch  247] loss: 2.2763 accuracy: 0.8024 lr: 0.001000
[10/30 03:58:52][INFO] train_test.py: 101: Evaluation: [Epoch  247] loss: 2.5135 accuracy: 0.5792
[10/30 04:00:12][INFO] train_test.py:  66: Training: [Epoch  248] loss: 2.2694 accuracy: 0.8024 lr: 0.001000
[10/30 04:00:36][INFO] train_test.py: 101: Evaluation: [Epoch  248] loss: 2.5131 accuracy: 0.5792
[10/30 04:01:56][INFO] train_test.py:  66: Training: [Epoch  249] loss: 2.2759 accuracy: 0.8024 lr: 0.001000
[10/30 04:02:20][INFO] train_test.py: 101: Evaluation: [Epoch  249] loss: 2.5121 accuracy: 0.5792
[10/30 04:02:20][INFO] train_test.py: 159: Minimum of Loss_val is updated from 2.5131 to 2.5121
[10/30 04:03:55][INFO] train_test.py:  66: Training: [Epoch  250] loss: 2.2692 accuracy: 0.8024 lr: 0.001000
[10/30 04:04:19][INFO] train_test.py: 101: Evaluation: [Epoch  250] loss: 2.5137 accuracy: 0.5683
[10/30 04:05:38][INFO] train_test.py:  66: Training: [Epoch  251] loss: 2.2691 accuracy: 0.8024 lr: 0.001000
[10/30 04:06:02][INFO] train_test.py: 101: Evaluation: [Epoch  251] loss: 2.5124 accuracy: 0.5683
[10/30 04:07:22][INFO] train_test.py:  66: Training: [Epoch  252] loss: 2.2690 accuracy: 0.8024 lr: 0.001000
[10/30 04:07:46][INFO] train_test.py: 101: Evaluation: [Epoch  252] loss: 2.5140 accuracy: 0.5738
[10/30 04:09:06][INFO] train_test.py:  66: Training: [Epoch  253] loss: 2.2689 accuracy: 0.8024 lr: 0.001000
[10/30 04:09:30][INFO] train_test.py: 101: Evaluation: [Epoch  253] loss: 2.5122 accuracy: 0.5683
[10/30 04:10:50][INFO] train_test.py:  66: Training: [Epoch  254] loss: 2.2756 accuracy: 0.8024 lr: 0.001000
[10/30 04:11:14][INFO] train_test.py: 101: Evaluation: [Epoch  254] loss: 2.5126 accuracy: 0.5738
[10/30 04:12:34][INFO] train_test.py:  66: Training: [Epoch  255] loss: 2.2757 accuracy: 0.8024 lr: 0.001000
[10/30 04:12:58][INFO] train_test.py: 101: Evaluation: [Epoch  255] loss: 2.5182 accuracy: 0.5738
[10/30 04:14:18][INFO] train_test.py:  66: Training: [Epoch  256] loss: 2.2758 accuracy: 0.8024 lr: 0.001000
[10/30 04:14:42][INFO] train_test.py: 101: Evaluation: [Epoch  256] loss: 2.5143 accuracy: 0.5683
[10/30 04:16:01][INFO] train_test.py:  66: Training: [Epoch  257] loss: 2.2689 accuracy: 0.8024 lr: 0.001000
[10/30 04:16:25][INFO] train_test.py: 101: Evaluation: [Epoch  257] loss: 2.5141 accuracy: 0.5738
[10/30 04:17:45][INFO] train_test.py:  66: Training: [Epoch  258] loss: 2.2757 accuracy: 0.8024 lr: 0.001000
[10/30 04:18:09][INFO] train_test.py: 101: Evaluation: [Epoch  258] loss: 2.5105 accuracy: 0.5738
[10/30 04:18:09][INFO] train_test.py: 159: Minimum of Loss_val is updated from 2.5121 to 2.5105
[10/30 04:19:44][INFO] train_test.py:  66: Training: [Epoch  259] loss: 2.2688 accuracy: 0.8024 lr: 0.001000
[10/30 04:20:08][INFO] train_test.py: 101: Evaluation: [Epoch  259] loss: 2.5136 accuracy: 0.5738
[10/30 04:21:28][INFO] train_test.py:  66: Training: [Epoch  260] loss: 2.2688 accuracy: 0.8024 lr: 0.001000
[10/30 04:21:51][INFO] train_test.py: 101: Evaluation: [Epoch  260] loss: 2.5118 accuracy: 0.5738
[10/30 04:23:11][INFO] train_test.py:  66: Training: [Epoch  261] loss: 2.2755 accuracy: 0.8024 lr: 0.001000
[10/30 04:23:35][INFO] train_test.py: 101: Evaluation: [Epoch  261] loss: 2.5136 accuracy: 0.5738
[10/30 04:24:55][INFO] train_test.py:  66: Training: [Epoch  262] loss: 2.2687 accuracy: 0.8024 lr: 0.001000
[10/30 04:25:19][INFO] train_test.py: 101: Evaluation: [Epoch  262] loss: 2.5116 accuracy: 0.5738
[10/30 04:26:39][INFO] train_test.py:  66: Training: [Epoch  263] loss: 2.2687 accuracy: 0.8024 lr: 0.001000
[10/30 04:27:03][INFO] train_test.py: 101: Evaluation: [Epoch  263] loss: 2.5124 accuracy: 0.5792
[10/30 04:28:23][INFO] train_test.py:  66: Training: [Epoch  264] loss: 2.2687 accuracy: 0.8024 lr: 0.001000
[10/30 04:28:47][INFO] train_test.py: 101: Evaluation: [Epoch  264] loss: 2.5102 accuracy: 0.5792
[10/30 04:28:47][INFO] train_test.py: 159: Minimum of Loss_val is updated from 2.5105 to 2.5102
[10/30 04:30:22][INFO] train_test.py:  66: Training: [Epoch  265] loss: 2.2756 accuracy: 0.8024 lr: 0.001000
[10/30 04:30:46][INFO] train_test.py: 101: Evaluation: [Epoch  265] loss: 2.5197 accuracy: 0.5683
[10/30 04:32:06][INFO] train_test.py:  66: Training: [Epoch  266] loss: 2.2691 accuracy: 0.8024 lr: 0.001000
[10/30 04:32:30][INFO] train_test.py: 101: Evaluation: [Epoch  266] loss: 2.5137 accuracy: 0.5738
[10/30 04:33:50][INFO] train_test.py:  66: Training: [Epoch  267] loss: 2.2689 accuracy: 0.8024 lr: 0.001000
[10/30 04:34:14][INFO] train_test.py: 101: Evaluation: [Epoch  267] loss: 2.5125 accuracy: 0.5738
[10/30 04:35:34][INFO] train_test.py:  66: Training: [Epoch  268] loss: 2.2755 accuracy: 0.8024 lr: 0.001000
[10/30 04:35:58][INFO] train_test.py: 101: Evaluation: [Epoch  268] loss: 2.5128 accuracy: 0.5683
[10/30 04:37:18][INFO] train_test.py:  66: Training: [Epoch  269] loss: 2.2754 accuracy: 0.8024 lr: 0.001000
[10/30 04:37:42][INFO] train_test.py: 101: Evaluation: [Epoch  269] loss: 2.5135 accuracy: 0.5738
[10/30 04:39:02][INFO] train_test.py:  66: Training: [Epoch  270] loss: 2.2686 accuracy: 0.8024 lr: 0.001000
[10/30 04:39:26][INFO] train_test.py: 101: Evaluation: [Epoch  270] loss: 2.5124 accuracy: 0.5738
[10/30 04:40:46][INFO] train_test.py:  66: Training: [Epoch  271] loss: 2.2753 accuracy: 0.8024 lr: 0.001000
[10/30 04:41:09][INFO] train_test.py: 101: Evaluation: [Epoch  271] loss: 2.5130 accuracy: 0.5683
[10/30 04:42:29][INFO] train_test.py:  66: Training: [Epoch  272] loss: 2.2754 accuracy: 0.8024 lr: 0.001000
[10/30 04:42:53][INFO] train_test.py: 101: Evaluation: [Epoch  272] loss: 2.5116 accuracy: 0.5738
[10/30 04:44:13][INFO] train_test.py:  66: Training: [Epoch  273] loss: 2.2685 accuracy: 0.8024 lr: 0.001000
[10/30 04:44:38][INFO] train_test.py: 101: Evaluation: [Epoch  273] loss: 2.5120 accuracy: 0.5738
[10/30 04:45:57][INFO] train_test.py:  66: Training: [Epoch  274] loss: 2.2685 accuracy: 0.8024 lr: 0.001000
[10/30 04:46:21][INFO] train_test.py: 101: Evaluation: [Epoch  274] loss: 2.5104 accuracy: 0.5738
[10/30 04:47:41][INFO] train_test.py:  66: Training: [Epoch  275] loss: 2.2685 accuracy: 0.8024 lr: 0.001000
[10/30 04:48:05][INFO] train_test.py: 101: Evaluation: [Epoch  275] loss: 2.5122 accuracy: 0.5738
[10/30 04:49:25][INFO] train_test.py:  66: Training: [Epoch  276] loss: 2.2752 accuracy: 0.8024 lr: 0.001000
[10/30 04:49:49][INFO] train_test.py: 101: Evaluation: [Epoch  276] loss: 2.5102 accuracy: 0.5738
[10/30 04:49:49][INFO] train_test.py: 159: Minimum of Loss_val is updated from 2.5102 to 2.5102
[10/30 04:51:23][INFO] train_test.py:  66: Training: [Epoch  277] loss: 2.2685 accuracy: 0.8024 lr: 0.001000
[10/30 04:51:47][INFO] train_test.py: 101: Evaluation: [Epoch  277] loss: 2.5096 accuracy: 0.5738
[10/30 04:51:47][INFO] train_test.py: 159: Minimum of Loss_val is updated from 2.5102 to 2.5096
[10/30 04:53:23][INFO] train_test.py:  66: Training: [Epoch  278] loss: 2.2714 accuracy: 0.7990 lr: 0.001000
[10/30 04:53:47][INFO] train_test.py: 101: Evaluation: [Epoch  278] loss: 2.5184 accuracy: 0.5628
[10/30 04:55:06][INFO] train_test.py:  66: Training: [Epoch  279] loss: 2.2674 accuracy: 0.8042 lr: 0.001000
[10/30 04:55:30][INFO] train_test.py: 101: Evaluation: [Epoch  279] loss: 2.5162 accuracy: 0.5683
[10/30 04:56:50][INFO] train_test.py:  66: Training: [Epoch  280] loss: 2.2670 accuracy: 0.8042 lr: 0.001000
[10/30 04:57:13][INFO] train_test.py: 101: Evaluation: [Epoch  280] loss: 2.5150 accuracy: 0.5628
[10/30 04:58:33][INFO] train_test.py:  66: Training: [Epoch  281] loss: 2.2669 accuracy: 0.8042 lr: 0.001000
[10/30 04:58:57][INFO] train_test.py: 101: Evaluation: [Epoch  281] loss: 2.5123 accuracy: 0.5738
[10/30 05:00:16][INFO] train_test.py:  66: Training: [Epoch  282] loss: 2.2669 accuracy: 0.8042 lr: 0.001000
[10/30 05:00:40][INFO] train_test.py: 101: Evaluation: [Epoch  282] loss: 2.5111 accuracy: 0.5738
[10/30 05:02:00][INFO] train_test.py:  66: Training: [Epoch  283] loss: 2.2669 accuracy: 0.8042 lr: 0.001000
[10/30 05:02:24][INFO] train_test.py: 101: Evaluation: [Epoch  283] loss: 2.5106 accuracy: 0.5792
[10/30 05:03:44][INFO] train_test.py:  66: Training: [Epoch  284] loss: 2.2668 accuracy: 0.8042 lr: 0.001000
[10/30 05:04:08][INFO] train_test.py: 101: Evaluation: [Epoch  284] loss: 2.5112 accuracy: 0.5792
[10/30 05:05:28][INFO] train_test.py:  66: Training: [Epoch  285] loss: 2.2668 accuracy: 0.8042 lr: 0.001000
[10/30 05:05:52][INFO] train_test.py: 101: Evaluation: [Epoch  285] loss: 2.5094 accuracy: 0.5847
[10/30 05:05:52][INFO] train_test.py: 159: Minimum of Loss_val is updated from 2.5096 to 2.5094
[10/30 05:07:26][INFO] train_test.py:  66: Training: [Epoch  286] loss: 2.2735 accuracy: 0.8042 lr: 0.001000
[10/30 05:07:50][INFO] train_test.py: 101: Evaluation: [Epoch  286] loss: 2.5098 accuracy: 0.5847
[10/30 05:09:10][INFO] train_test.py:  66: Training: [Epoch  287] loss: 2.2668 accuracy: 0.8042 lr: 0.001000
[10/30 05:09:34][INFO] train_test.py: 101: Evaluation: [Epoch  287] loss: 2.5094 accuracy: 0.5792
[10/30 05:09:34][INFO] train_test.py: 159: Minimum of Loss_val is updated from 2.5094 to 2.5094
[10/30 05:11:10][INFO] train_test.py:  66: Training: [Epoch  288] loss: 2.2735 accuracy: 0.8042 lr: 0.001000
[10/30 05:11:34][INFO] train_test.py: 101: Evaluation: [Epoch  288] loss: 2.5090 accuracy: 0.5847
[10/30 05:11:34][INFO] train_test.py: 159: Minimum of Loss_val is updated from 2.5094 to 2.5090
[10/30 05:13:08][INFO] train_test.py:  66: Training: [Epoch  289] loss: 2.2735 accuracy: 0.8042 lr: 0.001000
[10/30 05:13:32][INFO] train_test.py: 101: Evaluation: [Epoch  289] loss: 2.5087 accuracy: 0.5792
[10/30 05:13:32][INFO] train_test.py: 159: Minimum of Loss_val is updated from 2.5090 to 2.5087
[10/30 05:15:08][INFO] train_test.py:  66: Training: [Epoch  290] loss: 2.2735 accuracy: 0.8042 lr: 0.001000
[10/30 05:15:31][INFO] train_test.py: 101: Evaluation: [Epoch  290] loss: 2.5094 accuracy: 0.5738
[10/30 05:16:52][INFO] train_test.py:  66: Training: [Epoch  291] loss: 2.2668 accuracy: 0.8042 lr: 0.001000
[10/30 05:17:15][INFO] train_test.py: 101: Evaluation: [Epoch  291] loss: 2.5093 accuracy: 0.5792
[10/30 05:18:35][INFO] train_test.py:  66: Training: [Epoch  292] loss: 2.2668 accuracy: 0.8042 lr: 0.001000
[10/30 05:18:59][INFO] train_test.py: 101: Evaluation: [Epoch  292] loss: 2.5101 accuracy: 0.5792
[10/30 05:20:18][INFO] train_test.py:  66: Training: [Epoch  293] loss: 2.2667 accuracy: 0.8042 lr: 0.001000
[10/30 05:20:42][INFO] train_test.py: 101: Evaluation: [Epoch  293] loss: 2.5091 accuracy: 0.5792
[10/30 05:22:02][INFO] train_test.py:  66: Training: [Epoch  294] loss: 2.2668 accuracy: 0.8042 lr: 0.001000
[10/30 05:22:26][INFO] train_test.py: 101: Evaluation: [Epoch  294] loss: 2.5094 accuracy: 0.5847
[10/30 05:23:45][INFO] train_test.py:  66: Training: [Epoch  295] loss: 2.2734 accuracy: 0.8042 lr: 0.001000
[10/30 05:24:09][INFO] train_test.py: 101: Evaluation: [Epoch  295] loss: 2.5093 accuracy: 0.5847
[10/30 05:25:29][INFO] train_test.py:  66: Training: [Epoch  296] loss: 2.2668 accuracy: 0.8042 lr: 0.001000
[10/30 05:25:52][INFO] train_test.py: 101: Evaluation: [Epoch  296] loss: 2.5096 accuracy: 0.5738
[10/30 05:27:12][INFO] train_test.py:  66: Training: [Epoch  297] loss: 2.2734 accuracy: 0.8042 lr: 0.001000
[10/30 05:27:36][INFO] train_test.py: 101: Evaluation: [Epoch  297] loss: 2.5098 accuracy: 0.5792
[10/30 05:28:56][INFO] train_test.py:  66: Training: [Epoch  298] loss: 2.2667 accuracy: 0.8042 lr: 0.001000
[10/30 05:29:20][INFO] train_test.py: 101: Evaluation: [Epoch  298] loss: 2.5086 accuracy: 0.5792
[10/30 05:29:20][INFO] train_test.py: 159: Minimum of Loss_val is updated from 2.5087 to 2.5086
[10/30 05:30:54][INFO] train_test.py:  66: Training: [Epoch  299] loss: 2.2667 accuracy: 0.8042 lr: 0.001000
[10/30 05:31:18][INFO] train_test.py: 101: Evaluation: [Epoch  299] loss: 2.5092 accuracy: 0.5738
[10/30 05:32:39][INFO] train_test.py:  66: Training: [Epoch  300] loss: 2.2667 accuracy: 0.8042 lr: 0.001000
[10/30 05:33:03][INFO] train_test.py: 101: Evaluation: [Epoch  300] loss: 2.5100 accuracy: 0.5847
[10/30 05:34:22][INFO] train_test.py:  66: Training: [Epoch  301] loss: 2.2667 accuracy: 0.8042 lr: 0.001000
[10/30 05:34:46][INFO] train_test.py: 101: Evaluation: [Epoch  301] loss: 2.5093 accuracy: 0.5738
[10/30 05:36:07][INFO] train_test.py:  66: Training: [Epoch  302] loss: 2.2667 accuracy: 0.8042 lr: 0.001000
[10/30 05:36:30][INFO] train_test.py: 101: Evaluation: [Epoch  302] loss: 2.5089 accuracy: 0.5792
[10/30 05:37:50][INFO] train_test.py:  66: Training: [Epoch  303] loss: 2.2734 accuracy: 0.8042 lr: 0.001000
[10/30 05:38:14][INFO] train_test.py: 101: Evaluation: [Epoch  303] loss: 2.5093 accuracy: 0.5792
[10/30 05:39:35][INFO] train_test.py:  66: Training: [Epoch  304] loss: 2.2734 accuracy: 0.8042 lr: 0.001000
[10/30 05:39:59][INFO] train_test.py: 101: Evaluation: [Epoch  304] loss: 2.5098 accuracy: 0.5847
[10/30 05:41:19][INFO] train_test.py:  66: Training: [Epoch  305] loss: 2.2667 accuracy: 0.8042 lr: 0.001000
[10/30 05:41:43][INFO] train_test.py: 101: Evaluation: [Epoch  305] loss: 2.5089 accuracy: 0.5738
[10/30 05:43:03][INFO] train_test.py:  66: Training: [Epoch  306] loss: 2.2734 accuracy: 0.8042 lr: 0.001000
[10/30 05:43:27][INFO] train_test.py: 101: Evaluation: [Epoch  306] loss: 2.5081 accuracy: 0.5847
[10/30 05:43:27][INFO] train_test.py: 159: Minimum of Loss_val is updated from 2.5086 to 2.5081
[10/30 05:45:02][INFO] train_test.py:  66: Training: [Epoch  307] loss: 2.2734 accuracy: 0.8042 lr: 0.001000
[10/30 05:45:26][INFO] train_test.py: 101: Evaluation: [Epoch  307] loss: 2.5095 accuracy: 0.5792
[10/30 05:46:46][INFO] train_test.py:  66: Training: [Epoch  308] loss: 2.2667 accuracy: 0.8042 lr: 0.001000
[10/30 05:47:10][INFO] train_test.py: 101: Evaluation: [Epoch  308] loss: 2.5085 accuracy: 0.5738
[10/30 05:48:29][INFO] train_test.py:  66: Training: [Epoch  309] loss: 2.2734 accuracy: 0.8042 lr: 0.001000
[10/30 05:48:53][INFO] train_test.py: 101: Evaluation: [Epoch  309] loss: 2.5093 accuracy: 0.5792
[10/30 05:50:14][INFO] train_test.py:  66: Training: [Epoch  310] loss: 2.2801 accuracy: 0.8042 lr: 0.001000
[10/30 05:50:38][INFO] train_test.py: 101: Evaluation: [Epoch  310] loss: 2.5093 accuracy: 0.5792
[10/30 05:51:57][INFO] train_test.py:  66: Training: [Epoch  311] loss: 2.2667 accuracy: 0.8042 lr: 0.001000
[10/30 05:52:21][INFO] train_test.py: 101: Evaluation: [Epoch  311] loss: 2.5090 accuracy: 0.5738
[10/30 05:53:41][INFO] train_test.py:  66: Training: [Epoch  312] loss: 2.2734 accuracy: 0.8042 lr: 0.001000
[10/30 05:54:05][INFO] train_test.py: 101: Evaluation: [Epoch  312] loss: 2.5100 accuracy: 0.5683
[10/30 05:55:25][INFO] train_test.py:  66: Training: [Epoch  313] loss: 2.2667 accuracy: 0.8042 lr: 0.001000
[10/30 05:55:49][INFO] train_test.py: 101: Evaluation: [Epoch  313] loss: 2.5094 accuracy: 0.5738
[10/30 05:57:09][INFO] train_test.py:  66: Training: [Epoch  314] loss: 2.2734 accuracy: 0.8042 lr: 0.001000
[10/30 05:57:32][INFO] train_test.py: 101: Evaluation: [Epoch  314] loss: 2.5092 accuracy: 0.5792
[10/30 05:58:53][INFO] train_test.py:  66: Training: [Epoch  315] loss: 2.2666 accuracy: 0.8042 lr: 0.001000
[10/30 05:59:17][INFO] train_test.py: 101: Evaluation: [Epoch  315] loss: 2.5083 accuracy: 0.5738
[10/30 06:00:37][INFO] train_test.py:  66: Training: [Epoch  316] loss: 2.2734 accuracy: 0.8042 lr: 0.001000
[10/30 06:01:01][INFO] train_test.py: 101: Evaluation: [Epoch  316] loss: 2.5085 accuracy: 0.5738
[10/30 06:02:21][INFO] train_test.py:  66: Training: [Epoch  317] loss: 2.2667 accuracy: 0.8042 lr: 0.001000
[10/30 06:02:45][INFO] train_test.py: 101: Evaluation: [Epoch  317] loss: 2.5090 accuracy: 0.5792
[10/30 06:04:05][INFO] train_test.py:  66: Training: [Epoch  318] loss: 2.2667 accuracy: 0.8042 lr: 0.001000
[10/30 06:04:28][INFO] train_test.py: 101: Evaluation: [Epoch  318] loss: 2.5083 accuracy: 0.5792
[10/30 06:05:48][INFO] train_test.py:  66: Training: [Epoch  319] loss: 2.2736 accuracy: 0.8042 lr: 0.001000
[10/30 06:06:12][INFO] train_test.py: 101: Evaluation: [Epoch  319] loss: 2.5076 accuracy: 0.5738
[10/30 06:06:12][INFO] train_test.py: 159: Minimum of Loss_val is updated from 2.5081 to 2.5076
[10/30 06:07:48][INFO] train_test.py:  66: Training: [Epoch  320] loss: 2.2667 accuracy: 0.8042 lr: 0.001000
[10/30 06:08:12][INFO] train_test.py: 101: Evaluation: [Epoch  320] loss: 2.5090 accuracy: 0.5792
[10/30 06:09:32][INFO] train_test.py:  66: Training: [Epoch  321] loss: 2.2667 accuracy: 0.8042 lr: 0.001000
[10/30 06:09:56][INFO] train_test.py: 101: Evaluation: [Epoch  321] loss: 2.5084 accuracy: 0.5792
[10/30 06:11:16][INFO] train_test.py:  66: Training: [Epoch  322] loss: 2.2666 accuracy: 0.8042 lr: 0.001000
[10/30 06:11:40][INFO] train_test.py: 101: Evaluation: [Epoch  322] loss: 2.5101 accuracy: 0.5738
[10/30 06:13:00][INFO] train_test.py:  66: Training: [Epoch  323] loss: 2.2734 accuracy: 0.8042 lr: 0.001000
[10/30 06:13:24][INFO] train_test.py: 101: Evaluation: [Epoch  323] loss: 2.5085 accuracy: 0.5738
[10/30 06:14:44][INFO] train_test.py:  66: Training: [Epoch  324] loss: 2.2666 accuracy: 0.8042 lr: 0.001000
[10/30 06:15:08][INFO] train_test.py: 101: Evaluation: [Epoch  324] loss: 2.5088 accuracy: 0.5792
[10/30 06:16:28][INFO] train_test.py:  66: Training: [Epoch  325] loss: 2.2666 accuracy: 0.8042 lr: 0.001000
[10/30 06:16:52][INFO] train_test.py: 101: Evaluation: [Epoch  325] loss: 2.5101 accuracy: 0.5738
[10/30 06:18:12][INFO] train_test.py:  66: Training: [Epoch  326] loss: 2.2734 accuracy: 0.8042 lr: 0.001000
[10/30 06:18:36][INFO] train_test.py: 101: Evaluation: [Epoch  326] loss: 2.5117 accuracy: 0.5683
[10/30 06:19:56][INFO] train_test.py:  66: Training: [Epoch  327] loss: 2.2734 accuracy: 0.8042 lr: 0.001000
[10/30 06:20:20][INFO] train_test.py: 101: Evaluation: [Epoch  327] loss: 2.5085 accuracy: 0.5738
[10/30 06:21:40][INFO] train_test.py:  66: Training: [Epoch  328] loss: 2.2667 accuracy: 0.8042 lr: 0.001000
[10/30 06:22:04][INFO] train_test.py: 101: Evaluation: [Epoch  328] loss: 2.5105 accuracy: 0.5738
[10/30 06:23:24][INFO] train_test.py:  66: Training: [Epoch  329] loss: 2.2666 accuracy: 0.8042 lr: 0.001000
[10/30 06:23:48][INFO] train_test.py: 101: Evaluation: [Epoch  329] loss: 2.5095 accuracy: 0.5738
[10/30 06:25:07][INFO] train_test.py:  66: Training: [Epoch  330] loss: 2.2666 accuracy: 0.8042 lr: 0.001000
[10/30 06:25:31][INFO] train_test.py: 101: Evaluation: [Epoch  330] loss: 2.5103 accuracy: 0.5738
[10/30 06:26:51][INFO] train_test.py:  66: Training: [Epoch  331] loss: 2.2800 accuracy: 0.8042 lr: 0.001000
[10/30 06:27:15][INFO] train_test.py: 101: Evaluation: [Epoch  331] loss: 2.5106 accuracy: 0.5738
[10/30 06:28:35][INFO] train_test.py:  66: Training: [Epoch  332] loss: 2.2666 accuracy: 0.8042 lr: 0.001000
[10/30 06:28:59][INFO] train_test.py: 101: Evaluation: [Epoch  332] loss: 2.5116 accuracy: 0.5738
[10/30 06:30:19][INFO] train_test.py:  66: Training: [Epoch  333] loss: 2.2665 accuracy: 0.8042 lr: 0.001000
[10/30 06:30:43][INFO] train_test.py: 101: Evaluation: [Epoch  333] loss: 2.5107 accuracy: 0.5683
[10/30 06:32:03][INFO] train_test.py:  66: Training: [Epoch  334] loss: 2.2732 accuracy: 0.8042 lr: 0.001000
[10/30 06:32:27][INFO] train_test.py: 101: Evaluation: [Epoch  334] loss: 2.5102 accuracy: 0.5683
[10/30 06:33:46][INFO] train_test.py:  66: Training: [Epoch  335] loss: 2.2665 accuracy: 0.8042 lr: 0.001000
[10/30 06:34:10][INFO] train_test.py: 101: Evaluation: [Epoch  335] loss: 2.5107 accuracy: 0.5683
[10/30 06:35:30][INFO] train_test.py:  66: Training: [Epoch  336] loss: 2.2732 accuracy: 0.8042 lr: 0.001000
[10/30 06:35:54][INFO] train_test.py: 101: Evaluation: [Epoch  336] loss: 2.5111 accuracy: 0.5738
[10/30 06:37:15][INFO] train_test.py:  66: Training: [Epoch  337] loss: 2.2665 accuracy: 0.8042 lr: 0.001000
[10/30 06:37:39][INFO] train_test.py: 101: Evaluation: [Epoch  337] loss: 2.5109 accuracy: 0.5738
[10/30 06:38:59][INFO] train_test.py:  66: Training: [Epoch  338] loss: 2.2732 accuracy: 0.8042 lr: 0.001000
[10/30 06:39:23][INFO] train_test.py: 101: Evaluation: [Epoch  338] loss: 2.5111 accuracy: 0.5683
[10/30 06:40:43][INFO] train_test.py:  66: Training: [Epoch  339] loss: 2.2665 accuracy: 0.8042 lr: 0.001000
[10/30 06:41:07][INFO] train_test.py: 101: Evaluation: [Epoch  339] loss: 2.5112 accuracy: 0.5683
[10/30 06:42:27][INFO] train_test.py:  66: Training: [Epoch  340] loss: 2.2664 accuracy: 0.8042 lr: 0.001000
[10/30 06:42:51][INFO] train_test.py: 101: Evaluation: [Epoch  340] loss: 2.5122 accuracy: 0.5628
[10/30 06:44:11][INFO] train_test.py:  66: Training: [Epoch  341] loss: 2.2795 accuracy: 0.8059 lr: 0.001000
[10/30 06:44:35][INFO] train_test.py: 101: Evaluation: [Epoch  341] loss: 2.5125 accuracy: 0.5628
[10/30 06:45:54][INFO] train_test.py:  66: Training: [Epoch  342] loss: 2.2646 accuracy: 0.8164 lr: 0.001000
[10/30 06:46:18][INFO] train_test.py: 101: Evaluation: [Epoch  342] loss: 2.5147 accuracy: 0.5738
[10/30 06:47:38][INFO] train_test.py:  66: Training: [Epoch  343] loss: 2.2495 accuracy: 0.8252 lr: 0.001000
[10/30 06:48:02][INFO] train_test.py: 101: Evaluation: [Epoch  343] loss: 2.5364 accuracy: 0.5301
[10/30 06:49:22][INFO] train_test.py:  66: Training: [Epoch  344] loss: 2.2468 accuracy: 0.8269 lr: 0.001000
[10/30 06:49:46][INFO] train_test.py: 101: Evaluation: [Epoch  344] loss: 2.5043 accuracy: 0.5792
[10/30 06:49:46][INFO] train_test.py: 159: Minimum of Loss_val is updated from 2.5076 to 2.5043
[10/30 06:51:22][INFO] train_test.py:  66: Training: [Epoch  345] loss: 2.2457 accuracy: 0.8269 lr: 0.001000
[10/30 06:51:46][INFO] train_test.py: 101: Evaluation: [Epoch  345] loss: 2.5045 accuracy: 0.5792
[10/30 06:53:06][INFO] train_test.py:  66: Training: [Epoch  346] loss: 2.2442 accuracy: 0.8287 lr: 0.001000
[10/30 06:53:30][INFO] train_test.py: 101: Evaluation: [Epoch  346] loss: 2.5016 accuracy: 0.5902
[10/30 06:53:30][INFO] train_test.py: 159: Minimum of Loss_val is updated from 2.5043 to 2.5016
[10/30 06:55:05][INFO] train_test.py:  66: Training: [Epoch  347] loss: 2.2503 accuracy: 0.8287 lr: 0.001000
[10/30 06:55:29][INFO] train_test.py: 101: Evaluation: [Epoch  347] loss: 2.4988 accuracy: 0.5902
[10/30 06:55:29][INFO] train_test.py: 159: Minimum of Loss_val is updated from 2.5016 to 2.4988
[10/30 06:57:05][INFO] train_test.py:  66: Training: [Epoch  348] loss: 2.2502 accuracy: 0.8287 lr: 0.001000
[10/30 06:57:29][INFO] train_test.py: 101: Evaluation: [Epoch  348] loss: 2.5013 accuracy: 0.5792
[10/30 06:58:49][INFO] train_test.py:  66: Training: [Epoch  349] loss: 2.2502 accuracy: 0.8287 lr: 0.001000
[10/30 06:59:13][INFO] train_test.py: 101: Evaluation: [Epoch  349] loss: 2.5005 accuracy: 0.5792
[10/30 07:00:33][INFO] train_test.py:  66: Training: [Epoch  350] loss: 2.2501 accuracy: 0.8287 lr: 0.001000
[10/30 07:00:57][INFO] train_test.py: 101: Evaluation: [Epoch  350] loss: 2.5012 accuracy: 0.5847
[10/30 07:02:17][INFO] train_test.py:  66: Training: [Epoch  351] loss: 2.2502 accuracy: 0.8287 lr: 0.001000
[10/30 07:02:41][INFO] train_test.py: 101: Evaluation: [Epoch  351] loss: 2.5000 accuracy: 0.5847
[10/30 07:04:01][INFO] train_test.py:  66: Training: [Epoch  352] loss: 2.2500 accuracy: 0.8287 lr: 0.001000
[10/30 07:04:25][INFO] train_test.py: 101: Evaluation: [Epoch  352] loss: 2.4988 accuracy: 0.5792
[10/30 07:04:25][INFO] train_test.py: 159: Minimum of Loss_val is updated from 2.4988 to 2.4988
[10/30 07:06:01][INFO] train_test.py:  66: Training: [Epoch  353] loss: 2.2499 accuracy: 0.8287 lr: 0.001000
[10/30 07:06:25][INFO] train_test.py: 101: Evaluation: [Epoch  353] loss: 2.4996 accuracy: 0.5792
[10/30 07:07:45][INFO] train_test.py:  66: Training: [Epoch  354] loss: 2.2431 accuracy: 0.8287 lr: 0.001000
[10/30 07:08:09][INFO] train_test.py: 101: Evaluation: [Epoch  354] loss: 2.4999 accuracy: 0.5792
[10/30 07:09:29][INFO] train_test.py:  66: Training: [Epoch  355] loss: 2.2358 accuracy: 0.8409 lr: 0.001000
[10/30 07:09:53][INFO] train_test.py: 101: Evaluation: [Epoch  355] loss: 2.5424 accuracy: 0.5301
[10/30 07:11:13][INFO] train_test.py:  66: Training: [Epoch  356] loss: 2.2285 accuracy: 0.8479 lr: 0.001000
[10/30 07:11:37][INFO] train_test.py: 101: Evaluation: [Epoch  356] loss: 2.5169 accuracy: 0.5683
[10/30 07:12:57][INFO] train_test.py:  66: Training: [Epoch  357] loss: 2.2240 accuracy: 0.8514 lr: 0.001000
[10/30 07:13:21][INFO] train_test.py: 101: Evaluation: [Epoch  357] loss: 2.5017 accuracy: 0.5847
[10/30 07:14:42][INFO] train_test.py:  66: Training: [Epoch  358] loss: 2.2215 accuracy: 0.8531 lr: 0.001000
[10/30 07:15:06][INFO] train_test.py: 101: Evaluation: [Epoch  358] loss: 2.4913 accuracy: 0.5902
[10/30 07:15:06][INFO] train_test.py: 159: Minimum of Loss_val is updated from 2.4988 to 2.4913
[10/30 07:16:42][INFO] train_test.py:  66: Training: [Epoch  359] loss: 2.2205 accuracy: 0.8531 lr: 0.001000
[10/30 07:17:06][INFO] train_test.py: 101: Evaluation: [Epoch  359] loss: 2.4937 accuracy: 0.5902
[10/30 07:18:26][INFO] train_test.py:  66: Training: [Epoch  360] loss: 2.2203 accuracy: 0.8531 lr: 0.001000
[10/30 07:18:50][INFO] train_test.py: 101: Evaluation: [Epoch  360] loss: 2.4881 accuracy: 0.5956
[10/30 07:18:50][INFO] train_test.py: 159: Minimum of Loss_val is updated from 2.4913 to 2.4881
[10/30 07:20:26][INFO] train_test.py:  66: Training: [Epoch  361] loss: 2.2269 accuracy: 0.8531 lr: 0.001000
[10/30 07:20:50][INFO] train_test.py: 101: Evaluation: [Epoch  361] loss: 2.4916 accuracy: 0.5902
[10/30 07:22:10][INFO] train_test.py:  66: Training: [Epoch  362] loss: 2.2202 accuracy: 0.8531 lr: 0.001000
[10/30 07:22:34][INFO] train_test.py: 101: Evaluation: [Epoch  362] loss: 2.4865 accuracy: 0.6011
[10/30 07:22:34][INFO] train_test.py: 159: Minimum of Loss_val is updated from 2.4881 to 2.4865
[10/30 07:24:10][INFO] train_test.py:  66: Training: [Epoch  363] loss: 2.2201 accuracy: 0.8531 lr: 0.001000
[10/30 07:24:34][INFO] train_test.py: 101: Evaluation: [Epoch  363] loss: 2.4842 accuracy: 0.6011
[10/30 07:24:34][INFO] train_test.py: 159: Minimum of Loss_val is updated from 2.4865 to 2.4842
[10/30 07:26:10][INFO] train_test.py:  66: Training: [Epoch  364] loss: 2.2200 accuracy: 0.8531 lr: 0.001000
[10/30 07:26:34][INFO] train_test.py: 101: Evaluation: [Epoch  364] loss: 2.4845 accuracy: 0.5956
[10/30 07:27:53][INFO] train_test.py:  66: Training: [Epoch  365] loss: 2.2268 accuracy: 0.8531 lr: 0.001000
[10/30 07:28:17][INFO] train_test.py: 101: Evaluation: [Epoch  365] loss: 2.4852 accuracy: 0.5956
[10/30 07:29:37][INFO] train_test.py:  66: Training: [Epoch  366] loss: 2.2200 accuracy: 0.8531 lr: 0.001000
[10/30 07:30:01][INFO] train_test.py: 101: Evaluation: [Epoch  366] loss: 2.4864 accuracy: 0.5902
[10/30 07:31:21][INFO] train_test.py:  66: Training: [Epoch  367] loss: 2.2199 accuracy: 0.8531 lr: 0.001000
[10/30 07:31:45][INFO] train_test.py: 101: Evaluation: [Epoch  367] loss: 2.4850 accuracy: 0.5956
[10/30 07:33:05][INFO] train_test.py:  66: Training: [Epoch  368] loss: 2.2199 accuracy: 0.8531 lr: 0.001000
[10/30 07:33:29][INFO] train_test.py: 101: Evaluation: [Epoch  368] loss: 2.4859 accuracy: 0.5956
[10/30 07:34:49][INFO] train_test.py:  66: Training: [Epoch  369] loss: 2.2198 accuracy: 0.8531 lr: 0.001000
[10/30 07:35:13][INFO] train_test.py: 101: Evaluation: [Epoch  369] loss: 2.4833 accuracy: 0.5956
[10/30 07:35:13][INFO] train_test.py: 159: Minimum of Loss_val is updated from 2.4842 to 2.4833
[10/30 07:36:51][INFO] train_test.py:  66: Training: [Epoch  370] loss: 2.2199 accuracy: 0.8531 lr: 0.001000
[10/30 07:37:16][INFO] train_test.py: 101: Evaluation: [Epoch  370] loss: 2.4840 accuracy: 0.5902
[10/30 07:38:36][INFO] train_test.py:  66: Training: [Epoch  371] loss: 2.2198 accuracy: 0.8531 lr: 0.001000
[10/30 07:39:00][INFO] train_test.py: 101: Evaluation: [Epoch  371] loss: 2.4842 accuracy: 0.5902
[10/30 07:40:20][INFO] train_test.py:  66: Training: [Epoch  372] loss: 2.2265 accuracy: 0.8531 lr: 0.001000
[10/30 07:40:44][INFO] train_test.py: 101: Evaluation: [Epoch  372] loss: 2.4879 accuracy: 0.5847
[10/30 07:42:04][INFO] train_test.py:  66: Training: [Epoch  373] loss: 2.2198 accuracy: 0.8531 lr: 0.001000
[10/30 07:42:28][INFO] train_test.py: 101: Evaluation: [Epoch  373] loss: 2.4826 accuracy: 0.5956
[10/30 07:42:28][INFO] train_test.py: 159: Minimum of Loss_val is updated from 2.4833 to 2.4826
[10/30 07:44:03][INFO] train_test.py:  66: Training: [Epoch  374] loss: 2.2197 accuracy: 0.8531 lr: 0.001000
[10/30 07:44:27][INFO] train_test.py: 101: Evaluation: [Epoch  374] loss: 2.4846 accuracy: 0.5902
[10/30 07:45:47][INFO] train_test.py:  66: Training: [Epoch  375] loss: 2.2266 accuracy: 0.8531 lr: 0.001000
[10/30 07:46:11][INFO] train_test.py: 101: Evaluation: [Epoch  375] loss: 2.4834 accuracy: 0.6011
[10/30 07:47:31][INFO] train_test.py:  66: Training: [Epoch  376] loss: 2.2197 accuracy: 0.8531 lr: 0.001000
[10/30 07:47:55][INFO] train_test.py: 101: Evaluation: [Epoch  376] loss: 2.4839 accuracy: 0.5956
[10/30 07:49:15][INFO] train_test.py:  66: Training: [Epoch  377] loss: 2.2266 accuracy: 0.8531 lr: 0.001000
[10/30 07:49:39][INFO] train_test.py: 101: Evaluation: [Epoch  377] loss: 2.4852 accuracy: 0.5902
[10/30 07:50:59][INFO] train_test.py:  66: Training: [Epoch  378] loss: 2.2197 accuracy: 0.8531 lr: 0.001000
[10/30 07:51:23][INFO] train_test.py: 101: Evaluation: [Epoch  378] loss: 2.4858 accuracy: 0.5956
[10/30 07:52:43][INFO] train_test.py:  66: Training: [Epoch  379] loss: 2.2196 accuracy: 0.8531 lr: 0.001000
[10/30 07:53:07][INFO] train_test.py: 101: Evaluation: [Epoch  379] loss: 2.4841 accuracy: 0.6011
[10/30 07:54:27][INFO] train_test.py:  66: Training: [Epoch  380] loss: 2.2264 accuracy: 0.8531 lr: 0.001000
[10/30 07:54:51][INFO] train_test.py: 101: Evaluation: [Epoch  380] loss: 2.4830 accuracy: 0.6011
[10/30 07:56:11][INFO] train_test.py:  66: Training: [Epoch  381] loss: 2.2196 accuracy: 0.8531 lr: 0.001000
[10/30 07:56:35][INFO] train_test.py: 101: Evaluation: [Epoch  381] loss: 2.4833 accuracy: 0.5956
[10/30 07:57:55][INFO] train_test.py:  66: Training: [Epoch  382] loss: 2.2196 accuracy: 0.8531 lr: 0.001000
[10/30 07:58:19][INFO] train_test.py: 101: Evaluation: [Epoch  382] loss: 2.4839 accuracy: 0.5956
[10/30 07:59:39][INFO] train_test.py:  66: Training: [Epoch  383] loss: 2.2196 accuracy: 0.8531 lr: 0.001000
[10/30 08:00:03][INFO] train_test.py: 101: Evaluation: [Epoch  383] loss: 2.4825 accuracy: 0.6011
[10/30 08:00:03][INFO] train_test.py: 159: Minimum of Loss_val is updated from 2.4826 to 2.4825
[10/30 08:01:39][INFO] train_test.py:  66: Training: [Epoch  384] loss: 2.2196 accuracy: 0.8531 lr: 0.001000
[10/30 08:02:03][INFO] train_test.py: 101: Evaluation: [Epoch  384] loss: 2.4849 accuracy: 0.6011
[10/30 08:03:23][INFO] train_test.py:  66: Training: [Epoch  385] loss: 2.2196 accuracy: 0.8531 lr: 0.001000
[10/30 08:03:47][INFO] train_test.py: 101: Evaluation: [Epoch  385] loss: 2.4856 accuracy: 0.6011
[10/30 08:05:07][INFO] train_test.py:  66: Training: [Epoch  386] loss: 2.2220 accuracy: 0.8514 lr: 0.001000
[10/30 08:05:31][INFO] train_test.py: 101: Evaluation: [Epoch  386] loss: 2.5057 accuracy: 0.5847
[10/30 08:06:51][INFO] train_test.py:  66: Training: [Epoch  387] loss: 2.2254 accuracy: 0.8549 lr: 0.001000
[10/30 08:07:15][INFO] train_test.py: 101: Evaluation: [Epoch  387] loss: 2.4825 accuracy: 0.6011
[10/30 08:08:35][INFO] train_test.py:  66: Training: [Epoch  388] loss: 2.2183 accuracy: 0.8549 lr: 0.001000
[10/30 08:08:59][INFO] train_test.py: 101: Evaluation: [Epoch  388] loss: 2.4847 accuracy: 0.6120
[10/30 08:10:19][INFO] train_test.py:  66: Training: [Epoch  389] loss: 2.2181 accuracy: 0.8549 lr: 0.001000
[10/30 08:10:43][INFO] train_test.py: 101: Evaluation: [Epoch  389] loss: 2.4834 accuracy: 0.6120
[10/30 08:12:03][INFO] train_test.py:  66: Training: [Epoch  390] loss: 2.2180 accuracy: 0.8549 lr: 0.001000
[10/30 08:12:27][INFO] train_test.py: 101: Evaluation: [Epoch  390] loss: 2.4821 accuracy: 0.6120
[10/30 08:12:27][INFO] train_test.py: 159: Minimum of Loss_val is updated from 2.4825 to 2.4821
[10/30 08:14:04][INFO] train_test.py:  66: Training: [Epoch  391] loss: 2.2179 accuracy: 0.8549 lr: 0.001000
[10/30 08:14:28][INFO] train_test.py: 101: Evaluation: [Epoch  391] loss: 2.4821 accuracy: 0.6120
[10/30 08:15:48][INFO] train_test.py:  66: Training: [Epoch  392] loss: 2.2179 accuracy: 0.8549 lr: 0.001000
[10/30 08:16:12][INFO] train_test.py: 101: Evaluation: [Epoch  392] loss: 2.4804 accuracy: 0.6120
[10/30 08:16:12][INFO] train_test.py: 159: Minimum of Loss_val is updated from 2.4821 to 2.4804
[10/30 08:17:48][INFO] train_test.py:  66: Training: [Epoch  393] loss: 2.2248 accuracy: 0.8549 lr: 0.001000
[10/30 08:18:11][INFO] train_test.py: 101: Evaluation: [Epoch  393] loss: 2.4830 accuracy: 0.6066
[10/30 08:19:32][INFO] train_test.py:  66: Training: [Epoch  394] loss: 2.2179 accuracy: 0.8549 lr: 0.001000
[10/30 08:19:56][INFO] train_test.py: 101: Evaluation: [Epoch  394] loss: 2.4819 accuracy: 0.6120
[10/30 08:21:15][INFO] train_test.py:  66: Training: [Epoch  395] loss: 2.2179 accuracy: 0.8549 lr: 0.001000
[10/30 08:21:39][INFO] train_test.py: 101: Evaluation: [Epoch  395] loss: 2.4815 accuracy: 0.6120
[10/30 08:22:59][INFO] train_test.py:  66: Training: [Epoch  396] loss: 2.2245 accuracy: 0.8549 lr: 0.001000
[10/30 08:23:23][INFO] train_test.py: 101: Evaluation: [Epoch  396] loss: 2.4833 accuracy: 0.6066
[10/30 08:24:43][INFO] train_test.py:  66: Training: [Epoch  397] loss: 2.2245 accuracy: 0.8549 lr: 0.001000
[10/30 08:25:07][INFO] train_test.py: 101: Evaluation: [Epoch  397] loss: 2.4817 accuracy: 0.6066
[10/30 08:26:28][INFO] train_test.py:  66: Training: [Epoch  398] loss: 2.2224 accuracy: 0.8566 lr: 0.001000
[10/30 08:26:52][INFO] train_test.py: 101: Evaluation: [Epoch  398] loss: 2.6228 accuracy: 0.4590
[10/30 08:28:12][INFO] train_test.py:  66: Training: [Epoch  399] loss: 2.2047 accuracy: 0.8741 lr: 0.001000
[10/30 08:28:36][INFO] train_test.py: 101: Evaluation: [Epoch  399] loss: 2.4745 accuracy: 0.6175
[10/30 08:28:36][INFO] train_test.py: 159: Minimum of Loss_val is updated from 2.4804 to 2.4745
[10/30 08:30:13][INFO] train_test.py:  66: Training: [Epoch  400] loss: 2.1952 accuracy: 0.8811 lr: 0.001000
[10/30 08:30:37][INFO] train_test.py: 101: Evaluation: [Epoch  400] loss: 2.4890 accuracy: 0.5956
[10/30 08:31:57][INFO] train_test.py:  66: Training: [Epoch  401] loss: 2.2011 accuracy: 0.8829 lr: 0.001000
[10/30 08:32:21][INFO] train_test.py: 101: Evaluation: [Epoch  401] loss: 2.4653 accuracy: 0.6175
[10/30 08:32:21][INFO] train_test.py: 159: Minimum of Loss_val is updated from 2.4745 to 2.4653
[10/30 08:33:58][INFO] train_test.py:  66: Training: [Epoch  402] loss: 2.1903 accuracy: 0.8846 lr: 0.001000
[10/30 08:34:22][INFO] train_test.py: 101: Evaluation: [Epoch  402] loss: 2.4564 accuracy: 0.6284
[10/30 08:34:22][INFO] train_test.py: 159: Minimum of Loss_val is updated from 2.4653 to 2.4564
[10/30 08:35:58][INFO] train_test.py:  66: Training: [Epoch  403] loss: 2.1881 accuracy: 0.8864 lr: 0.001000
[10/30 08:36:22][INFO] train_test.py: 101: Evaluation: [Epoch  403] loss: 2.4589 accuracy: 0.6393
[10/30 08:37:42][INFO] train_test.py:  66: Training: [Epoch  404] loss: 2.1880 accuracy: 0.8864 lr: 0.001000
[10/30 08:38:06][INFO] train_test.py: 101: Evaluation: [Epoch  404] loss: 2.4563 accuracy: 0.6284
[10/30 08:38:06][INFO] train_test.py: 159: Minimum of Loss_val is updated from 2.4564 to 2.4563
[10/30 08:39:43][INFO] train_test.py:  66: Training: [Epoch  405] loss: 2.1873 accuracy: 0.8881 lr: 0.001000
[10/30 08:40:06][INFO] train_test.py: 101: Evaluation: [Epoch  405] loss: 2.4547 accuracy: 0.6284
[10/30 08:40:06][INFO] train_test.py: 159: Minimum of Loss_val is updated from 2.4563 to 2.4547
[10/30 08:41:44][INFO] train_test.py:  66: Training: [Epoch  406] loss: 2.1932 accuracy: 0.8881 lr: 0.001000
[10/30 08:42:08][INFO] train_test.py: 101: Evaluation: [Epoch  406] loss: 2.4604 accuracy: 0.6284
[10/30 08:43:28][INFO] train_test.py:  66: Training: [Epoch  407] loss: 2.1863 accuracy: 0.8899 lr: 0.001000
[10/30 08:43:52][INFO] train_test.py: 101: Evaluation: [Epoch  407] loss: 2.4558 accuracy: 0.6284
[10/30 08:45:12][INFO] train_test.py:  66: Training: [Epoch  408] loss: 2.1831 accuracy: 0.8916 lr: 0.001000
[10/30 08:45:36][INFO] train_test.py: 101: Evaluation: [Epoch  408] loss: 2.5082 accuracy: 0.5847
[10/30 08:46:57][INFO] train_test.py:  66: Training: [Epoch  409] loss: 2.1829 accuracy: 0.8934 lr: 0.001000
[10/30 08:47:21][INFO] train_test.py: 101: Evaluation: [Epoch  409] loss: 2.4573 accuracy: 0.6175
[10/30 08:48:41][INFO] train_test.py:  66: Training: [Epoch  410] loss: 2.1817 accuracy: 0.8934 lr: 0.001000
[10/30 08:49:05][INFO] train_test.py: 101: Evaluation: [Epoch  410] loss: 2.4549 accuracy: 0.6230
[10/30 08:50:25][INFO] train_test.py:  66: Training: [Epoch  411] loss: 2.1815 accuracy: 0.8934 lr: 0.001000
[10/30 08:50:49][INFO] train_test.py: 101: Evaluation: [Epoch  411] loss: 2.4518 accuracy: 0.6230
[10/30 08:50:49][INFO] train_test.py: 159: Minimum of Loss_val is updated from 2.4547 to 2.4518
[10/30 08:52:25][INFO] train_test.py:  66: Training: [Epoch  412] loss: 2.1880 accuracy: 0.8934 lr: 0.001000
[10/30 08:52:49][INFO] train_test.py: 101: Evaluation: [Epoch  412] loss: 2.4517 accuracy: 0.6230
[10/30 08:52:49][INFO] train_test.py: 159: Minimum of Loss_val is updated from 2.4518 to 2.4517
[10/30 08:54:25][INFO] train_test.py:  66: Training: [Epoch  413] loss: 2.1880 accuracy: 0.8934 lr: 0.001000
[10/30 08:54:49][INFO] train_test.py: 101: Evaluation: [Epoch  413] loss: 2.4522 accuracy: 0.6339
[10/30 08:56:10][INFO] train_test.py:  66: Training: [Epoch  414] loss: 2.1813 accuracy: 0.8934 lr: 0.001000
[10/30 08:56:33][INFO] train_test.py: 101: Evaluation: [Epoch  414] loss: 2.4518 accuracy: 0.6284
[10/30 08:57:54][INFO] train_test.py:  66: Training: [Epoch  415] loss: 2.1811 accuracy: 0.8934 lr: 0.001000
[10/30 08:58:17][INFO] train_test.py: 101: Evaluation: [Epoch  415] loss: 2.4551 accuracy: 0.6230
[10/30 08:59:38][INFO] train_test.py:  66: Training: [Epoch  416] loss: 2.1803 accuracy: 0.8951 lr: 0.001000
[10/30 09:00:02][INFO] train_test.py: 101: Evaluation: [Epoch  416] loss: 2.4521 accuracy: 0.6230
[10/30 09:01:22][INFO] train_test.py:  66: Training: [Epoch  417] loss: 2.1794 accuracy: 0.8969 lr: 0.001000
[10/30 09:01:46][INFO] train_test.py: 101: Evaluation: [Epoch  417] loss: 2.4552 accuracy: 0.6339
[10/30 09:03:07][INFO] train_test.py:  66: Training: [Epoch  418] loss: 2.1848 accuracy: 0.8969 lr: 0.001000
[10/30 09:03:31][INFO] train_test.py: 101: Evaluation: [Epoch  418] loss: 2.4497 accuracy: 0.6448
[10/30 09:03:31][INFO] train_test.py: 159: Minimum of Loss_val is updated from 2.4517 to 2.4497
[10/30 09:05:08][INFO] train_test.py:  66: Training: [Epoch  419] loss: 2.1847 accuracy: 0.8969 lr: 0.001000
[10/30 09:05:32][INFO] train_test.py: 101: Evaluation: [Epoch  419] loss: 2.4523 accuracy: 0.6339
[10/30 09:06:52][INFO] train_test.py:  66: Training: [Epoch  420] loss: 2.1779 accuracy: 0.8969 lr: 0.001000
[10/30 09:07:16][INFO] train_test.py: 101: Evaluation: [Epoch  420] loss: 2.4523 accuracy: 0.6284
[10/30 09:08:36][INFO] train_test.py:  66: Training: [Epoch  421] loss: 2.1779 accuracy: 0.8969 lr: 0.001000
[10/30 09:09:00][INFO] train_test.py: 101: Evaluation: [Epoch  421] loss: 2.4521 accuracy: 0.6393
[10/30 09:10:20][INFO] train_test.py:  66: Training: [Epoch  422] loss: 2.1779 accuracy: 0.8969 lr: 0.001000
[10/30 09:27:39][INFO] train_test.py: 101: Evaluation: [Epoch  422] loss: 2.4483 accuracy: 0.6393
[10/30 09:27:39][INFO] train_test.py: 159: Minimum of Loss_val is updated from 2.4497 to 2.4483
[10/30 09:29:13][INFO] train_test.py:  66: Training: [Epoch  423] loss: 2.1846 accuracy: 0.8969 lr: 0.001000
[10/30 09:29:37][INFO] train_test.py: 101: Evaluation: [Epoch  423] loss: 2.4475 accuracy: 0.6339
[10/30 09:29:37][INFO] train_test.py: 159: Minimum of Loss_val is updated from 2.4483 to 2.4475
[10/30 09:31:11][INFO] train_test.py:  66: Training: [Epoch  424] loss: 2.1779 accuracy: 0.8969 lr: 0.001000
[10/30 09:31:35][INFO] train_test.py: 101: Evaluation: [Epoch  424] loss: 2.4472 accuracy: 0.6393
[10/30 09:31:35][INFO] train_test.py: 159: Minimum of Loss_val is updated from 2.4475 to 2.4472
[10/30 09:33:09][INFO] train_test.py:  66: Training: [Epoch  425] loss: 2.1779 accuracy: 0.8969 lr: 0.001000
[10/30 09:33:33][INFO] train_test.py: 101: Evaluation: [Epoch  425] loss: 2.4483 accuracy: 0.6284
[10/30 09:34:52][INFO] train_test.py:  66: Training: [Epoch  426] loss: 2.1778 accuracy: 0.8969 lr: 0.001000
[10/30 09:35:16][INFO] train_test.py: 101: Evaluation: [Epoch  426] loss: 2.4494 accuracy: 0.6284
[10/30 09:36:35][INFO] train_test.py:  66: Training: [Epoch  427] loss: 2.1914 accuracy: 0.8969 lr: 0.001000
[10/30 09:36:59][INFO] train_test.py: 101: Evaluation: [Epoch  427] loss: 2.4519 accuracy: 0.6339
[10/30 09:38:19][INFO] train_test.py:  66: Training: [Epoch  428] loss: 2.1779 accuracy: 0.8969 lr: 0.001000
[10/30 09:38:43][INFO] train_test.py: 101: Evaluation: [Epoch  428] loss: 2.4483 accuracy: 0.6393
[10/30 09:40:02][INFO] train_test.py:  66: Training: [Epoch  429] loss: 2.1847 accuracy: 0.8969 lr: 0.001000
[10/30 09:40:26][INFO] train_test.py: 101: Evaluation: [Epoch  429] loss: 2.4496 accuracy: 0.6339
[10/30 09:41:46][INFO] train_test.py:  66: Training: [Epoch  430] loss: 2.1778 accuracy: 0.8969 lr: 0.001000
[10/30 09:42:10][INFO] train_test.py: 101: Evaluation: [Epoch  430] loss: 2.4518 accuracy: 0.6393
[10/30 09:43:29][INFO] train_test.py:  66: Training: [Epoch  431] loss: 2.1778 accuracy: 0.8969 lr: 0.001000
[10/30 09:43:53][INFO] train_test.py: 101: Evaluation: [Epoch  431] loss: 2.4487 accuracy: 0.6393
[10/30 09:45:13][INFO] train_test.py:  66: Training: [Epoch  432] loss: 2.1844 accuracy: 0.8969 lr: 0.001000
[10/30 09:45:36][INFO] train_test.py: 101: Evaluation: [Epoch  432] loss: 2.4486 accuracy: 0.6284
[10/30 09:46:56][INFO] train_test.py:  66: Training: [Epoch  433] loss: 2.1777 accuracy: 0.8969 lr: 0.001000
[10/30 09:47:20][INFO] train_test.py: 101: Evaluation: [Epoch  433] loss: 2.4502 accuracy: 0.6393
[10/30 09:48:39][INFO] train_test.py:  66: Training: [Epoch  434] loss: 2.1844 accuracy: 0.8969 lr: 0.001000
[10/30 09:49:03][INFO] train_test.py: 101: Evaluation: [Epoch  434] loss: 2.4473 accuracy: 0.6339
[10/30 09:50:23][INFO] train_test.py:  66: Training: [Epoch  435] loss: 2.1778 accuracy: 0.8969 lr: 0.001000
[10/30 09:50:47][INFO] train_test.py: 101: Evaluation: [Epoch  435] loss: 2.4500 accuracy: 0.6284
[10/30 09:52:06][INFO] train_test.py:  66: Training: [Epoch  436] loss: 2.1777 accuracy: 0.8969 lr: 0.001000
[10/30 09:52:30][INFO] train_test.py: 101: Evaluation: [Epoch  436] loss: 2.4509 accuracy: 0.6284
[10/30 09:53:50][INFO] train_test.py:  66: Training: [Epoch  437] loss: 2.1844 accuracy: 0.8969 lr: 0.001000
[10/30 09:54:14][INFO] train_test.py: 101: Evaluation: [Epoch  437] loss: 2.4492 accuracy: 0.6339
[10/30 09:55:33][INFO] train_test.py:  66: Training: [Epoch  438] loss: 2.1778 accuracy: 0.8969 lr: 0.001000
[10/30 09:55:57][INFO] train_test.py: 101: Evaluation: [Epoch  438] loss: 2.4509 accuracy: 0.6393
[10/30 09:57:16][INFO] train_test.py:  66: Training: [Epoch  439] loss: 2.1778 accuracy: 0.8969 lr: 0.001000
[10/30 09:57:40][INFO] train_test.py: 101: Evaluation: [Epoch  439] loss: 2.4504 accuracy: 0.6339
[10/30 09:59:00][INFO] train_test.py:  66: Training: [Epoch  440] loss: 2.1777 accuracy: 0.8969 lr: 0.001000
[10/30 09:59:23][INFO] train_test.py: 101: Evaluation: [Epoch  440] loss: 2.4488 accuracy: 0.6284
[10/30 10:00:43][INFO] train_test.py:  66: Training: [Epoch  441] loss: 2.1777 accuracy: 0.8969 lr: 0.001000
[10/30 10:01:07][INFO] train_test.py: 101: Evaluation: [Epoch  441] loss: 2.4495 accuracy: 0.6339
[10/30 10:02:26][INFO] train_test.py:  66: Training: [Epoch  442] loss: 2.1844 accuracy: 0.8969 lr: 0.001000
[10/30 10:02:50][INFO] train_test.py: 101: Evaluation: [Epoch  442] loss: 2.4510 accuracy: 0.6393
[10/30 10:04:09][INFO] train_test.py:  66: Training: [Epoch  443] loss: 2.1846 accuracy: 0.8969 lr: 0.001000
[10/30 10:04:33][INFO] train_test.py: 101: Evaluation: [Epoch  443] loss: 2.4503 accuracy: 0.6339
[10/30 10:05:53][INFO] train_test.py:  66: Training: [Epoch  444] loss: 2.1776 accuracy: 0.8969 lr: 0.001000
[10/30 10:06:17][INFO] train_test.py: 101: Evaluation: [Epoch  444] loss: 2.4502 accuracy: 0.6284
[10/30 10:07:36][INFO] train_test.py:  66: Training: [Epoch  445] loss: 2.1776 accuracy: 0.8969 lr: 0.001000
[10/30 10:08:00][INFO] train_test.py: 101: Evaluation: [Epoch  445] loss: 2.4519 accuracy: 0.6284
[10/30 10:09:19][INFO] train_test.py:  66: Training: [Epoch  446] loss: 2.1776 accuracy: 0.8969 lr: 0.001000
[10/30 10:09:43][INFO] train_test.py: 101: Evaluation: [Epoch  446] loss: 2.4505 accuracy: 0.6284
[10/30 10:11:03][INFO] train_test.py:  66: Training: [Epoch  447] loss: 2.1776 accuracy: 0.8969 lr: 0.001000
[10/30 10:11:27][INFO] train_test.py: 101: Evaluation: [Epoch  447] loss: 2.4513 accuracy: 0.6339
[10/30 10:12:46][INFO] train_test.py:  66: Training: [Epoch  448] loss: 2.1777 accuracy: 0.8969 lr: 0.001000
[10/30 10:13:10][INFO] train_test.py: 101: Evaluation: [Epoch  448] loss: 2.4501 accuracy: 0.6284
[10/30 10:14:29][INFO] train_test.py:  66: Training: [Epoch  449] loss: 2.1776 accuracy: 0.8969 lr: 0.001000
[10/30 10:14:53][INFO] train_test.py: 101: Evaluation: [Epoch  449] loss: 2.4499 accuracy: 0.6284
[10/30 10:16:13][INFO] train_test.py:  66: Training: [Epoch  450] loss: 2.1776 accuracy: 0.8969 lr: 0.001000
[10/30 10:16:37][INFO] train_test.py: 101: Evaluation: [Epoch  450] loss: 2.4502 accuracy: 0.6284
[10/30 10:17:56][INFO] train_test.py:  66: Training: [Epoch  451] loss: 2.1843 accuracy: 0.8969 lr: 0.001000
[10/30 10:18:20][INFO] train_test.py: 101: Evaluation: [Epoch  451] loss: 2.4501 accuracy: 0.6339
[10/30 10:19:39][INFO] train_test.py:  66: Training: [Epoch  452] loss: 2.1776 accuracy: 0.8969 lr: 0.001000
[10/30 10:20:03][INFO] train_test.py: 101: Evaluation: [Epoch  452] loss: 2.4512 accuracy: 0.6284
[10/30 10:21:22][INFO] train_test.py:  66: Training: [Epoch  453] loss: 2.1776 accuracy: 0.8969 lr: 0.001000
[10/30 10:21:46][INFO] train_test.py: 101: Evaluation: [Epoch  453] loss: 2.4501 accuracy: 0.6339
[10/30 10:23:05][INFO] train_test.py:  66: Training: [Epoch  454] loss: 2.1776 accuracy: 0.8969 lr: 0.001000
[10/30 10:23:29][INFO] train_test.py: 101: Evaluation: [Epoch  454] loss: 2.4512 accuracy: 0.6339
[10/30 10:24:49][INFO] train_test.py:  66: Training: [Epoch  455] loss: 2.1776 accuracy: 0.8969 lr: 0.001000
[10/30 10:25:13][INFO] train_test.py: 101: Evaluation: [Epoch  455] loss: 2.4530 accuracy: 0.6230
[10/30 10:26:32][INFO] train_test.py:  66: Training: [Epoch  456] loss: 2.1776 accuracy: 0.8969 lr: 0.001000
[10/30 10:26:56][INFO] train_test.py: 101: Evaluation: [Epoch  456] loss: 2.4520 accuracy: 0.6284
[10/30 10:28:16][INFO] train_test.py:  66: Training: [Epoch  457] loss: 2.1844 accuracy: 0.8969 lr: 0.001000
[10/30 10:28:40][INFO] train_test.py: 101: Evaluation: [Epoch  457] loss: 2.4504 accuracy: 0.6284
[10/30 10:29:59][INFO] train_test.py:  66: Training: [Epoch  458] loss: 2.1776 accuracy: 0.8969 lr: 0.001000
[10/30 10:30:23][INFO] train_test.py: 101: Evaluation: [Epoch  458] loss: 2.4524 accuracy: 0.6284
[10/30 10:31:43][INFO] train_test.py:  66: Training: [Epoch  459] loss: 2.1776 accuracy: 0.8969 lr: 0.001000
[10/30 10:32:07][INFO] train_test.py: 101: Evaluation: [Epoch  459] loss: 2.4510 accuracy: 0.6284
[10/30 10:33:27][INFO] train_test.py:  66: Training: [Epoch  460] loss: 2.1776 accuracy: 0.8969 lr: 0.001000
[10/30 10:33:51][INFO] train_test.py: 101: Evaluation: [Epoch  460] loss: 2.4523 accuracy: 0.6284
[10/30 10:35:09][INFO] train_test.py:  66: Training: [Epoch  461] loss: 2.1775 accuracy: 0.8969 lr: 0.001000
[10/30 10:35:33][INFO] train_test.py: 101: Evaluation: [Epoch  461] loss: 2.4497 accuracy: 0.6284
[10/30 10:36:53][INFO] train_test.py:  66: Training: [Epoch  462] loss: 2.1775 accuracy: 0.8969 lr: 0.001000
[10/30 10:37:17][INFO] train_test.py: 101: Evaluation: [Epoch  462] loss: 2.4502 accuracy: 0.6284
[10/30 10:38:36][INFO] train_test.py:  66: Training: [Epoch  463] loss: 2.1775 accuracy: 0.8969 lr: 0.001000
[10/30 10:39:01][INFO] train_test.py: 101: Evaluation: [Epoch  463] loss: 2.4507 accuracy: 0.6284
[10/30 10:40:20][INFO] train_test.py:  66: Training: [Epoch  464] loss: 2.1775 accuracy: 0.8969 lr: 0.001000
[10/30 10:40:44][INFO] train_test.py: 101: Evaluation: [Epoch  464] loss: 2.4499 accuracy: 0.6284
[10/30 10:42:03][INFO] train_test.py:  66: Training: [Epoch  465] loss: 2.1775 accuracy: 0.8969 lr: 0.001000
[10/30 10:42:27][INFO] train_test.py: 101: Evaluation: [Epoch  465] loss: 2.4511 accuracy: 0.6284
[10/30 10:43:46][INFO] train_test.py:  66: Training: [Epoch  466] loss: 2.1775 accuracy: 0.8969 lr: 0.001000
[10/30 10:44:10][INFO] train_test.py: 101: Evaluation: [Epoch  466] loss: 2.4525 accuracy: 0.6284
[10/30 10:45:29][INFO] train_test.py:  66: Training: [Epoch  467] loss: 2.1775 accuracy: 0.8969 lr: 0.001000
[10/30 10:45:54][INFO] train_test.py: 101: Evaluation: [Epoch  467] loss: 2.4508 accuracy: 0.6284
[10/30 10:47:13][INFO] train_test.py:  66: Training: [Epoch  468] loss: 2.1844 accuracy: 0.8969 lr: 0.001000
[10/30 10:47:37][INFO] train_test.py: 101: Evaluation: [Epoch  468] loss: 2.4496 accuracy: 0.6339
[10/30 10:48:56][INFO] train_test.py:  66: Training: [Epoch  469] loss: 2.1775 accuracy: 0.8969 lr: 0.001000
[10/30 10:49:20][INFO] train_test.py: 101: Evaluation: [Epoch  469] loss: 2.4506 accuracy: 0.6339
[10/30 10:50:39][INFO] train_test.py:  66: Training: [Epoch  470] loss: 2.1775 accuracy: 0.8969 lr: 0.001000
[10/30 10:51:03][INFO] train_test.py: 101: Evaluation: [Epoch  470] loss: 2.4514 accuracy: 0.6284
[10/30 10:52:22][INFO] train_test.py:  66: Training: [Epoch  471] loss: 2.1775 accuracy: 0.8969 lr: 0.001000
[10/30 10:52:46][INFO] train_test.py: 101: Evaluation: [Epoch  471] loss: 2.4501 accuracy: 0.6393
[10/30 10:54:06][INFO] train_test.py:  66: Training: [Epoch  472] loss: 2.1842 accuracy: 0.8969 lr: 0.001000
[10/30 10:54:30][INFO] train_test.py: 101: Evaluation: [Epoch  472] loss: 2.4509 accuracy: 0.6339
[10/30 10:55:49][INFO] train_test.py:  66: Training: [Epoch  473] loss: 2.1908 accuracy: 0.8969 lr: 0.001000
[10/30 10:56:13][INFO] train_test.py: 101: Evaluation: [Epoch  473] loss: 2.4505 accuracy: 0.6339
[10/30 10:57:33][INFO] train_test.py:  66: Training: [Epoch  474] loss: 2.1775 accuracy: 0.8969 lr: 0.001000
[10/30 10:57:56][INFO] train_test.py: 101: Evaluation: [Epoch  474] loss: 2.4524 accuracy: 0.6284
[10/30 10:59:16][INFO] train_test.py:  66: Training: [Epoch  475] loss: 2.1775 accuracy: 0.8969 lr: 0.001000
[10/30 10:59:40][INFO] train_test.py: 101: Evaluation: [Epoch  475] loss: 2.4513 accuracy: 0.6339
[10/30 11:01:00][INFO] train_test.py:  66: Training: [Epoch  476] loss: 2.1775 accuracy: 0.8969 lr: 0.001000
[10/30 11:01:24][INFO] train_test.py: 101: Evaluation: [Epoch  476] loss: 2.4508 accuracy: 0.6339
[10/30 11:02:43][INFO] train_test.py:  66: Training: [Epoch  477] loss: 2.1775 accuracy: 0.8969 lr: 0.001000
[10/30 11:03:07][INFO] train_test.py: 101: Evaluation: [Epoch  477] loss: 2.4510 accuracy: 0.6339
[10/30 11:04:27][INFO] train_test.py:  66: Training: [Epoch  478] loss: 2.1841 accuracy: 0.8969 lr: 0.001000
[10/30 11:04:51][INFO] train_test.py: 101: Evaluation: [Epoch  478] loss: 2.4521 accuracy: 0.6339
[10/30 11:06:10][INFO] train_test.py:  66: Training: [Epoch  479] loss: 2.1841 accuracy: 0.8969 lr: 0.001000
[10/30 11:06:34][INFO] train_test.py: 101: Evaluation: [Epoch  479] loss: 2.4505 accuracy: 0.6339
[10/30 11:07:54][INFO] train_test.py:  66: Training: [Epoch  480] loss: 2.1775 accuracy: 0.8969 lr: 0.001000
[10/30 11:08:18][INFO] train_test.py: 101: Evaluation: [Epoch  480] loss: 2.4504 accuracy: 0.6393
[10/30 11:09:38][INFO] train_test.py:  66: Training: [Epoch  481] loss: 2.1775 accuracy: 0.8969 lr: 0.001000
[10/30 11:10:02][INFO] train_test.py: 101: Evaluation: [Epoch  481] loss: 2.4508 accuracy: 0.6339
[10/30 11:11:21][INFO] train_test.py:  66: Training: [Epoch  482] loss: 2.1775 accuracy: 0.8969 lr: 0.001000
[10/30 11:11:45][INFO] train_test.py: 101: Evaluation: [Epoch  482] loss: 2.4516 accuracy: 0.6339
[10/30 11:13:04][INFO] train_test.py:  66: Training: [Epoch  483] loss: 2.1774 accuracy: 0.8969 lr: 0.001000
[10/30 11:13:28][INFO] train_test.py: 101: Evaluation: [Epoch  483] loss: 2.4514 accuracy: 0.6339
[10/30 11:14:48][INFO] train_test.py:  66: Training: [Epoch  484] loss: 2.1841 accuracy: 0.8969 lr: 0.001000
[10/30 11:15:12][INFO] train_test.py: 101: Evaluation: [Epoch  484] loss: 2.4516 accuracy: 0.6339
[10/30 11:16:31][INFO] train_test.py:  66: Training: [Epoch  485] loss: 2.1774 accuracy: 0.8969 lr: 0.001000
[10/30 11:16:55][INFO] train_test.py: 101: Evaluation: [Epoch  485] loss: 2.4515 accuracy: 0.6339
[10/30 11:18:14][INFO] train_test.py:  66: Training: [Epoch  486] loss: 2.1843 accuracy: 0.8969 lr: 0.001000
[10/30 11:18:38][INFO] train_test.py: 101: Evaluation: [Epoch  486] loss: 2.4516 accuracy: 0.6339
[10/30 11:19:58][INFO] train_test.py:  66: Training: [Epoch  487] loss: 2.1774 accuracy: 0.8969 lr: 0.001000
[10/30 11:20:22][INFO] train_test.py: 101: Evaluation: [Epoch  487] loss: 2.4512 accuracy: 0.6339
[10/30 11:21:41][INFO] train_test.py:  66: Training: [Epoch  488] loss: 2.1841 accuracy: 0.8969 lr: 0.001000
[10/30 11:22:04][INFO] train_test.py: 101: Evaluation: [Epoch  488] loss: 2.4517 accuracy: 0.6339
[10/30 11:23:23][INFO] train_test.py:  66: Training: [Epoch  489] loss: 2.1774 accuracy: 0.8969 lr: 0.001000
[10/30 11:23:47][INFO] train_test.py: 101: Evaluation: [Epoch  489] loss: 2.4525 accuracy: 0.6284
[10/30 11:25:07][INFO] train_test.py:  66: Training: [Epoch  490] loss: 2.1841 accuracy: 0.8969 lr: 0.001000
[10/30 11:25:31][INFO] train_test.py: 101: Evaluation: [Epoch  490] loss: 2.4514 accuracy: 0.6339
[10/30 11:26:50][INFO] train_test.py:  66: Training: [Epoch  491] loss: 2.1777 accuracy: 0.8969 lr: 0.001000
[10/30 11:27:14][INFO] train_test.py: 101: Evaluation: [Epoch  491] loss: 2.4458 accuracy: 0.6339
[10/30 11:27:14][INFO] train_test.py: 159: Minimum of Loss_val is updated from 2.4472 to 2.4458
[10/30 11:28:49][INFO] train_test.py:  66: Training: [Epoch  492] loss: 2.1758 accuracy: 0.8986 lr: 0.001000
[10/30 11:29:13][INFO] train_test.py: 101: Evaluation: [Epoch  492] loss: 2.4486 accuracy: 0.6503
[10/30 11:30:32][INFO] train_test.py:  66: Training: [Epoch  493] loss: 2.1758 accuracy: 0.8986 lr: 0.001000
[10/30 11:30:56][INFO] train_test.py: 101: Evaluation: [Epoch  493] loss: 2.4479 accuracy: 0.6393
[10/30 11:32:15][INFO] train_test.py:  66: Training: [Epoch  494] loss: 2.1757 accuracy: 0.8986 lr: 0.001000
[10/30 11:32:39][INFO] train_test.py: 101: Evaluation: [Epoch  494] loss: 2.4474 accuracy: 0.6393
[10/30 11:33:59][INFO] train_test.py:  66: Training: [Epoch  495] loss: 2.1757 accuracy: 0.8986 lr: 0.001000
[10/30 11:34:23][INFO] train_test.py: 101: Evaluation: [Epoch  495] loss: 2.4486 accuracy: 0.6339
[10/30 11:35:42][INFO] train_test.py:  66: Training: [Epoch  496] loss: 2.1757 accuracy: 0.8986 lr: 0.001000
[10/30 11:36:06][INFO] train_test.py: 101: Evaluation: [Epoch  496] loss: 2.4496 accuracy: 0.6393
[10/30 11:37:25][INFO] train_test.py:  66: Training: [Epoch  497] loss: 2.1757 accuracy: 0.8986 lr: 0.001000
[10/30 11:37:49][INFO] train_test.py: 101: Evaluation: [Epoch  497] loss: 2.4485 accuracy: 0.6448
[10/30 11:39:09][INFO] train_test.py:  66: Training: [Epoch  498] loss: 2.1737 accuracy: 0.9021 lr: 0.001000
[10/30 11:39:33][INFO] train_test.py: 101: Evaluation: [Epoch  498] loss: 2.4464 accuracy: 0.6448
[10/30 11:40:52][INFO] train_test.py:  66: Training: [Epoch  499] loss: 2.2000 accuracy: 0.8776 lr: 0.001000
[10/30 11:41:16][INFO] train_test.py: 101: Evaluation: [Epoch  499] loss: 2.4984 accuracy: 0.5956
[10/30 11:42:35][INFO] train_test.py:  66: Training: [Epoch  500] loss: 2.1916 accuracy: 0.8864 lr: 0.001000
[10/30 11:42:59][INFO] train_test.py: 101: Evaluation: [Epoch  500] loss: 2.4631 accuracy: 0.6393
[10/30 11:44:19][INFO] train_test.py:  66: Training: [Epoch  501] loss: 2.1782 accuracy: 0.8986 lr: 0.001000
[10/30 11:44:43][INFO] train_test.py: 101: Evaluation: [Epoch  501] loss: 2.4555 accuracy: 0.6393
[10/30 11:46:02][INFO] train_test.py:  66: Training: [Epoch  502] loss: 2.1747 accuracy: 0.9038 lr: 0.001000
[10/30 11:46:26][INFO] train_test.py: 101: Evaluation: [Epoch  502] loss: 2.4686 accuracy: 0.6230
[10/30 11:47:46][INFO] train_test.py:  66: Training: [Epoch  503] loss: 2.1766 accuracy: 0.9056 lr: 0.001000
[10/30 11:48:10][INFO] train_test.py: 101: Evaluation: [Epoch  503] loss: 2.4625 accuracy: 0.6393
[10/30 11:49:29][INFO] train_test.py:  66: Training: [Epoch  504] loss: 2.1846 accuracy: 0.9003 lr: 0.001000
[10/30 11:49:52][INFO] train_test.py: 101: Evaluation: [Epoch  504] loss: 2.4846 accuracy: 0.6175
[10/30 11:51:12][INFO] train_test.py:  66: Training: [Epoch  505] loss: 2.1818 accuracy: 0.8951 lr: 0.001000
[10/30 11:51:36][INFO] train_test.py: 101: Evaluation: [Epoch  505] loss: 2.5100 accuracy: 0.5847
[10/30 11:52:55][INFO] train_test.py:  66: Training: [Epoch  506] loss: 2.2121 accuracy: 0.8689 lr: 0.001000
[10/30 11:53:19][INFO] train_test.py: 101: Evaluation: [Epoch  506] loss: 2.5315 accuracy: 0.5519
[10/30 11:54:39][INFO] train_test.py:  66: Training: [Epoch  507] loss: 2.1999 accuracy: 0.8829 lr: 0.001000
[10/30 11:55:03][INFO] train_test.py: 101: Evaluation: [Epoch  507] loss: 2.4992 accuracy: 0.5738
[10/30 11:56:22][INFO] train_test.py:  66: Training: [Epoch  508] loss: 2.1754 accuracy: 0.9003 lr: 0.001000
[10/30 11:56:46][INFO] train_test.py: 101: Evaluation: [Epoch  508] loss: 2.4778 accuracy: 0.5956
[10/30 11:58:06][INFO] train_test.py:  66: Training: [Epoch  509] loss: 2.1803 accuracy: 0.9021 lr: 0.001000
[10/30 11:58:29][INFO] train_test.py: 101: Evaluation: [Epoch  509] loss: 2.5161 accuracy: 0.5628
[10/30 11:59:48][INFO] train_test.py:  66: Training: [Epoch  510] loss: 2.1695 accuracy: 0.9073 lr: 0.001000
[10/30 12:00:54][INFO] train_test.py: 101: Evaluation: [Epoch  510] loss: 2.4675 accuracy: 0.6120
[10/30 12:02:13][INFO] train_test.py:  66: Training: [Epoch  511] loss: 2.1671 accuracy: 0.9091 lr: 0.001000
[10/30 12:02:37][INFO] train_test.py: 101: Evaluation: [Epoch  511] loss: 2.4598 accuracy: 0.6284
[10/30 12:03:56][INFO] train_test.py:  66: Training: [Epoch  512] loss: 2.1669 accuracy: 0.9091 lr: 0.001000
[10/30 12:04:20][INFO] train_test.py: 101: Evaluation: [Epoch  512] loss: 2.4629 accuracy: 0.6120
[10/30 12:05:39][INFO] train_test.py:  66: Training: [Epoch  513] loss: 2.1667 accuracy: 0.9091 lr: 0.001000
[10/30 12:06:03][INFO] train_test.py: 101: Evaluation: [Epoch  513] loss: 2.4554 accuracy: 0.6175
[10/30 12:07:22][INFO] train_test.py:  66: Training: [Epoch  514] loss: 2.1666 accuracy: 0.9091 lr: 0.001000
[10/30 12:07:46][INFO] train_test.py: 101: Evaluation: [Epoch  514] loss: 2.4585 accuracy: 0.6175
[10/30 12:09:05][INFO] train_test.py:  66: Training: [Epoch  515] loss: 2.1666 accuracy: 0.9091 lr: 0.001000
