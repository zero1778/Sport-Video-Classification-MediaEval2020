[10/26 08:17:08][INFO] run.py:  92: Train with configs:
[10/26 08:17:08][INFO] run.py:  93: 
{ AUGMENTATION      }-> False
{ BATCH_SIZE        }-> 2
{ DATA_JSON         }-> data.json
{ DATA_SEPARATOR    }-> ,
{ DECAY             }-> 0.005
{ DEVICES           }-> [0]
{ EPOCHS            }-> 100
{ FLOW              }-> DeepFlow
{ GPU               }-> 0
{ LABEL_DICT        }-> label_dict.json
{ LOAD              }-> False
{ LR                }-> 0.001
{ MODE              }-> train
{ MODEL_NAME        }-> twin
{ MODEL_TYPE        }-> twin
{ MOMENTUM          }-> 0.5
{ NESTEROV          }-> True
{ NORM              }-> normal
{ NUM_CLASSES       }-> 20
{ NUM_WORKERS       }-> 8
{ N_GPU             }-> 1
{ OUTPUT_DIR        }-> .
{ OUTPUT_FILE       }-> ./pred.txt
{ PATH_DATA         }-> data
{ PATH_MODEL        }-> ./twin
{ PATH_PROCESSED_DATA }-> data_processed
{ SEED              }-> 31
{ SIZE_DATA         }-> [100 120 120]
{ VERSION           }-> 31

[10/26 08:17:27][INFO] run.py:  92: Train with configs:
[10/26 08:17:27][INFO] run.py:  93: 
{ AUGMENTATION      }-> False
{ BATCH_SIZE        }-> 2
{ DATA_JSON         }-> data.json
{ DATA_SEPARATOR    }-> ,
{ DECAY             }-> 0.005
{ DEVICES           }-> [0]
{ EPOCHS            }-> 100
{ FLOW              }-> DeepFlow
{ GPU               }-> 0
{ LABEL_DICT        }-> label_dict.json
{ LOAD              }-> False
{ LR                }-> 0.001
{ MODE              }-> train
{ MODEL_NAME        }-> twin
{ MODEL_TYPE        }-> twin
{ MOMENTUM          }-> 0.5
{ NESTEROV          }-> True
{ NORM              }-> normal
{ NUM_CLASSES       }-> 20
{ NUM_WORKERS       }-> 8
{ N_GPU             }-> 1
{ OUTPUT_DIR        }-> .
{ OUTPUT_FILE       }-> ./pred.txt
{ PATH_DATA         }-> data
{ PATH_MODEL        }-> ./twin
{ PATH_PROCESSED_DATA }-> data_processed
{ SEED              }-> 31
{ SIZE_DATA         }-> [100 120 120]
{ VERSION           }-> 31

[10/26 08:17:48][INFO] train_test.py:  62: Training: [Epoch    1] loss: 2.2644 accuracy: 0.8000 lr: 0.001000
[10/26 08:17:53][INFO] train_test.py:  94: Evaluation: [Epoch    1] loss: 2.4782 accuracy: 0.6000
[10/26 08:18:03][INFO] train_test.py:  62: Training: [Epoch    2] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:18:06][INFO] train_test.py:  94: Evaluation: [Epoch    2] loss: 2.4782 accuracy: 0.6000
[10/26 08:18:10][INFO] train_test.py:  62: Training: [Epoch    3] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:18:10][INFO] train_test.py:  94: Evaluation: [Epoch    3] loss: 2.4782 accuracy: 0.6000
[10/26 08:18:14][INFO] train_test.py:  62: Training: [Epoch    4] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:18:15][INFO] train_test.py:  94: Evaluation: [Epoch    4] loss: 2.4782 accuracy: 0.6000
[10/26 08:18:19][INFO] train_test.py:  62: Training: [Epoch    5] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:18:20][INFO] train_test.py:  94: Evaluation: [Epoch    5] loss: 2.4782 accuracy: 0.6000
[10/26 08:18:24][INFO] train_test.py:  62: Training: [Epoch    6] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:18:24][INFO] train_test.py:  94: Evaluation: [Epoch    6] loss: 2.4782 accuracy: 0.6000
[10/26 08:18:28][INFO] train_test.py:  62: Training: [Epoch    7] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:18:29][INFO] train_test.py:  94: Evaluation: [Epoch    7] loss: 2.4782 accuracy: 0.6000
[10/26 08:18:33][INFO] train_test.py:  62: Training: [Epoch    8] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:18:34][INFO] train_test.py:  94: Evaluation: [Epoch    8] loss: 2.4782 accuracy: 0.6000
[10/26 08:18:38][INFO] train_test.py:  62: Training: [Epoch    9] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:18:39][INFO] train_test.py:  94: Evaluation: [Epoch    9] loss: 2.4782 accuracy: 0.6000
[10/26 08:18:43][INFO] train_test.py:  62: Training: [Epoch   10] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:18:44][INFO] train_test.py:  94: Evaluation: [Epoch   10] loss: 2.4782 accuracy: 0.6000
[10/26 08:18:47][INFO] train_test.py:  62: Training: [Epoch   11] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:18:48][INFO] train_test.py:  94: Evaluation: [Epoch   11] loss: 2.4782 accuracy: 0.6000
[10/26 08:18:52][INFO] train_test.py:  62: Training: [Epoch   12] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:18:53][INFO] train_test.py:  94: Evaluation: [Epoch   12] loss: 2.4782 accuracy: 0.6000
[10/26 08:18:57][INFO] train_test.py:  62: Training: [Epoch   13] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:18:58][INFO] train_test.py:  94: Evaluation: [Epoch   13] loss: 2.4782 accuracy: 0.6000
[10/26 08:19:02][INFO] train_test.py:  62: Training: [Epoch   14] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:19:02][INFO] train_test.py:  94: Evaluation: [Epoch   14] loss: 2.4782 accuracy: 0.6000
[10/26 08:19:06][INFO] train_test.py:  62: Training: [Epoch   15] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:19:07][INFO] train_test.py:  94: Evaluation: [Epoch   15] loss: 2.4782 accuracy: 0.6000
[10/26 08:19:11][INFO] train_test.py:  62: Training: [Epoch   16] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:19:12][INFO] train_test.py:  94: Evaluation: [Epoch   16] loss: 2.4782 accuracy: 0.6000
[10/26 08:19:16][INFO] train_test.py:  62: Training: [Epoch   17] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:19:17][INFO] train_test.py:  94: Evaluation: [Epoch   17] loss: 2.4782 accuracy: 0.6000
[10/26 08:19:20][INFO] train_test.py:  62: Training: [Epoch   18] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:19:21][INFO] train_test.py:  94: Evaluation: [Epoch   18] loss: 2.4782 accuracy: 0.6000
[10/26 08:19:25][INFO] train_test.py:  62: Training: [Epoch   19] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:19:26][INFO] train_test.py:  94: Evaluation: [Epoch   19] loss: 2.4782 accuracy: 0.6000
[10/26 08:19:30][INFO] train_test.py:  62: Training: [Epoch   20] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:19:31][INFO] train_test.py:  94: Evaluation: [Epoch   20] loss: 2.4782 accuracy: 0.6000
[10/26 08:19:35][INFO] train_test.py:  62: Training: [Epoch   21] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:19:36][INFO] train_test.py:  94: Evaluation: [Epoch   21] loss: 2.4782 accuracy: 0.6000
[10/26 08:19:40][INFO] train_test.py:  62: Training: [Epoch   22] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:19:40][INFO] train_test.py:  94: Evaluation: [Epoch   22] loss: 2.4782 accuracy: 0.6000
[10/26 08:19:44][INFO] train_test.py:  62: Training: [Epoch   23] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:19:45][INFO] train_test.py:  94: Evaluation: [Epoch   23] loss: 2.4782 accuracy: 0.6000
[10/26 08:19:49][INFO] train_test.py:  62: Training: [Epoch   24] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:19:50][INFO] train_test.py:  94: Evaluation: [Epoch   24] loss: 2.4782 accuracy: 0.6000
[10/26 08:19:54][INFO] train_test.py:  62: Training: [Epoch   25] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:19:55][INFO] train_test.py:  94: Evaluation: [Epoch   25] loss: 2.4782 accuracy: 0.6000
[10/26 08:19:58][INFO] train_test.py:  62: Training: [Epoch   26] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:19:59][INFO] train_test.py:  94: Evaluation: [Epoch   26] loss: 2.4782 accuracy: 0.6000
[10/26 08:20:03][INFO] train_test.py:  62: Training: [Epoch   27] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:20:04][INFO] train_test.py:  94: Evaluation: [Epoch   27] loss: 2.4782 accuracy: 0.6000
[10/26 08:23:08][INFO] run.py:  92: Train with configs:
[10/26 08:23:08][INFO] run.py:  93: 
{ AUGMENTATION      }-> False
{ BATCH_SIZE        }-> 2
{ DATA_JSON         }-> data.json
{ DATA_SEPARATOR    }-> ,
{ DECAY             }-> 0.005
{ DEVICES           }-> [0]
{ EPOCHS            }-> 100
{ FLOW              }-> DeepFlow
{ GPU               }-> 0
{ LABEL_DICT        }-> label_dict.json
{ LOAD              }-> False
{ LR                }-> 0.001
{ MODE              }-> train
{ MODEL_NAME        }-> twin
{ MODEL_TYPE        }-> twin
{ MOMENTUM          }-> 0.5
{ NESTEROV          }-> True
{ NORM              }-> normal
{ NUM_CLASSES       }-> 20
{ NUM_WORKERS       }-> 8
{ N_GPU             }-> 1
{ OUTPUT_DIR        }-> .
{ OUTPUT_FILE       }-> ./pred.txt
{ PATH_DATA         }-> data
{ PATH_MODEL        }-> ./twin
{ PATH_PROCESSED_DATA }-> data_processed
{ SEED              }-> 31
{ SIZE_DATA         }-> [100 120 120]
{ VERSION           }-> 31

[10/26 08:23:16][INFO] train_test.py:  62: Training: [Epoch    1] loss: 2.2644 accuracy: 0.8000 lr: 0.001000
[10/26 08:23:18][INFO] train_test.py:  94: Evaluation: [Epoch    1] loss: 2.4782 accuracy: 0.6000
[10/26 08:23:37][INFO] train_test.py:  62: Training: [Epoch    2] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:23:38][INFO] train_test.py:  94: Evaluation: [Epoch    2] loss: 2.4782 accuracy: 0.6000
[10/26 08:23:42][INFO] train_test.py:  62: Training: [Epoch    3] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:23:43][INFO] train_test.py:  94: Evaluation: [Epoch    3] loss: 2.4782 accuracy: 0.6000
[10/26 08:23:47][INFO] train_test.py:  62: Training: [Epoch    4] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:23:48][INFO] train_test.py:  94: Evaluation: [Epoch    4] loss: 2.4782 accuracy: 0.6000
[10/26 08:23:52][INFO] train_test.py:  62: Training: [Epoch    5] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:23:53][INFO] train_test.py:  94: Evaluation: [Epoch    5] loss: 2.4782 accuracy: 0.6000
[10/26 08:23:57][INFO] train_test.py:  62: Training: [Epoch    6] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:23:58][INFO] train_test.py:  94: Evaluation: [Epoch    6] loss: 2.4782 accuracy: 0.6000
[10/26 08:24:02][INFO] train_test.py:  62: Training: [Epoch    7] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:24:03][INFO] train_test.py:  94: Evaluation: [Epoch    7] loss: 2.4782 accuracy: 0.6000
[10/26 08:24:07][INFO] train_test.py:  62: Training: [Epoch    8] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:24:09][INFO] train_test.py:  94: Evaluation: [Epoch    8] loss: 2.4782 accuracy: 0.6000
[10/26 08:24:13][INFO] train_test.py:  62: Training: [Epoch    9] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:24:14][INFO] train_test.py:  94: Evaluation: [Epoch    9] loss: 2.4782 accuracy: 0.6000
[10/26 08:24:18][INFO] train_test.py:  62: Training: [Epoch   10] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:24:19][INFO] train_test.py:  94: Evaluation: [Epoch   10] loss: 2.4782 accuracy: 0.6000
[10/26 08:24:23][INFO] train_test.py:  62: Training: [Epoch   11] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:24:24][INFO] train_test.py:  94: Evaluation: [Epoch   11] loss: 2.4782 accuracy: 0.6000
[10/26 08:24:28][INFO] train_test.py:  62: Training: [Epoch   12] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:24:29][INFO] train_test.py:  94: Evaluation: [Epoch   12] loss: 2.4782 accuracy: 0.6000
[10/26 08:24:33][INFO] train_test.py:  62: Training: [Epoch   13] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:24:34][INFO] train_test.py:  94: Evaluation: [Epoch   13] loss: 2.4782 accuracy: 0.6000
[10/26 08:24:38][INFO] train_test.py:  62: Training: [Epoch   14] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:24:39][INFO] train_test.py:  94: Evaluation: [Epoch   14] loss: 2.4782 accuracy: 0.6000
[10/26 08:24:43][INFO] train_test.py:  62: Training: [Epoch   15] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:24:44][INFO] train_test.py:  94: Evaluation: [Epoch   15] loss: 2.4782 accuracy: 0.6000
[10/26 08:24:48][INFO] train_test.py:  62: Training: [Epoch   16] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:24:49][INFO] train_test.py:  94: Evaluation: [Epoch   16] loss: 2.4782 accuracy: 0.6000
[10/26 08:24:54][INFO] train_test.py:  62: Training: [Epoch   17] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:24:55][INFO] train_test.py:  94: Evaluation: [Epoch   17] loss: 2.4782 accuracy: 0.6000
[10/26 08:24:59][INFO] train_test.py:  62: Training: [Epoch   18] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:25:00][INFO] train_test.py:  94: Evaluation: [Epoch   18] loss: 2.4782 accuracy: 0.6000
[10/26 08:25:04][INFO] train_test.py:  62: Training: [Epoch   19] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:25:05][INFO] train_test.py:  94: Evaluation: [Epoch   19] loss: 2.4782 accuracy: 0.6000
[10/26 08:25:09][INFO] train_test.py:  62: Training: [Epoch   20] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:25:10][INFO] train_test.py:  94: Evaluation: [Epoch   20] loss: 2.4782 accuracy: 0.6000
[10/26 08:25:14][INFO] train_test.py:  62: Training: [Epoch   21] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:25:15][INFO] train_test.py:  94: Evaluation: [Epoch   21] loss: 2.4782 accuracy: 0.6000
[10/26 08:25:19][INFO] train_test.py:  62: Training: [Epoch   22] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:25:20][INFO] train_test.py:  94: Evaluation: [Epoch   22] loss: 2.4782 accuracy: 0.6000
[10/26 08:25:24][INFO] train_test.py:  62: Training: [Epoch   23] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:25:25][INFO] train_test.py:  94: Evaluation: [Epoch   23] loss: 2.4782 accuracy: 0.6000
[10/26 08:25:29][INFO] train_test.py:  62: Training: [Epoch   24] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:25:30][INFO] train_test.py:  94: Evaluation: [Epoch   24] loss: 2.4782 accuracy: 0.6000
[10/26 08:25:35][INFO] train_test.py:  62: Training: [Epoch   25] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:25:36][INFO] train_test.py:  94: Evaluation: [Epoch   25] loss: 2.4782 accuracy: 0.6000
[10/26 08:25:40][INFO] train_test.py:  62: Training: [Epoch   26] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:25:41][INFO] train_test.py:  94: Evaluation: [Epoch   26] loss: 2.4782 accuracy: 0.6000
[10/26 08:25:45][INFO] train_test.py:  62: Training: [Epoch   27] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:25:46][INFO] train_test.py:  94: Evaluation: [Epoch   27] loss: 2.4782 accuracy: 0.6000
[10/26 08:25:50][INFO] train_test.py:  62: Training: [Epoch   28] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:25:51][INFO] train_test.py:  94: Evaluation: [Epoch   28] loss: 2.4782 accuracy: 0.6000
[10/26 08:25:55][INFO] train_test.py:  62: Training: [Epoch   29] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:25:56][INFO] train_test.py:  94: Evaluation: [Epoch   29] loss: 2.4782 accuracy: 0.6000
[10/26 08:26:00][INFO] train_test.py:  62: Training: [Epoch   30] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:26:01][INFO] train_test.py:  94: Evaluation: [Epoch   30] loss: 2.4782 accuracy: 0.6000
[10/26 08:26:05][INFO] train_test.py:  62: Training: [Epoch   31] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:26:06][INFO] train_test.py:  94: Evaluation: [Epoch   31] loss: 2.4782 accuracy: 0.6000
[10/26 08:26:10][INFO] train_test.py:  62: Training: [Epoch   32] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:26:11][INFO] train_test.py:  94: Evaluation: [Epoch   32] loss: 2.4782 accuracy: 0.6000
[10/26 08:26:15][INFO] train_test.py:  62: Training: [Epoch   33] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:26:17][INFO] train_test.py:  94: Evaluation: [Epoch   33] loss: 2.4782 accuracy: 0.6000
[10/26 08:26:21][INFO] train_test.py:  62: Training: [Epoch   34] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:26:22][INFO] train_test.py:  94: Evaluation: [Epoch   34] loss: 2.4782 accuracy: 0.6000
[10/26 08:26:26][INFO] train_test.py:  62: Training: [Epoch   35] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:26:27][INFO] train_test.py:  94: Evaluation: [Epoch   35] loss: 2.4782 accuracy: 0.6000
[10/26 08:26:31][INFO] train_test.py:  62: Training: [Epoch   36] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:26:32][INFO] train_test.py:  94: Evaluation: [Epoch   36] loss: 2.4782 accuracy: 0.6000
[10/26 08:26:36][INFO] train_test.py:  62: Training: [Epoch   37] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:26:37][INFO] train_test.py:  94: Evaluation: [Epoch   37] loss: 2.4782 accuracy: 0.6000
[10/26 08:26:41][INFO] train_test.py:  62: Training: [Epoch   38] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:26:42][INFO] train_test.py:  94: Evaluation: [Epoch   38] loss: 2.4782 accuracy: 0.6000
[10/26 08:26:46][INFO] train_test.py:  62: Training: [Epoch   39] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:26:47][INFO] train_test.py:  94: Evaluation: [Epoch   39] loss: 2.4782 accuracy: 0.6000
[10/26 08:26:51][INFO] train_test.py:  62: Training: [Epoch   40] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:26:53][INFO] train_test.py:  94: Evaluation: [Epoch   40] loss: 2.4782 accuracy: 0.6000
[10/26 08:26:57][INFO] train_test.py:  62: Training: [Epoch   41] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:26:58][INFO] train_test.py:  94: Evaluation: [Epoch   41] loss: 2.4782 accuracy: 0.6000
[10/26 08:27:02][INFO] train_test.py:  62: Training: [Epoch   42] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:27:03][INFO] train_test.py:  94: Evaluation: [Epoch   42] loss: 2.4782 accuracy: 0.6000
[10/26 08:27:07][INFO] train_test.py:  62: Training: [Epoch   43] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:27:08][INFO] train_test.py:  94: Evaluation: [Epoch   43] loss: 2.4782 accuracy: 0.6000
[10/26 08:27:12][INFO] train_test.py:  62: Training: [Epoch   44] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:27:13][INFO] train_test.py:  94: Evaluation: [Epoch   44] loss: 2.4782 accuracy: 0.6000
[10/26 08:27:17][INFO] train_test.py:  62: Training: [Epoch   45] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:27:18][INFO] train_test.py:  94: Evaluation: [Epoch   45] loss: 2.4782 accuracy: 0.6000
[10/26 08:27:22][INFO] train_test.py:  62: Training: [Epoch   46] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:27:23][INFO] train_test.py:  94: Evaluation: [Epoch   46] loss: 2.4782 accuracy: 0.6000
[10/26 08:27:27][INFO] train_test.py:  62: Training: [Epoch   47] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:27:28][INFO] train_test.py:  94: Evaluation: [Epoch   47] loss: 2.4782 accuracy: 0.6000
[10/26 08:27:33][INFO] train_test.py:  62: Training: [Epoch   48] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:27:34][INFO] train_test.py:  94: Evaluation: [Epoch   48] loss: 2.4782 accuracy: 0.6000
[10/26 08:27:38][INFO] train_test.py:  62: Training: [Epoch   49] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:27:39][INFO] train_test.py:  94: Evaluation: [Epoch   49] loss: 2.4782 accuracy: 0.6000
[10/26 08:27:43][INFO] train_test.py:  62: Training: [Epoch   50] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:27:44][INFO] train_test.py:  94: Evaluation: [Epoch   50] loss: 2.4782 accuracy: 0.6000
[10/26 08:27:48][INFO] train_test.py:  62: Training: [Epoch   51] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:27:49][INFO] train_test.py:  94: Evaluation: [Epoch   51] loss: 2.4782 accuracy: 0.6000
[10/26 08:27:53][INFO] train_test.py:  62: Training: [Epoch   52] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:27:54][INFO] train_test.py:  94: Evaluation: [Epoch   52] loss: 2.4782 accuracy: 0.6000
[10/26 08:27:58][INFO] train_test.py:  62: Training: [Epoch   53] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:27:59][INFO] train_test.py:  94: Evaluation: [Epoch   53] loss: 2.4782 accuracy: 0.6000
[10/26 08:28:03][INFO] train_test.py:  62: Training: [Epoch   54] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:28:04][INFO] train_test.py:  94: Evaluation: [Epoch   54] loss: 2.4782 accuracy: 0.6000
[10/26 08:28:09][INFO] train_test.py:  62: Training: [Epoch   55] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:28:10][INFO] train_test.py:  94: Evaluation: [Epoch   55] loss: 2.4782 accuracy: 0.6000
[10/26 08:28:14][INFO] train_test.py:  62: Training: [Epoch   56] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:28:15][INFO] train_test.py:  94: Evaluation: [Epoch   56] loss: 2.4782 accuracy: 0.6000
[10/26 08:28:19][INFO] train_test.py:  62: Training: [Epoch   57] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:28:20][INFO] train_test.py:  94: Evaluation: [Epoch   57] loss: 2.4782 accuracy: 0.6000
[10/26 08:28:24][INFO] train_test.py:  62: Training: [Epoch   58] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:28:25][INFO] train_test.py:  94: Evaluation: [Epoch   58] loss: 2.4782 accuracy: 0.6000
[10/26 08:28:29][INFO] train_test.py:  62: Training: [Epoch   59] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:28:30][INFO] train_test.py:  94: Evaluation: [Epoch   59] loss: 2.4782 accuracy: 0.6000
[10/26 08:28:34][INFO] train_test.py:  62: Training: [Epoch   60] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:28:35][INFO] train_test.py:  94: Evaluation: [Epoch   60] loss: 2.4782 accuracy: 0.6000
[10/26 08:28:39][INFO] train_test.py:  62: Training: [Epoch   61] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:28:40][INFO] train_test.py:  94: Evaluation: [Epoch   61] loss: 2.4782 accuracy: 0.6000
[10/26 08:28:44][INFO] train_test.py:  62: Training: [Epoch   62] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:28:46][INFO] train_test.py:  94: Evaluation: [Epoch   62] loss: 2.4782 accuracy: 0.6000
[10/26 08:28:50][INFO] train_test.py:  62: Training: [Epoch   63] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:28:51][INFO] train_test.py:  94: Evaluation: [Epoch   63] loss: 2.4782 accuracy: 0.6000
[10/26 08:28:55][INFO] train_test.py:  62: Training: [Epoch   64] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:28:56][INFO] train_test.py:  94: Evaluation: [Epoch   64] loss: 2.4782 accuracy: 0.6000
[10/26 08:29:00][INFO] train_test.py:  62: Training: [Epoch   65] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:29:01][INFO] train_test.py:  94: Evaluation: [Epoch   65] loss: 2.4782 accuracy: 0.6000
[10/26 08:29:05][INFO] train_test.py:  62: Training: [Epoch   66] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:29:06][INFO] train_test.py:  94: Evaluation: [Epoch   66] loss: 2.4782 accuracy: 0.6000
[10/26 08:29:10][INFO] train_test.py:  62: Training: [Epoch   67] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:29:11][INFO] train_test.py:  94: Evaluation: [Epoch   67] loss: 2.4782 accuracy: 0.6000
[10/26 08:29:15][INFO] train_test.py:  62: Training: [Epoch   68] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:29:16][INFO] train_test.py:  94: Evaluation: [Epoch   68] loss: 2.4782 accuracy: 0.6000
[10/26 08:29:20][INFO] train_test.py:  62: Training: [Epoch   69] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:29:21][INFO] train_test.py:  94: Evaluation: [Epoch   69] loss: 2.4782 accuracy: 0.6000
[10/26 08:29:26][INFO] train_test.py:  62: Training: [Epoch   70] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:29:27][INFO] train_test.py:  94: Evaluation: [Epoch   70] loss: 2.4782 accuracy: 0.6000
[10/26 08:29:31][INFO] train_test.py:  62: Training: [Epoch   71] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:29:32][INFO] train_test.py:  94: Evaluation: [Epoch   71] loss: 2.4782 accuracy: 0.6000
[10/26 08:29:36][INFO] train_test.py:  62: Training: [Epoch   72] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:29:37][INFO] train_test.py:  94: Evaluation: [Epoch   72] loss: 2.4782 accuracy: 0.6000
[10/26 08:29:41][INFO] train_test.py:  62: Training: [Epoch   73] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:29:42][INFO] train_test.py:  94: Evaluation: [Epoch   73] loss: 2.4782 accuracy: 0.6000
[10/26 08:29:46][INFO] train_test.py:  62: Training: [Epoch   74] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:29:47][INFO] train_test.py:  94: Evaluation: [Epoch   74] loss: 2.4782 accuracy: 0.6000
[10/26 08:29:51][INFO] train_test.py:  62: Training: [Epoch   75] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:29:52][INFO] train_test.py:  94: Evaluation: [Epoch   75] loss: 2.4782 accuracy: 0.6000
[10/26 08:29:56][INFO] train_test.py:  62: Training: [Epoch   76] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:29:57][INFO] train_test.py:  94: Evaluation: [Epoch   76] loss: 2.4782 accuracy: 0.6000
[10/26 08:30:01][INFO] train_test.py:  62: Training: [Epoch   77] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:30:03][INFO] train_test.py:  94: Evaluation: [Epoch   77] loss: 2.4782 accuracy: 0.6000
[10/26 08:30:07][INFO] train_test.py:  62: Training: [Epoch   78] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:30:08][INFO] train_test.py:  94: Evaluation: [Epoch   78] loss: 2.4782 accuracy: 0.6000
[10/26 08:30:12][INFO] train_test.py:  62: Training: [Epoch   79] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:30:13][INFO] train_test.py:  94: Evaluation: [Epoch   79] loss: 2.4782 accuracy: 0.6000
[10/26 08:30:17][INFO] train_test.py:  62: Training: [Epoch   80] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:30:18][INFO] train_test.py:  94: Evaluation: [Epoch   80] loss: 2.4782 accuracy: 0.6000
[10/26 08:30:22][INFO] train_test.py:  62: Training: [Epoch   81] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:30:23][INFO] train_test.py:  94: Evaluation: [Epoch   81] loss: 2.4782 accuracy: 0.6000
[10/26 08:30:27][INFO] train_test.py:  62: Training: [Epoch   82] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:30:28][INFO] train_test.py:  94: Evaluation: [Epoch   82] loss: 2.4782 accuracy: 0.6000
[10/26 08:30:32][INFO] train_test.py:  62: Training: [Epoch   83] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:30:33][INFO] train_test.py:  94: Evaluation: [Epoch   83] loss: 2.4782 accuracy: 0.6000
[10/26 08:30:38][INFO] train_test.py:  62: Training: [Epoch   84] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:30:39][INFO] train_test.py:  94: Evaluation: [Epoch   84] loss: 2.4782 accuracy: 0.6000
[10/26 08:30:43][INFO] train_test.py:  62: Training: [Epoch   85] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:30:44][INFO] train_test.py:  94: Evaluation: [Epoch   85] loss: 2.4782 accuracy: 0.6000
[10/26 08:30:48][INFO] train_test.py:  62: Training: [Epoch   86] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:30:49][INFO] train_test.py:  94: Evaluation: [Epoch   86] loss: 2.4782 accuracy: 0.6000
[10/26 08:30:53][INFO] train_test.py:  62: Training: [Epoch   87] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:30:54][INFO] train_test.py:  94: Evaluation: [Epoch   87] loss: 2.4782 accuracy: 0.6000
[10/26 08:30:58][INFO] train_test.py:  62: Training: [Epoch   88] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:30:59][INFO] train_test.py:  94: Evaluation: [Epoch   88] loss: 2.4782 accuracy: 0.6000
[10/26 08:31:03][INFO] train_test.py:  62: Training: [Epoch   89] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:31:04][INFO] train_test.py:  94: Evaluation: [Epoch   89] loss: 2.4782 accuracy: 0.6000
[10/26 08:31:08][INFO] train_test.py:  62: Training: [Epoch   90] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:31:09][INFO] train_test.py:  94: Evaluation: [Epoch   90] loss: 2.4782 accuracy: 0.6000
[10/26 08:31:13][INFO] train_test.py:  62: Training: [Epoch   91] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:31:14][INFO] train_test.py:  94: Evaluation: [Epoch   91] loss: 2.4782 accuracy: 0.6000
[10/26 08:31:19][INFO] train_test.py:  62: Training: [Epoch   92] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:31:20][INFO] train_test.py:  94: Evaluation: [Epoch   92] loss: 2.4782 accuracy: 0.6000
[10/26 08:31:24][INFO] train_test.py:  62: Training: [Epoch   93] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:31:25][INFO] train_test.py:  94: Evaluation: [Epoch   93] loss: 2.4782 accuracy: 0.6000
[10/26 08:31:29][INFO] train_test.py:  62: Training: [Epoch   94] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:31:30][INFO] train_test.py:  94: Evaluation: [Epoch   94] loss: 2.4782 accuracy: 0.6000
[10/26 08:31:34][INFO] train_test.py:  62: Training: [Epoch   95] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:31:35][INFO] train_test.py:  94: Evaluation: [Epoch   95] loss: 2.4782 accuracy: 0.6000
[10/26 08:31:39][INFO] train_test.py:  62: Training: [Epoch   96] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:31:40][INFO] train_test.py:  94: Evaluation: [Epoch   96] loss: 2.4782 accuracy: 0.6000
[10/26 08:31:44][INFO] train_test.py:  62: Training: [Epoch   97] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:31:45][INFO] train_test.py:  94: Evaluation: [Epoch   97] loss: 2.4782 accuracy: 0.6000
[10/26 08:31:50][INFO] train_test.py:  62: Training: [Epoch   98] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:31:51][INFO] train_test.py:  94: Evaluation: [Epoch   98] loss: 2.4782 accuracy: 0.6000
[10/26 08:31:55][INFO] train_test.py:  62: Training: [Epoch   99] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:31:56][INFO] train_test.py:  94: Evaluation: [Epoch   99] loss: 2.4782 accuracy: 0.6000
[10/26 08:32:00][INFO] train_test.py:  62: Training: [Epoch  100] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 08:32:01][INFO] train_test.py:  94: Evaluation: [Epoch  100] loss: 2.4782 accuracy: 0.6000
[10/26 08:32:01][INFO] train_test.py: 159: Trained with 100 epochs, lr = 0.001, batchsize = 2, momentum = 0.5 with max validation accuracy of 0.60 done in 0:08:48
[10/26 10:09:03][INFO] run.py:  92: Train with configs:
[10/26 10:09:03][INFO] run.py:  93: 
{ AUGMENTATION      }-> False
{ BATCH_SIZE        }-> 2
{ DATA_JSON         }-> data.json
{ DATA_SEPARATOR    }-> ,
{ DECAY             }-> 0.005
{ DEVICES           }-> [0]
{ EPOCHS            }-> 100
{ FLOW              }-> DeepFlow
{ GPU               }-> 0
{ LABEL_DICT        }-> label_dict.json
{ LOAD              }-> False
{ LR                }-> 0.001
{ MODE              }-> train
{ MODEL_NAME        }-> twin
{ MODEL_TYPE        }-> twin
{ MOMENTUM          }-> 0.5
{ NESTEROV          }-> True
{ NORM              }-> normal
{ NUM_CLASSES       }-> 20
{ NUM_WORKERS       }-> 8
{ N_GPU             }-> 1
{ OUTPUT_DIR        }-> .
{ OUTPUT_FILE       }-> ./pred.txt
{ PATH_DATA         }-> data
{ PATH_MODEL        }-> ./twin
{ PATH_PROCESSED_DATA }-> data_processed
{ SEED              }-> 31
{ SIZE_DATA         }-> [100 120 120]
{ VERSION           }-> 31

[10/26 10:09:12][INFO] train_test.py:  62: Training: [Epoch    1] loss: 2.2644 accuracy: 0.8000 lr: 0.001000
[10/26 10:09:14][INFO] train_test.py:  94: Evaluation: [Epoch    1] loss: 2.4782 accuracy: 0.6000
[10/26 10:09:33][INFO] train_test.py:  62: Training: [Epoch    2] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:09:35][INFO] train_test.py:  94: Evaluation: [Epoch    2] loss: 2.4782 accuracy: 0.6000
[10/26 10:09:39][INFO] train_test.py:  62: Training: [Epoch    3] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:09:40][INFO] train_test.py:  94: Evaluation: [Epoch    3] loss: 2.4782 accuracy: 0.6000
[10/26 10:09:44][INFO] train_test.py:  62: Training: [Epoch    4] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:09:45][INFO] train_test.py:  94: Evaluation: [Epoch    4] loss: 2.4782 accuracy: 0.6000
[10/26 10:09:49][INFO] train_test.py:  62: Training: [Epoch    5] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:09:50][INFO] train_test.py:  94: Evaluation: [Epoch    5] loss: 2.4782 accuracy: 0.6000
[10/26 10:09:54][INFO] train_test.py:  62: Training: [Epoch    6] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:09:55][INFO] train_test.py:  94: Evaluation: [Epoch    6] loss: 2.4782 accuracy: 0.6000
[10/26 10:09:59][INFO] train_test.py:  62: Training: [Epoch    7] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:10:00][INFO] train_test.py:  94: Evaluation: [Epoch    7] loss: 2.4782 accuracy: 0.6000
[10/26 10:10:04][INFO] train_test.py:  62: Training: [Epoch    8] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:10:05][INFO] train_test.py:  94: Evaluation: [Epoch    8] loss: 2.4782 accuracy: 0.6000
[10/26 10:10:09][INFO] train_test.py:  62: Training: [Epoch    9] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:10:10][INFO] train_test.py:  94: Evaluation: [Epoch    9] loss: 2.4782 accuracy: 0.6000
[10/26 10:10:14][INFO] train_test.py:  62: Training: [Epoch   10] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:10:15][INFO] train_test.py:  94: Evaluation: [Epoch   10] loss: 2.4782 accuracy: 0.6000
[10/26 10:10:19][INFO] train_test.py:  62: Training: [Epoch   11] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:10:20][INFO] train_test.py:  94: Evaluation: [Epoch   11] loss: 2.4782 accuracy: 0.6000
[10/26 10:10:24][INFO] train_test.py:  62: Training: [Epoch   12] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:10:25][INFO] train_test.py:  94: Evaluation: [Epoch   12] loss: 2.4782 accuracy: 0.6000
[10/26 10:10:29][INFO] train_test.py:  62: Training: [Epoch   13] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:10:30][INFO] train_test.py:  94: Evaluation: [Epoch   13] loss: 2.4782 accuracy: 0.6000
[10/26 10:10:34][INFO] train_test.py:  62: Training: [Epoch   14] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:10:35][INFO] train_test.py:  94: Evaluation: [Epoch   14] loss: 2.4782 accuracy: 0.6000
[10/26 10:10:40][INFO] train_test.py:  62: Training: [Epoch   15] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:10:41][INFO] train_test.py:  94: Evaluation: [Epoch   15] loss: 2.4782 accuracy: 0.6000
[10/26 10:10:45][INFO] train_test.py:  62: Training: [Epoch   16] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:10:46][INFO] train_test.py:  94: Evaluation: [Epoch   16] loss: 2.4782 accuracy: 0.6000
[10/26 10:10:50][INFO] train_test.py:  62: Training: [Epoch   17] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:10:51][INFO] train_test.py:  94: Evaluation: [Epoch   17] loss: 2.4782 accuracy: 0.6000
[10/26 10:10:55][INFO] train_test.py:  62: Training: [Epoch   18] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:10:56][INFO] train_test.py:  94: Evaluation: [Epoch   18] loss: 2.4782 accuracy: 0.6000
[10/26 10:11:00][INFO] train_test.py:  62: Training: [Epoch   19] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:11:01][INFO] train_test.py:  94: Evaluation: [Epoch   19] loss: 2.4782 accuracy: 0.6000
[10/26 10:11:05][INFO] train_test.py:  62: Training: [Epoch   20] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:11:06][INFO] train_test.py:  94: Evaluation: [Epoch   20] loss: 2.4782 accuracy: 0.6000
[10/26 10:11:10][INFO] train_test.py:  62: Training: [Epoch   21] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:11:11][INFO] train_test.py:  94: Evaluation: [Epoch   21] loss: 2.4782 accuracy: 0.6000
[10/26 10:11:15][INFO] train_test.py:  62: Training: [Epoch   22] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:11:16][INFO] train_test.py:  94: Evaluation: [Epoch   22] loss: 2.4782 accuracy: 0.6000
[10/26 10:11:20][INFO] train_test.py:  62: Training: [Epoch   23] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:11:21][INFO] train_test.py:  94: Evaluation: [Epoch   23] loss: 2.4782 accuracy: 0.6000
[10/26 10:11:26][INFO] train_test.py:  62: Training: [Epoch   24] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:11:27][INFO] train_test.py:  94: Evaluation: [Epoch   24] loss: 2.4782 accuracy: 0.6000
[10/26 10:11:31][INFO] train_test.py:  62: Training: [Epoch   25] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:11:32][INFO] train_test.py:  94: Evaluation: [Epoch   25] loss: 2.4782 accuracy: 0.6000
[10/26 10:11:36][INFO] train_test.py:  62: Training: [Epoch   26] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:11:37][INFO] train_test.py:  94: Evaluation: [Epoch   26] loss: 2.4782 accuracy: 0.6000
[10/26 10:11:41][INFO] train_test.py:  62: Training: [Epoch   27] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:11:42][INFO] train_test.py:  94: Evaluation: [Epoch   27] loss: 2.4782 accuracy: 0.6000
[10/26 10:11:46][INFO] train_test.py:  62: Training: [Epoch   28] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:11:47][INFO] train_test.py:  94: Evaluation: [Epoch   28] loss: 2.4782 accuracy: 0.6000
[10/26 10:11:51][INFO] train_test.py:  62: Training: [Epoch   29] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:11:52][INFO] train_test.py:  94: Evaluation: [Epoch   29] loss: 2.4782 accuracy: 0.6000
[10/26 10:11:56][INFO] train_test.py:  62: Training: [Epoch   30] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:11:58][INFO] train_test.py:  94: Evaluation: [Epoch   30] loss: 2.4782 accuracy: 0.6000
[10/26 10:12:02][INFO] train_test.py:  62: Training: [Epoch   31] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:12:03][INFO] train_test.py:  94: Evaluation: [Epoch   31] loss: 2.4782 accuracy: 0.6000
[10/26 10:12:07][INFO] train_test.py:  62: Training: [Epoch   32] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:12:08][INFO] train_test.py:  94: Evaluation: [Epoch   32] loss: 2.4782 accuracy: 0.6000
[10/26 10:12:12][INFO] train_test.py:  62: Training: [Epoch   33] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:12:13][INFO] train_test.py:  94: Evaluation: [Epoch   33] loss: 2.4782 accuracy: 0.6000
[10/26 10:12:17][INFO] train_test.py:  62: Training: [Epoch   34] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:12:18][INFO] train_test.py:  94: Evaluation: [Epoch   34] loss: 2.4782 accuracy: 0.6000
[10/26 10:12:22][INFO] train_test.py:  62: Training: [Epoch   35] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:12:23][INFO] train_test.py:  94: Evaluation: [Epoch   35] loss: 2.4782 accuracy: 0.6000
[10/26 10:12:27][INFO] train_test.py:  62: Training: [Epoch   36] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:12:28][INFO] train_test.py:  94: Evaluation: [Epoch   36] loss: 2.4782 accuracy: 0.6000
[10/26 10:12:32][INFO] train_test.py:  62: Training: [Epoch   37] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:12:33][INFO] train_test.py:  94: Evaluation: [Epoch   37] loss: 2.4782 accuracy: 0.6000
[10/26 10:12:37][INFO] train_test.py:  62: Training: [Epoch   38] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:12:39][INFO] train_test.py:  94: Evaluation: [Epoch   38] loss: 2.4782 accuracy: 0.6000
[10/26 10:12:43][INFO] train_test.py:  62: Training: [Epoch   39] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:12:44][INFO] train_test.py:  94: Evaluation: [Epoch   39] loss: 2.4782 accuracy: 0.6000
[10/26 10:12:48][INFO] train_test.py:  62: Training: [Epoch   40] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:12:49][INFO] train_test.py:  94: Evaluation: [Epoch   40] loss: 2.4782 accuracy: 0.6000
[10/26 10:12:53][INFO] train_test.py:  62: Training: [Epoch   41] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:12:54][INFO] train_test.py:  94: Evaluation: [Epoch   41] loss: 2.4782 accuracy: 0.6000
[10/26 10:12:58][INFO] train_test.py:  62: Training: [Epoch   42] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:12:59][INFO] train_test.py:  94: Evaluation: [Epoch   42] loss: 2.4782 accuracy: 0.6000
[10/26 10:13:03][INFO] train_test.py:  62: Training: [Epoch   43] loss: 2.0782 accuracy: 1.0000 lr: 0.001000
[10/26 10:13:04][INFO] train_test.py:  94: Evaluation: [Epoch   43] loss: 2.4782 accuracy: 0.6000
[10/26 10:13:11][INFO] run.py:  92: Train with configs:
[10/26 10:13:11][INFO] run.py:  93: 
{ AUGMENTATION      }-> False
{ BATCH_SIZE        }-> 2
{ DATA_JSON         }-> data.json
{ DATA_SEPARATOR    }-> ,
{ DECAY             }-> 0.005
{ DEVICES           }-> [0]
{ EPOCHS            }-> 100
{ FLOW              }-> DeepFlow
{ GPU               }-> 0
{ LABEL_DICT        }-> label_dict.json
{ LOAD              }-> False
{ LR                }-> 0.001
{ MODE              }-> train
{ MODEL_NAME        }-> twin
{ MODEL_TYPE        }-> twin
{ MOMENTUM          }-> 0.5
{ NESTEROV          }-> True
{ NORM              }-> normal
{ NUM_CLASSES       }-> 20
{ NUM_WORKERS       }-> 8
{ N_GPU             }-> 1
{ OUTPUT_DIR        }-> .
{ OUTPUT_FILE       }-> ./pred.txt
{ PATH_DATA         }-> data
{ PATH_MODEL        }-> ./twin
{ PATH_PROCESSED_DATA }-> data_processed
{ SEED              }-> 31
{ SIZE_DATA         }-> [100 120 120]
{ VERSION           }-> 31

[10/26 10:17:25][INFO] train_test.py:  62: Training: [Epoch    1] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 10:18:38][INFO] train_test.py:  94: Evaluation: [Epoch    1] loss: 3.0021 accuracy: 0.0765
[10/26 10:24:34][INFO] run.py:  92: Train with configs:
[10/26 10:24:34][INFO] run.py:  93: 
{ AUGMENTATION      }-> False
{ BATCH_SIZE        }-> 2
{ DATA_JSON         }-> data.json
{ DATA_SEPARATOR    }-> ,
{ DECAY             }-> 0.005
{ DEVICES           }-> [0]
{ EPOCHS            }-> 100
{ FLOW              }-> DeepFlow
{ GPU               }-> 0
{ LABEL_DICT        }-> label_dict.json
{ LOAD              }-> False
{ LR                }-> 0.001
{ MODE              }-> train
{ MODEL_NAME        }-> twin
{ MODEL_TYPE        }-> twin
{ MOMENTUM          }-> 0.5
{ NESTEROV          }-> True
{ NORM              }-> normal
{ NUM_CLASSES       }-> 20
{ NUM_WORKERS       }-> 8
{ N_GPU             }-> 1
{ OUTPUT_DIR        }-> .
{ OUTPUT_FILE       }-> ./pred.txt
{ PATH_DATA         }-> data
{ PATH_MODEL        }-> ./twin
{ PATH_PROCESSED_DATA }-> data_processed
{ SEED              }-> 31
{ SIZE_DATA         }-> [100 120 120]
{ VERSION           }-> 31

[10/26 10:27:50][INFO] train_test.py:  62: Training: [Epoch    1] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 10:27:58][INFO] train_test.py:  94: Evaluation: [Epoch    1] loss: 3.0021 accuracy: 0.0765
[10/26 10:31:25][INFO] train_test.py:  62: Training: [Epoch    2] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 10:31:33][INFO] train_test.py:  94: Evaluation: [Epoch    2] loss: 3.0021 accuracy: 0.0765
[10/26 10:34:45][INFO] train_test.py:  62: Training: [Epoch    3] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 10:34:53][INFO] train_test.py:  94: Evaluation: [Epoch    3] loss: 3.0021 accuracy: 0.0765
[10/26 10:38:04][INFO] train_test.py:  62: Training: [Epoch    4] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 10:38:12][INFO] train_test.py:  94: Evaluation: [Epoch    4] loss: 3.0021 accuracy: 0.0765
[10/26 10:41:24][INFO] train_test.py:  62: Training: [Epoch    5] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 10:41:32][INFO] train_test.py:  94: Evaluation: [Epoch    5] loss: 3.0021 accuracy: 0.0765
[10/26 10:44:44][INFO] train_test.py:  62: Training: [Epoch    6] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 10:44:52][INFO] train_test.py:  94: Evaluation: [Epoch    6] loss: 3.0021 accuracy: 0.0765
[10/26 10:48:04][INFO] train_test.py:  62: Training: [Epoch    7] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 10:48:12][INFO] train_test.py:  94: Evaluation: [Epoch    7] loss: 3.0021 accuracy: 0.0765
[10/26 10:51:23][INFO] train_test.py:  62: Training: [Epoch    8] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 10:51:31][INFO] train_test.py:  94: Evaluation: [Epoch    8] loss: 3.0021 accuracy: 0.0765
[10/26 10:54:43][INFO] train_test.py:  62: Training: [Epoch    9] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 10:54:51][INFO] train_test.py:  94: Evaluation: [Epoch    9] loss: 3.0021 accuracy: 0.0765
[10/26 10:58:02][INFO] train_test.py:  62: Training: [Epoch   10] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 10:58:11][INFO] train_test.py:  94: Evaluation: [Epoch   10] loss: 3.0021 accuracy: 0.0765
[10/26 11:01:23][INFO] train_test.py:  62: Training: [Epoch   11] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 11:01:31][INFO] train_test.py:  94: Evaluation: [Epoch   11] loss: 3.0021 accuracy: 0.0765
[10/26 11:04:43][INFO] train_test.py:  62: Training: [Epoch   12] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 11:04:51][INFO] train_test.py:  94: Evaluation: [Epoch   12] loss: 3.0021 accuracy: 0.0765
[10/26 11:08:02][INFO] train_test.py:  62: Training: [Epoch   13] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 11:08:10][INFO] train_test.py:  94: Evaluation: [Epoch   13] loss: 3.0021 accuracy: 0.0765
[10/26 11:11:22][INFO] train_test.py:  62: Training: [Epoch   14] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 11:11:30][INFO] train_test.py:  94: Evaluation: [Epoch   14] loss: 3.0021 accuracy: 0.0765
[10/26 11:14:41][INFO] train_test.py:  62: Training: [Epoch   15] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 11:14:49][INFO] train_test.py:  94: Evaluation: [Epoch   15] loss: 3.0021 accuracy: 0.0765
[10/26 11:18:01][INFO] train_test.py:  62: Training: [Epoch   16] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 11:18:09][INFO] train_test.py:  94: Evaluation: [Epoch   16] loss: 3.0021 accuracy: 0.0765
[10/26 11:21:20][INFO] train_test.py:  62: Training: [Epoch   17] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 11:21:28][INFO] train_test.py:  94: Evaluation: [Epoch   17] loss: 3.0021 accuracy: 0.0765
[10/26 11:24:40][INFO] train_test.py:  62: Training: [Epoch   18] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 11:24:48][INFO] train_test.py:  94: Evaluation: [Epoch   18] loss: 3.0021 accuracy: 0.0765
[10/26 11:27:59][INFO] train_test.py:  62: Training: [Epoch   19] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 11:28:07][INFO] train_test.py:  94: Evaluation: [Epoch   19] loss: 3.0021 accuracy: 0.0765
[10/26 11:31:19][INFO] train_test.py:  62: Training: [Epoch   20] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 11:31:27][INFO] train_test.py:  94: Evaluation: [Epoch   20] loss: 3.0021 accuracy: 0.0765
[10/26 11:34:38][INFO] train_test.py:  62: Training: [Epoch   21] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 11:34:46][INFO] train_test.py:  94: Evaluation: [Epoch   21] loss: 3.0021 accuracy: 0.0765
[10/26 11:37:58][INFO] train_test.py:  62: Training: [Epoch   22] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 11:38:06][INFO] train_test.py:  94: Evaluation: [Epoch   22] loss: 3.0021 accuracy: 0.0765
[10/26 11:41:17][INFO] train_test.py:  62: Training: [Epoch   23] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 11:41:25][INFO] train_test.py:  94: Evaluation: [Epoch   23] loss: 3.0021 accuracy: 0.0765
[10/26 11:44:37][INFO] train_test.py:  62: Training: [Epoch   24] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 11:44:45][INFO] train_test.py:  94: Evaluation: [Epoch   24] loss: 3.0021 accuracy: 0.0765
[10/26 11:47:57][INFO] train_test.py:  62: Training: [Epoch   25] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 11:48:05][INFO] train_test.py:  94: Evaluation: [Epoch   25] loss: 3.0021 accuracy: 0.0765
[10/26 11:51:16][INFO] train_test.py:  62: Training: [Epoch   26] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 11:51:24][INFO] train_test.py:  94: Evaluation: [Epoch   26] loss: 3.0021 accuracy: 0.0765
[10/26 11:54:36][INFO] train_test.py:  62: Training: [Epoch   27] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 11:54:44][INFO] train_test.py:  94: Evaluation: [Epoch   27] loss: 3.0021 accuracy: 0.0765
[10/26 11:57:56][INFO] train_test.py:  62: Training: [Epoch   28] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 11:58:04][INFO] train_test.py:  94: Evaluation: [Epoch   28] loss: 3.0021 accuracy: 0.0765
[10/26 12:01:16][INFO] train_test.py:  62: Training: [Epoch   29] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 12:01:24][INFO] train_test.py:  94: Evaluation: [Epoch   29] loss: 3.0021 accuracy: 0.0765
[10/26 12:04:35][INFO] train_test.py:  62: Training: [Epoch   30] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 12:04:43][INFO] train_test.py:  94: Evaluation: [Epoch   30] loss: 3.0021 accuracy: 0.0765
[10/26 12:07:55][INFO] train_test.py:  62: Training: [Epoch   31] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 12:08:03][INFO] train_test.py:  94: Evaluation: [Epoch   31] loss: 3.0021 accuracy: 0.0765
[10/26 12:11:15][INFO] train_test.py:  62: Training: [Epoch   32] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 12:11:23][INFO] train_test.py:  94: Evaluation: [Epoch   32] loss: 3.0021 accuracy: 0.0765
[10/26 12:14:35][INFO] train_test.py:  62: Training: [Epoch   33] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 12:14:43][INFO] train_test.py:  94: Evaluation: [Epoch   33] loss: 3.0021 accuracy: 0.0765
[10/26 12:17:55][INFO] train_test.py:  62: Training: [Epoch   34] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 12:18:03][INFO] train_test.py:  94: Evaluation: [Epoch   34] loss: 3.0021 accuracy: 0.0765
[10/26 12:21:14][INFO] train_test.py:  62: Training: [Epoch   35] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 12:21:22][INFO] train_test.py:  94: Evaluation: [Epoch   35] loss: 3.0021 accuracy: 0.0765
[10/26 12:24:34][INFO] train_test.py:  62: Training: [Epoch   36] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 12:24:42][INFO] train_test.py:  94: Evaluation: [Epoch   36] loss: 3.0021 accuracy: 0.0765
[10/26 12:27:54][INFO] train_test.py:  62: Training: [Epoch   37] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 12:28:02][INFO] train_test.py:  94: Evaluation: [Epoch   37] loss: 3.0021 accuracy: 0.0765
[10/26 12:31:14][INFO] train_test.py:  62: Training: [Epoch   38] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 12:31:22][INFO] train_test.py:  94: Evaluation: [Epoch   38] loss: 3.0021 accuracy: 0.0765
[10/26 12:34:34][INFO] train_test.py:  62: Training: [Epoch   39] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 12:34:42][INFO] train_test.py:  94: Evaluation: [Epoch   39] loss: 3.0021 accuracy: 0.0765
[10/26 12:37:54][INFO] train_test.py:  62: Training: [Epoch   40] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 12:38:02][INFO] train_test.py:  94: Evaluation: [Epoch   40] loss: 3.0021 accuracy: 0.0765
[10/26 12:41:14][INFO] train_test.py:  62: Training: [Epoch   41] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 12:41:22][INFO] train_test.py:  94: Evaluation: [Epoch   41] loss: 3.0021 accuracy: 0.0765
[10/26 12:44:33][INFO] train_test.py:  62: Training: [Epoch   42] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 12:44:41][INFO] train_test.py:  94: Evaluation: [Epoch   42] loss: 3.0021 accuracy: 0.0765
[10/26 12:47:53][INFO] train_test.py:  62: Training: [Epoch   43] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 12:48:01][INFO] train_test.py:  94: Evaluation: [Epoch   43] loss: 3.0021 accuracy: 0.0765
[10/26 12:51:13][INFO] train_test.py:  62: Training: [Epoch   44] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 12:51:21][INFO] train_test.py:  94: Evaluation: [Epoch   44] loss: 3.0021 accuracy: 0.0765
[10/26 12:54:33][INFO] train_test.py:  62: Training: [Epoch   45] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 12:54:41][INFO] train_test.py:  94: Evaluation: [Epoch   45] loss: 3.0021 accuracy: 0.0765
[10/26 12:57:53][INFO] train_test.py:  62: Training: [Epoch   46] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 12:58:01][INFO] train_test.py:  94: Evaluation: [Epoch   46] loss: 3.0021 accuracy: 0.0765
[10/26 13:01:13][INFO] train_test.py:  62: Training: [Epoch   47] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 13:01:21][INFO] train_test.py:  94: Evaluation: [Epoch   47] loss: 3.0021 accuracy: 0.0765
[10/26 13:04:33][INFO] train_test.py:  62: Training: [Epoch   48] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 13:04:41][INFO] train_test.py:  94: Evaluation: [Epoch   48] loss: 3.0021 accuracy: 0.0765
[10/26 13:07:53][INFO] train_test.py:  62: Training: [Epoch   49] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 13:08:01][INFO] train_test.py:  94: Evaluation: [Epoch   49] loss: 3.0021 accuracy: 0.0765
[10/26 13:11:13][INFO] train_test.py:  62: Training: [Epoch   50] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 13:11:21][INFO] train_test.py:  94: Evaluation: [Epoch   50] loss: 3.0021 accuracy: 0.0765
[10/26 13:14:33][INFO] train_test.py:  62: Training: [Epoch   51] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 13:14:41][INFO] train_test.py:  94: Evaluation: [Epoch   51] loss: 3.0021 accuracy: 0.0765
[10/26 13:17:53][INFO] train_test.py:  62: Training: [Epoch   52] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 13:18:01][INFO] train_test.py:  94: Evaluation: [Epoch   52] loss: 3.0021 accuracy: 0.0765
[10/26 13:21:13][INFO] train_test.py:  62: Training: [Epoch   53] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 13:21:21][INFO] train_test.py:  94: Evaluation: [Epoch   53] loss: 3.0021 accuracy: 0.0765
[10/26 13:24:33][INFO] train_test.py:  62: Training: [Epoch   54] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 13:24:41][INFO] train_test.py:  94: Evaluation: [Epoch   54] loss: 3.0021 accuracy: 0.0765
[10/26 13:27:52][INFO] train_test.py:  62: Training: [Epoch   55] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 13:28:01][INFO] train_test.py:  94: Evaluation: [Epoch   55] loss: 3.0021 accuracy: 0.0765
[10/26 13:31:12][INFO] train_test.py:  62: Training: [Epoch   56] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 13:31:21][INFO] train_test.py:  94: Evaluation: [Epoch   56] loss: 3.0021 accuracy: 0.0765
[10/26 13:34:32][INFO] train_test.py:  62: Training: [Epoch   57] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 13:34:41][INFO] train_test.py:  94: Evaluation: [Epoch   57] loss: 3.0021 accuracy: 0.0765
[10/26 13:37:52][INFO] train_test.py:  62: Training: [Epoch   58] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 13:38:00][INFO] train_test.py:  94: Evaluation: [Epoch   58] loss: 3.0021 accuracy: 0.0765
[10/26 13:41:12][INFO] train_test.py:  62: Training: [Epoch   59] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 13:41:20][INFO] train_test.py:  94: Evaluation: [Epoch   59] loss: 3.0021 accuracy: 0.0765
[10/26 13:44:32][INFO] train_test.py:  62: Training: [Epoch   60] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 13:44:40][INFO] train_test.py:  94: Evaluation: [Epoch   60] loss: 3.0021 accuracy: 0.0765
[10/26 13:47:52][INFO] train_test.py:  62: Training: [Epoch   61] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 13:48:00][INFO] train_test.py:  94: Evaluation: [Epoch   61] loss: 3.0021 accuracy: 0.0765
[10/26 13:51:12][INFO] train_test.py:  62: Training: [Epoch   62] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 13:51:20][INFO] train_test.py:  94: Evaluation: [Epoch   62] loss: 3.0021 accuracy: 0.0765
[10/26 13:54:32][INFO] train_test.py:  62: Training: [Epoch   63] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 13:54:40][INFO] train_test.py:  94: Evaluation: [Epoch   63] loss: 3.0021 accuracy: 0.0765
[10/26 13:57:52][INFO] train_test.py:  62: Training: [Epoch   64] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 13:58:00][INFO] train_test.py:  94: Evaluation: [Epoch   64] loss: 3.0021 accuracy: 0.0765
[10/26 14:01:12][INFO] train_test.py:  62: Training: [Epoch   65] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 14:01:20][INFO] train_test.py:  94: Evaluation: [Epoch   65] loss: 3.0021 accuracy: 0.0765
[10/26 14:04:32][INFO] train_test.py:  62: Training: [Epoch   66] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 14:04:41][INFO] train_test.py:  94: Evaluation: [Epoch   66] loss: 3.0021 accuracy: 0.0765
[10/26 14:07:53][INFO] train_test.py:  62: Training: [Epoch   67] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 14:08:01][INFO] train_test.py:  94: Evaluation: [Epoch   67] loss: 3.0021 accuracy: 0.0765
[10/26 14:11:13][INFO] train_test.py:  62: Training: [Epoch   68] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 14:11:21][INFO] train_test.py:  94: Evaluation: [Epoch   68] loss: 3.0021 accuracy: 0.0765
[10/26 14:14:33][INFO] train_test.py:  62: Training: [Epoch   69] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 14:14:41][INFO] train_test.py:  94: Evaluation: [Epoch   69] loss: 3.0021 accuracy: 0.0765
[10/26 14:17:53][INFO] train_test.py:  62: Training: [Epoch   70] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 14:18:01][INFO] train_test.py:  94: Evaluation: [Epoch   70] loss: 3.0021 accuracy: 0.0765
[10/26 14:21:13][INFO] train_test.py:  62: Training: [Epoch   71] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 14:21:21][INFO] train_test.py:  94: Evaluation: [Epoch   71] loss: 3.0021 accuracy: 0.0765
[10/26 14:24:33][INFO] train_test.py:  62: Training: [Epoch   72] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 14:24:41][INFO] train_test.py:  94: Evaluation: [Epoch   72] loss: 3.0021 accuracy: 0.0765
[10/26 14:27:53][INFO] train_test.py:  62: Training: [Epoch   73] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 14:28:01][INFO] train_test.py:  94: Evaluation: [Epoch   73] loss: 3.0021 accuracy: 0.0765
[10/26 14:31:12][INFO] train_test.py:  62: Training: [Epoch   74] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 14:31:20][INFO] train_test.py:  94: Evaluation: [Epoch   74] loss: 3.0021 accuracy: 0.0765
[10/26 14:34:32][INFO] train_test.py:  62: Training: [Epoch   75] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 14:34:40][INFO] train_test.py:  94: Evaluation: [Epoch   75] loss: 3.0021 accuracy: 0.0765
[10/26 14:37:52][INFO] train_test.py:  62: Training: [Epoch   76] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 14:38:00][INFO] train_test.py:  94: Evaluation: [Epoch   76] loss: 3.0021 accuracy: 0.0765
[10/26 14:41:11][INFO] train_test.py:  62: Training: [Epoch   77] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 14:41:19][INFO] train_test.py:  94: Evaluation: [Epoch   77] loss: 3.0021 accuracy: 0.0765
[10/26 14:44:31][INFO] train_test.py:  62: Training: [Epoch   78] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 14:44:39][INFO] train_test.py:  94: Evaluation: [Epoch   78] loss: 3.0021 accuracy: 0.0765
[10/26 14:47:50][INFO] train_test.py:  62: Training: [Epoch   79] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 14:47:58][INFO] train_test.py:  94: Evaluation: [Epoch   79] loss: 3.0021 accuracy: 0.0765
[10/26 14:51:10][INFO] train_test.py:  62: Training: [Epoch   80] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 14:51:18][INFO] train_test.py:  94: Evaluation: [Epoch   80] loss: 3.0021 accuracy: 0.0765
[10/26 14:54:29][INFO] train_test.py:  62: Training: [Epoch   81] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 14:54:37][INFO] train_test.py:  94: Evaluation: [Epoch   81] loss: 3.0021 accuracy: 0.0765
[10/26 14:57:49][INFO] train_test.py:  62: Training: [Epoch   82] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 14:57:57][INFO] train_test.py:  94: Evaluation: [Epoch   82] loss: 3.0021 accuracy: 0.0765
[10/26 15:01:08][INFO] train_test.py:  62: Training: [Epoch   83] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 15:01:16][INFO] train_test.py:  94: Evaluation: [Epoch   83] loss: 3.0021 accuracy: 0.0765
[10/26 15:04:28][INFO] train_test.py:  62: Training: [Epoch   84] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 15:04:36][INFO] train_test.py:  94: Evaluation: [Epoch   84] loss: 3.0021 accuracy: 0.0765
[10/26 15:07:47][INFO] train_test.py:  62: Training: [Epoch   85] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 15:07:55][INFO] train_test.py:  94: Evaluation: [Epoch   85] loss: 3.0021 accuracy: 0.0765
[10/26 15:11:06][INFO] train_test.py:  62: Training: [Epoch   86] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 15:11:14][INFO] train_test.py:  94: Evaluation: [Epoch   86] loss: 3.0021 accuracy: 0.0765
[10/26 15:14:26][INFO] train_test.py:  62: Training: [Epoch   87] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 15:14:34][INFO] train_test.py:  94: Evaluation: [Epoch   87] loss: 3.0021 accuracy: 0.0765
[10/26 15:17:45][INFO] train_test.py:  62: Training: [Epoch   88] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 15:17:53][INFO] train_test.py:  94: Evaluation: [Epoch   88] loss: 3.0021 accuracy: 0.0765
[10/26 15:21:05][INFO] train_test.py:  62: Training: [Epoch   89] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 15:21:13][INFO] train_test.py:  94: Evaluation: [Epoch   89] loss: 3.0021 accuracy: 0.0765
[10/26 15:24:24][INFO] train_test.py:  62: Training: [Epoch   90] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 15:24:32][INFO] train_test.py:  94: Evaluation: [Epoch   90] loss: 3.0021 accuracy: 0.0765
[10/26 15:27:44][INFO] train_test.py:  62: Training: [Epoch   91] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 15:27:52][INFO] train_test.py:  94: Evaluation: [Epoch   91] loss: 3.0021 accuracy: 0.0765
[10/26 15:31:03][INFO] train_test.py:  62: Training: [Epoch   92] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 15:31:11][INFO] train_test.py:  94: Evaluation: [Epoch   92] loss: 3.0021 accuracy: 0.0765
[10/26 15:34:23][INFO] train_test.py:  62: Training: [Epoch   93] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 15:34:31][INFO] train_test.py:  94: Evaluation: [Epoch   93] loss: 3.0021 accuracy: 0.0765
[10/26 15:37:42][INFO] train_test.py:  62: Training: [Epoch   94] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 15:37:50][INFO] train_test.py:  94: Evaluation: [Epoch   94] loss: 3.0021 accuracy: 0.0765
[10/26 15:41:02][INFO] train_test.py:  62: Training: [Epoch   95] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 15:41:10][INFO] train_test.py:  94: Evaluation: [Epoch   95] loss: 3.0021 accuracy: 0.0765
[10/26 15:44:22][INFO] train_test.py:  62: Training: [Epoch   96] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 15:44:30][INFO] train_test.py:  94: Evaluation: [Epoch   96] loss: 3.0021 accuracy: 0.0765
[10/26 15:47:41][INFO] train_test.py:  62: Training: [Epoch   97] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 15:47:49][INFO] train_test.py:  94: Evaluation: [Epoch   97] loss: 3.0021 accuracy: 0.0765
[10/26 15:51:01][INFO] train_test.py:  62: Training: [Epoch   98] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 15:51:09][INFO] train_test.py:  94: Evaluation: [Epoch   98] loss: 3.0021 accuracy: 0.0765
[10/26 15:54:36][INFO] train_test.py:  62: Training: [Epoch   99] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 15:54:44][INFO] train_test.py:  94: Evaluation: [Epoch   99] loss: 3.0021 accuracy: 0.0765
[10/26 15:58:11][INFO] train_test.py:  62: Training: [Epoch  100] loss: 2.9977 accuracy: 0.0804 lr: 0.001000
[10/26 15:58:19][INFO] train_test.py:  94: Evaluation: [Epoch  100] loss: 3.0021 accuracy: 0.0765
[10/26 15:58:34][INFO] train_test.py: 159: Trained with 100 epochs, lr = 0.001, batchsize = 2, momentum = 0.5 with max validation accuracy of 0.08 done in 5:33:55
[10/27 12:48:51][INFO] run.py:  92: Train with configs:
[10/27 12:48:51][INFO] run.py:  93: 
{ AUGMENTATION      }-> False
{ BATCH_SIZE        }-> 2
{ DATA_JSON         }-> data.json
{ DATA_SEPARATOR    }-> ,
{ DECAY             }-> 0.005
{ DEVICES           }-> [0]
{ EPOCHS            }-> 100
{ FLOW              }-> DeepFlow
{ GPU               }-> 0
{ LABEL_DICT        }-> label_dict.json
{ LOAD              }-> False
{ LR                }-> 0.001
{ MODE              }-> train
{ MODEL_NAME        }-> twin
{ MODEL_TYPE        }-> twin
{ MOMENTUM          }-> 0.5
{ NESTEROV          }-> True
{ NORM              }-> normal
{ NUM_CLASSES       }-> 20
{ NUM_WORKERS       }-> 8
{ N_GPU             }-> 1
{ OUTPUT_DIR        }-> .
{ OUTPUT_FILE       }-> ./pred.txt
{ PATH_DATA         }-> data
{ PATH_MODEL        }-> ./twin
{ PATH_PROCESSED_DATA }-> data_processed
{ SEED              }-> 31
{ SIZE_DATA         }-> [100 120 120]
{ VERSION           }-> 31

[10/27 12:49:15][INFO] run.py:  92: Train with configs:
[10/27 12:49:15][INFO] run.py:  93: 
{ AUGMENTATION      }-> False
{ BATCH_SIZE        }-> 2
{ DATA_JSON         }-> data.json
{ DATA_SEPARATOR    }-> ,
{ DECAY             }-> 0.005
{ DEVICES           }-> [0]
{ EPOCHS            }-> 100
{ FLOW              }-> DeepFlow
{ GPU               }-> 0
{ LABEL_DICT        }-> label_dict.json
{ LOAD              }-> False
{ LR                }-> 0.001
{ MODE              }-> train
{ MODEL_NAME        }-> twin
{ MODEL_TYPE        }-> twin
{ MOMENTUM          }-> 0.5
{ NESTEROV          }-> True
{ NORM              }-> normal
{ NUM_CLASSES       }-> 20
{ NUM_WORKERS       }-> 8
{ N_GPU             }-> 1
{ OUTPUT_DIR        }-> .
{ OUTPUT_FILE       }-> ./pred.txt
{ PATH_DATA         }-> data
{ PATH_MODEL        }-> ./twin
{ PATH_PROCESSED_DATA }-> data_processed
{ SEED              }-> 31
{ SIZE_DATA         }-> [100 120 120]
{ VERSION           }-> 31

[10/27 12:52:29][INFO] train_test.py:  62: Training: [Epoch    1] loss: 2.9957 accuracy: 0.0262 lr: 0.001000
[10/27 12:52:37][INFO] train_test.py:  94: Evaluation: [Epoch    1] loss: 2.9956 accuracy: 0.0383
[10/27 12:56:04][INFO] train_test.py:  62: Training: [Epoch    2] loss: 2.9954 accuracy: 0.0629 lr: 0.001000
[10/27 12:56:11][INFO] train_test.py:  94: Evaluation: [Epoch    2] loss: 2.9954 accuracy: 0.0820
[10/27 12:59:37][INFO] train_test.py:  62: Training: [Epoch    3] loss: 2.9950 accuracy: 0.0944 lr: 0.001000
[10/27 12:59:45][INFO] train_test.py:  94: Evaluation: [Epoch    3] loss: 2.9948 accuracy: 0.1366
[10/27 13:03:12][INFO] train_test.py:  62: Training: [Epoch    4] loss: 2.9932 accuracy: 0.1049 lr: 0.001000
[10/27 13:03:20][INFO] train_test.py:  94: Evaluation: [Epoch    4] loss: 2.9914 accuracy: 0.0874
[10/27 13:06:46][INFO] train_test.py:  62: Training: [Epoch    5] loss: 2.9753 accuracy: 0.0839 lr: 0.001000
[10/27 13:06:53][INFO] train_test.py:  94: Evaluation: [Epoch    5] loss: 2.9655 accuracy: 0.1093
[10/27 13:10:20][INFO] train_test.py:  62: Training: [Epoch    6] loss: 2.9549 accuracy: 0.1066 lr: 0.001000
[10/27 13:10:27][INFO] train_test.py:  94: Evaluation: [Epoch    6] loss: 2.9451 accuracy: 0.1202
[10/27 13:13:55][INFO] train_test.py:  62: Training: [Epoch    7] loss: 2.9343 accuracy: 0.1329 lr: 0.001000
[10/27 13:14:04][INFO] train_test.py:  94: Evaluation: [Epoch    7] loss: 2.9783 accuracy: 0.0929
[10/27 13:17:17][INFO] train_test.py:  62: Training: [Epoch    8] loss: 2.9171 accuracy: 0.1626 lr: 0.001000
[10/27 13:17:25][INFO] train_test.py:  94: Evaluation: [Epoch    8] loss: 2.9145 accuracy: 0.1475
[10/27 13:20:52][INFO] train_test.py:  62: Training: [Epoch    9] loss: 2.8867 accuracy: 0.1958 lr: 0.001000
[10/27 13:21:02][INFO] train_test.py:  94: Evaluation: [Epoch    9] loss: 2.8969 accuracy: 0.1694
[10/27 13:24:37][INFO] train_test.py:  62: Training: [Epoch   10] loss: 2.8680 accuracy: 0.2080 lr: 0.001000
[10/27 13:24:45][INFO] train_test.py:  94: Evaluation: [Epoch   10] loss: 2.8512 accuracy: 0.2077
[10/27 13:28:12][INFO] train_test.py:  62: Training: [Epoch   11] loss: 2.8071 accuracy: 0.2727 lr: 0.001000
[10/27 13:28:20][INFO] train_test.py:  94: Evaluation: [Epoch   11] loss: 2.8263 accuracy: 0.2459
[10/27 13:31:48][INFO] train_test.py:  62: Training: [Epoch   12] loss: 2.7697 accuracy: 0.3007 lr: 0.001000
[10/27 13:31:56][INFO] train_test.py:  94: Evaluation: [Epoch   12] loss: 2.8104 accuracy: 0.2678
[10/27 13:35:25][INFO] train_test.py:  62: Training: [Epoch   13] loss: 2.7118 accuracy: 0.3706 lr: 0.001000
[10/27 13:35:34][INFO] train_test.py:  94: Evaluation: [Epoch   13] loss: 2.8049 accuracy: 0.2678
[10/27 13:39:08][INFO] train_test.py:  62: Training: [Epoch   14] loss: 2.7488 accuracy: 0.3339 lr: 0.001000
[10/27 13:39:17][INFO] train_test.py:  94: Evaluation: [Epoch   14] loss: 2.8358 accuracy: 0.2459
[10/27 13:42:30][INFO] train_test.py:  62: Training: [Epoch   15] loss: 2.7981 accuracy: 0.2797 lr: 0.001000
[10/27 13:42:38][INFO] train_test.py:  94: Evaluation: [Epoch   15] loss: 2.8196 accuracy: 0.2568
[10/27 13:45:51][INFO] train_test.py:  62: Training: [Epoch   16] loss: 2.7093 accuracy: 0.3671 lr: 0.001000
[10/27 13:46:00][INFO] train_test.py:  94: Evaluation: [Epoch   16] loss: 2.8470 accuracy: 0.2295
[10/27 13:49:13][INFO] train_test.py:  62: Training: [Epoch   17] loss: 2.7513 accuracy: 0.3269 lr: 0.001000
[10/27 13:49:21][INFO] train_test.py:  94: Evaluation: [Epoch   17] loss: 2.8759 accuracy: 0.1967
[10/27 13:52:35][INFO] train_test.py:  62: Training: [Epoch   18] loss: 2.7843 accuracy: 0.2937 lr: 0.001000
[10/27 13:52:43][INFO] train_test.py:  94: Evaluation: [Epoch   18] loss: 2.8686 accuracy: 0.2077
[10/27 13:55:56][INFO] train_test.py:  62: Training: [Epoch   19] loss: 2.7368 accuracy: 0.3409 lr: 0.001000
[10/27 13:56:04][INFO] train_test.py:  94: Evaluation: [Epoch   19] loss: 2.8361 accuracy: 0.2404
[10/27 13:59:18][INFO] train_test.py:  62: Training: [Epoch   20] loss: 2.6848 accuracy: 0.3916 lr: 0.001000
[10/27 13:59:26][INFO] train_test.py:  94: Evaluation: [Epoch   20] loss: 2.8554 accuracy: 0.2240
[10/27 14:02:39][INFO] train_test.py:  62: Training: [Epoch   21] loss: 2.7763 accuracy: 0.3007 lr: 0.001000
[10/27 14:02:48][INFO] train_test.py:  94: Evaluation: [Epoch   21] loss: 2.8895 accuracy: 0.1858
[10/27 14:06:01][INFO] train_test.py:  62: Training: [Epoch   22] loss: 2.7593 accuracy: 0.3217 lr: 0.001000
[10/27 14:06:09][INFO] train_test.py:  94: Evaluation: [Epoch   22] loss: 2.8817 accuracy: 0.1913
[10/27 14:09:23][INFO] train_test.py:  62: Training: [Epoch   23] loss: 2.7859 accuracy: 0.2867 lr: 0.001000
[10/27 14:09:31][INFO] train_test.py:  94: Evaluation: [Epoch   23] loss: 2.8201 accuracy: 0.2568
[10/27 14:12:45][INFO] train_test.py:  62: Training: [Epoch   24] loss: 2.7608 accuracy: 0.3182 lr: 0.001000
[10/27 14:12:54][INFO] train_test.py:  94: Evaluation: [Epoch   24] loss: 2.8423 accuracy: 0.2295
[10/27 14:16:33][INFO] train_test.py:  62: Training: [Epoch   25] loss: 2.9126 accuracy: 0.1661 lr: 0.001000
[10/27 14:16:41][INFO] train_test.py:  94: Evaluation: [Epoch   25] loss: 2.9855 accuracy: 0.0929
[10/27 14:19:54][INFO] train_test.py:  62: Training: [Epoch   26] loss: 2.7864 accuracy: 0.2902 lr: 0.001000
[10/27 14:20:03][INFO] train_test.py:  94: Evaluation: [Epoch   26] loss: 2.7790 accuracy: 0.3005
[10/27 14:23:58][INFO] train_test.py:  62: Training: [Epoch   27] loss: 2.6946 accuracy: 0.3846 lr: 0.001000
[10/27 14:24:06][INFO] train_test.py:  94: Evaluation: [Epoch   27] loss: 2.8449 accuracy: 0.2350
[10/27 14:27:18][INFO] train_test.py:  62: Training: [Epoch   28] loss: 2.7139 accuracy: 0.3689 lr: 0.001000
[10/27 14:27:27][INFO] train_test.py:  94: Evaluation: [Epoch   28] loss: 2.8451 accuracy: 0.2350
[10/27 14:30:39][INFO] train_test.py:  62: Training: [Epoch   29] loss: 2.7248 accuracy: 0.3549 lr: 0.001000
[10/27 14:30:47][INFO] train_test.py:  94: Evaluation: [Epoch   29] loss: 2.7858 accuracy: 0.2951
[10/27 14:33:59][INFO] train_test.py:  62: Training: [Epoch   30] loss: 2.7157 accuracy: 0.3654 lr: 0.001000
[10/27 14:34:08][INFO] train_test.py:  94: Evaluation: [Epoch   30] loss: 2.8071 accuracy: 0.2678
[10/27 14:37:20][INFO] train_test.py:  62: Training: [Epoch   31] loss: 2.6887 accuracy: 0.3899 lr: 0.001000
[10/27 14:37:29][INFO] train_test.py:  94: Evaluation: [Epoch   31] loss: 2.8364 accuracy: 0.2350
[10/27 14:40:41][INFO] train_test.py:  62: Training: [Epoch   32] loss: 2.7073 accuracy: 0.3706 lr: 0.001000
[10/27 14:40:50][INFO] train_test.py:  94: Evaluation: [Epoch   32] loss: 2.8437 accuracy: 0.2350
[10/27 14:44:03][INFO] train_test.py:  62: Training: [Epoch   33] loss: 2.6802 accuracy: 0.3986 lr: 0.001000
[10/27 14:44:12][INFO] train_test.py:  94: Evaluation: [Epoch   33] loss: 2.8186 accuracy: 0.2623
[10/27 14:47:24][INFO] train_test.py:  62: Training: [Epoch   34] loss: 2.6770 accuracy: 0.4003 lr: 0.001000
[10/27 14:47:33][INFO] train_test.py:  94: Evaluation: [Epoch   34] loss: 2.8518 accuracy: 0.2295
[10/27 14:50:45][INFO] train_test.py:  62: Training: [Epoch   35] loss: 2.8745 accuracy: 0.2045 lr: 0.001000
[10/27 14:50:54][INFO] train_test.py:  94: Evaluation: [Epoch   35] loss: 2.9584 accuracy: 0.1202
[10/27 14:54:05][INFO] train_test.py:  62: Training: [Epoch   36] loss: 2.9382 accuracy: 0.1399 lr: 0.001000
[10/27 14:54:14][INFO] train_test.py:  94: Evaluation: [Epoch   36] loss: 3.0020 accuracy: 0.0765
[10/27 14:57:26][INFO] train_test.py:  62: Training: [Epoch   37] loss: 2.9767 accuracy: 0.1014 lr: 0.001000
[10/27 14:57:34][INFO] train_test.py:  94: Evaluation: [Epoch   37] loss: 3.0021 accuracy: 0.0765
[10/27 15:00:46][INFO] train_test.py:  62: Training: [Epoch   38] loss: 2.9767 accuracy: 0.1014 lr: 0.001000
[10/27 15:00:54][INFO] train_test.py:  94: Evaluation: [Epoch   38] loss: 3.0020 accuracy: 0.0765
[10/27 15:04:06][INFO] train_test.py:  62: Training: [Epoch   39] loss: 2.9768 accuracy: 0.1014 lr: 0.001000
[10/27 15:04:15][INFO] train_test.py:  94: Evaluation: [Epoch   39] loss: 3.0020 accuracy: 0.0765
[10/27 15:07:26][INFO] train_test.py:  62: Training: [Epoch   40] loss: 2.9768 accuracy: 0.1014 lr: 0.001000
[10/27 15:07:35][INFO] train_test.py:  94: Evaluation: [Epoch   40] loss: 3.0020 accuracy: 0.0765
[10/27 15:10:47][INFO] train_test.py:  62: Training: [Epoch   41] loss: 2.9768 accuracy: 0.1014 lr: 0.001000
[10/27 15:10:56][INFO] train_test.py:  94: Evaluation: [Epoch   41] loss: 3.0020 accuracy: 0.0765
[10/27 15:14:08][INFO] train_test.py:  62: Training: [Epoch   42] loss: 2.9768 accuracy: 0.1014 lr: 0.001000
[10/27 15:14:17][INFO] train_test.py:  94: Evaluation: [Epoch   42] loss: 3.0020 accuracy: 0.0765
[10/27 15:17:28][INFO] train_test.py:  62: Training: [Epoch   43] loss: 2.9768 accuracy: 0.1014 lr: 0.001000
[10/27 15:17:37][INFO] train_test.py:  94: Evaluation: [Epoch   43] loss: 3.0020 accuracy: 0.0765
[10/27 15:20:48][INFO] train_test.py:  62: Training: [Epoch   44] loss: 2.9768 accuracy: 0.1014 lr: 0.001000
[10/27 15:20:57][INFO] train_test.py:  94: Evaluation: [Epoch   44] loss: 3.0020 accuracy: 0.0765
[10/27 15:31:15][INFO] train_test.py:  62: Training: [Epoch   45] loss: 2.9343 accuracy: 0.1434 lr: 0.001000
[10/27 15:31:24][INFO] train_test.py:  94: Evaluation: [Epoch   45] loss: 2.9217 accuracy: 0.1585
[10/27 15:34:35][INFO] train_test.py:  62: Training: [Epoch   46] loss: 2.8936 accuracy: 0.1853 lr: 0.001000
[10/27 15:34:45][INFO] train_test.py:  94: Evaluation: [Epoch   46] loss: 2.9225 accuracy: 0.1530
[10/27 15:37:57][INFO] train_test.py:  62: Training: [Epoch   47] loss: 2.8862 accuracy: 0.1906 lr: 0.001000
[10/27 15:38:05][INFO] train_test.py:  94: Evaluation: [Epoch   47] loss: 2.9139 accuracy: 0.1585
[10/27 15:41:17][INFO] train_test.py:  62: Training: [Epoch   48] loss: 2.8443 accuracy: 0.2343 lr: 0.001000
[10/27 15:41:26][INFO] train_test.py:  94: Evaluation: [Epoch   48] loss: 2.8746 accuracy: 0.2022
[10/27 15:44:37][INFO] train_test.py:  62: Training: [Epoch   49] loss: 2.8339 accuracy: 0.2448 lr: 0.001000
[10/27 15:44:46][INFO] train_test.py:  94: Evaluation: [Epoch   49] loss: 2.8721 accuracy: 0.2022
[10/27 15:47:58][INFO] train_test.py:  62: Training: [Epoch   50] loss: 2.8313 accuracy: 0.2483 lr: 0.001000
[10/27 15:48:06][INFO] train_test.py:  94: Evaluation: [Epoch   50] loss: 2.8859 accuracy: 0.1913
[10/27 15:51:18][INFO] train_test.py:  62: Training: [Epoch   51] loss: 2.8501 accuracy: 0.2273 lr: 0.001000
[10/27 15:51:28][INFO] train_test.py:  94: Evaluation: [Epoch   51] loss: 2.8979 accuracy: 0.1803
[10/27 15:54:41][INFO] train_test.py:  62: Training: [Epoch   52] loss: 2.8321 accuracy: 0.2448 lr: 0.001000
[10/27 15:54:50][INFO] train_test.py:  94: Evaluation: [Epoch   52] loss: 2.9695 accuracy: 0.1038
[10/27 15:58:02][INFO] train_test.py:  62: Training: [Epoch   53] loss: 2.9187 accuracy: 0.1591 lr: 0.001000
[10/27 15:58:11][INFO] train_test.py:  94: Evaluation: [Epoch   53] loss: 2.9572 accuracy: 0.1148
[10/27 16:01:24][INFO] train_test.py:  62: Training: [Epoch   54] loss: 2.9195 accuracy: 0.1573 lr: 0.001000
[10/27 16:01:35][INFO] train_test.py:  94: Evaluation: [Epoch   54] loss: 2.9360 accuracy: 0.1421
[10/27 16:07:16][INFO] train_test.py:  62: Training: [Epoch   55] loss: 2.9061 accuracy: 0.1696 lr: 0.001000
[10/27 16:08:00][INFO] train_test.py:  94: Evaluation: [Epoch   55] loss: 2.9445 accuracy: 0.1311
[10/27 16:11:29][INFO] train_test.py:  62: Training: [Epoch   56] loss: 2.9377 accuracy: 0.1399 lr: 0.001000
[10/27 16:13:07][INFO] train_test.py:  94: Evaluation: [Epoch   56] loss: 2.9419 accuracy: 0.1366
[10/27 16:17:16][INFO] train_test.py:  62: Training: [Epoch   57] loss: 2.9131 accuracy: 0.1661 lr: 0.001000
[10/27 16:17:28][INFO] train_test.py:  94: Evaluation: [Epoch   57] loss: 2.9426 accuracy: 0.1311
[10/27 16:20:41][INFO] train_test.py:  62: Training: [Epoch   58] loss: 2.9030 accuracy: 0.1748 lr: 0.001000
[10/27 16:20:50][INFO] train_test.py:  94: Evaluation: [Epoch   58] loss: 2.9525 accuracy: 0.1257
[10/27 16:24:02][INFO] train_test.py:  62: Training: [Epoch   59] loss: 2.9020 accuracy: 0.1766 lr: 0.001000
[10/27 16:24:10][INFO] train_test.py:  94: Evaluation: [Epoch   59] loss: 2.9516 accuracy: 0.1202
[10/27 16:27:22][INFO] train_test.py:  62: Training: [Epoch   60] loss: 2.9330 accuracy: 0.1434 lr: 0.001000
[10/27 16:27:30][INFO] train_test.py:  94: Evaluation: [Epoch   60] loss: 2.9416 accuracy: 0.1311
[10/27 16:30:42][INFO] train_test.py:  62: Training: [Epoch   61] loss: 2.8930 accuracy: 0.1853 lr: 0.001000
[10/27 16:30:51][INFO] train_test.py:  94: Evaluation: [Epoch   61] loss: 2.9447 accuracy: 0.1311
[10/27 16:34:02][INFO] train_test.py:  62: Training: [Epoch   62] loss: 2.9043 accuracy: 0.1713 lr: 0.001000
[10/27 16:34:10][INFO] train_test.py:  94: Evaluation: [Epoch   62] loss: 2.9504 accuracy: 0.1257
[10/27 16:37:23][INFO] train_test.py:  62: Training: [Epoch   63] loss: 2.9322 accuracy: 0.1469 lr: 0.001000
[10/27 16:37:31][INFO] train_test.py:  94: Evaluation: [Epoch   63] loss: 2.9514 accuracy: 0.1202
[10/27 16:40:42][INFO] train_test.py:  62: Training: [Epoch   64] loss: 2.9343 accuracy: 0.1451 lr: 0.001000
[10/27 16:40:51][INFO] train_test.py:  94: Evaluation: [Epoch   64] loss: 2.9581 accuracy: 0.1148
[10/27 16:44:03][INFO] train_test.py:  62: Training: [Epoch   65] loss: 2.9300 accuracy: 0.1486 lr: 0.001000
[10/27 16:44:11][INFO] train_test.py:  94: Evaluation: [Epoch   65] loss: 2.9573 accuracy: 0.1148
[10/27 16:47:23][INFO] train_test.py:  62: Training: [Epoch   66] loss: 2.9296 accuracy: 0.1486 lr: 0.001000
[10/27 16:47:31][INFO] train_test.py:  94: Evaluation: [Epoch   66] loss: 2.9598 accuracy: 0.1093
[10/27 16:50:57][INFO] train_test.py:  62: Training: [Epoch   67] loss: 2.9267 accuracy: 0.1521 lr: 0.001000
[10/27 16:51:05][INFO] train_test.py:  94: Evaluation: [Epoch   67] loss: 2.9743 accuracy: 0.1038
[10/27 16:54:16][INFO] train_test.py:  62: Training: [Epoch   68] loss: 2.9470 accuracy: 0.1311 lr: 0.001000
[10/27 16:54:25][INFO] train_test.py:  94: Evaluation: [Epoch   68] loss: 2.9635 accuracy: 0.1093
[10/27 16:57:35][INFO] train_test.py:  62: Training: [Epoch   69] loss: 2.9233 accuracy: 0.1538 lr: 0.001000
[10/27 16:57:44][INFO] train_test.py:  94: Evaluation: [Epoch   69] loss: 2.9641 accuracy: 0.1093
[10/27 17:00:55][INFO] train_test.py:  62: Training: [Epoch   70] loss: 2.9271 accuracy: 0.1521 lr: 0.001000
[10/27 17:01:03][INFO] train_test.py:  94: Evaluation: [Epoch   70] loss: 2.9631 accuracy: 0.1093
[10/27 17:04:15][INFO] train_test.py:  62: Training: [Epoch   71] loss: 2.9201 accuracy: 0.1573 lr: 0.001000
[10/27 17:04:24][INFO] train_test.py:  94: Evaluation: [Epoch   71] loss: 2.9702 accuracy: 0.1093
[10/27 17:07:35][INFO] train_test.py:  62: Training: [Epoch   72] loss: 2.9334 accuracy: 0.1451 lr: 0.001000
[10/27 17:07:44][INFO] train_test.py:  94: Evaluation: [Epoch   72] loss: 2.9423 accuracy: 0.1366
[10/27 17:10:56][INFO] train_test.py:  62: Training: [Epoch   73] loss: 2.9416 accuracy: 0.1364 lr: 0.001000
[10/27 17:11:04][INFO] train_test.py:  94: Evaluation: [Epoch   73] loss: 2.9260 accuracy: 0.1530
[10/27 17:14:16][INFO] train_test.py:  62: Training: [Epoch   74] loss: 2.9363 accuracy: 0.1416 lr: 0.001000
[10/27 17:14:24][INFO] train_test.py:  94: Evaluation: [Epoch   74] loss: 2.9303 accuracy: 0.1421
[10/27 17:17:36][INFO] train_test.py:  62: Training: [Epoch   75] loss: 2.9300 accuracy: 0.1486 lr: 0.001000
[10/27 17:17:44][INFO] train_test.py:  94: Evaluation: [Epoch   75] loss: 2.9151 accuracy: 0.1639
[10/27 17:20:56][INFO] train_test.py:  62: Training: [Epoch   76] loss: 2.9507 accuracy: 0.1276 lr: 0.001000
[10/27 17:21:05][INFO] train_test.py:  94: Evaluation: [Epoch   76] loss: 2.9597 accuracy: 0.1202
[10/27 17:24:16][INFO] train_test.py:  62: Training: [Epoch   77] loss: 2.9129 accuracy: 0.1643 lr: 0.001000
[10/27 17:24:24][INFO] train_test.py:  94: Evaluation: [Epoch   77] loss: 2.9410 accuracy: 0.1311
[10/27 17:27:36][INFO] train_test.py:  62: Training: [Epoch   78] loss: 2.9003 accuracy: 0.1766 lr: 0.001000
[10/27 17:27:44][INFO] train_test.py:  94: Evaluation: [Epoch   78] loss: 2.9350 accuracy: 0.1421
[10/27 17:30:56][INFO] train_test.py:  62: Training: [Epoch   79] loss: 2.9082 accuracy: 0.1713 lr: 0.001000
[10/27 17:31:04][INFO] train_test.py:  94: Evaluation: [Epoch   79] loss: 2.9274 accuracy: 0.1475
[10/27 17:34:16][INFO] train_test.py:  62: Training: [Epoch   80] loss: 2.8984 accuracy: 0.1801 lr: 0.001000
[10/27 17:34:24][INFO] train_test.py:  94: Evaluation: [Epoch   80] loss: 2.9272 accuracy: 0.1530
[10/27 17:37:36][INFO] train_test.py:  62: Training: [Epoch   81] loss: 2.8881 accuracy: 0.1888 lr: 0.001000
[10/27 17:37:44][INFO] train_test.py:  94: Evaluation: [Epoch   81] loss: 2.9263 accuracy: 0.1530
[10/27 17:40:56][INFO] train_test.py:  62: Training: [Epoch   82] loss: 2.8703 accuracy: 0.2098 lr: 0.001000
[10/27 17:41:05][INFO] train_test.py:  94: Evaluation: [Epoch   82] loss: 2.9136 accuracy: 0.1639
[10/27 17:44:16][INFO] train_test.py:  62: Training: [Epoch   83] loss: 2.8806 accuracy: 0.1976 lr: 0.001000
[10/27 17:44:24][INFO] train_test.py:  94: Evaluation: [Epoch   83] loss: 2.9372 accuracy: 0.1421
[10/27 17:47:36][INFO] train_test.py:  62: Training: [Epoch   84] loss: 2.9185 accuracy: 0.1591 lr: 0.001000
[10/27 17:47:44][INFO] train_test.py:  94: Evaluation: [Epoch   84] loss: 2.9750 accuracy: 0.1038
[10/27 17:50:56][INFO] train_test.py:  62: Training: [Epoch   85] loss: 2.9370 accuracy: 0.1399 lr: 0.001000
[10/27 17:51:04][INFO] train_test.py:  94: Evaluation: [Epoch   85] loss: 2.9358 accuracy: 0.1366
[10/27 17:54:16][INFO] train_test.py:  62: Training: [Epoch   86] loss: 2.9213 accuracy: 0.1556 lr: 0.001000
[10/27 17:54:24][INFO] train_test.py:  94: Evaluation: [Epoch   86] loss: 2.9289 accuracy: 0.1475
[10/27 17:57:34][INFO] train_test.py:  62: Training: [Epoch   87] loss: 2.9246 accuracy: 0.1521 lr: 0.001000
[10/27 17:57:42][INFO] train_test.py:  94: Evaluation: [Epoch   87] loss: 2.9144 accuracy: 0.1585
[10/27 18:00:52][INFO] train_test.py:  62: Training: [Epoch   88] loss: 2.9224 accuracy: 0.1521 lr: 0.001000
[10/27 18:01:00][INFO] train_test.py:  94: Evaluation: [Epoch   88] loss: 2.9136 accuracy: 0.1585
[10/27 18:04:09][INFO] train_test.py:  62: Training: [Epoch   89] loss: 2.9075 accuracy: 0.1713 lr: 0.001000
[10/27 18:04:17][INFO] train_test.py:  94: Evaluation: [Epoch   89] loss: 2.9283 accuracy: 0.1421
[10/27 18:07:27][INFO] train_test.py:  62: Training: [Epoch   90] loss: 2.9085 accuracy: 0.1696 lr: 0.001000
[10/27 18:07:35][INFO] train_test.py:  94: Evaluation: [Epoch   90] loss: 2.9084 accuracy: 0.1585
[10/27 18:10:45][INFO] train_test.py:  62: Training: [Epoch   91] loss: 2.8886 accuracy: 0.1906 lr: 0.001000
[10/27 18:10:53][INFO] train_test.py:  94: Evaluation: [Epoch   91] loss: 2.9138 accuracy: 0.1639
[10/27 18:14:02][INFO] train_test.py:  62: Training: [Epoch   92] loss: 2.8993 accuracy: 0.1783 lr: 0.001000
[10/27 18:14:10][INFO] train_test.py:  94: Evaluation: [Epoch   92] loss: 2.9266 accuracy: 0.1475
[10/27 18:17:20][INFO] train_test.py:  62: Training: [Epoch   93] loss: 2.9054 accuracy: 0.1731 lr: 0.001000
[10/27 18:17:28][INFO] train_test.py:  94: Evaluation: [Epoch   93] loss: 2.9312 accuracy: 0.1475
[10/27 18:20:38][INFO] train_test.py:  62: Training: [Epoch   94] loss: 2.9070 accuracy: 0.1713 lr: 0.001000
[10/27 18:20:46][INFO] train_test.py:  94: Evaluation: [Epoch   94] loss: 2.9293 accuracy: 0.1585
[10/27 18:23:56][INFO] train_test.py:  62: Training: [Epoch   95] loss: 2.9036 accuracy: 0.1748 lr: 0.001000
[10/27 18:24:04][INFO] train_test.py:  94: Evaluation: [Epoch   95] loss: 2.9528 accuracy: 0.1257
[10/27 18:27:14][INFO] train_test.py:  62: Training: [Epoch   96] loss: 2.8927 accuracy: 0.1818 lr: 0.001000
[10/27 18:27:22][INFO] train_test.py:  94: Evaluation: [Epoch   96] loss: 2.9347 accuracy: 0.1366
[10/27 18:30:32][INFO] train_test.py:  62: Training: [Epoch   97] loss: 2.8722 accuracy: 0.2063 lr: 0.001000
[10/27 18:30:40][INFO] train_test.py:  94: Evaluation: [Epoch   97] loss: 2.9438 accuracy: 0.1366
[10/27 18:33:49][INFO] train_test.py:  62: Training: [Epoch   98] loss: 2.8679 accuracy: 0.2080 lr: 0.001000
[10/27 18:33:57][INFO] train_test.py:  94: Evaluation: [Epoch   98] loss: 2.9313 accuracy: 0.1366
[10/27 18:37:07][INFO] train_test.py:  62: Training: [Epoch   99] loss: 2.8591 accuracy: 0.2203 lr: 0.001000
[10/27 18:37:15][INFO] train_test.py:  94: Evaluation: [Epoch   99] loss: 2.9290 accuracy: 0.1475
[10/27 18:40:25][INFO] train_test.py:  62: Training: [Epoch  100] loss: 2.8600 accuracy: 0.2168 lr: 0.001000
[10/27 18:40:33][INFO] train_test.py:  94: Evaluation: [Epoch  100] loss: 2.9217 accuracy: 0.1585
[10/27 18:40:33][INFO] train_test.py: 159: Trained with 100 epochs, lr = 0.001, batchsize = 2, momentum = 0.5 with max validation accuracy of 0.30 done in 5:51:13
[10/29 12:22:51][INFO] run.py:  92: Train with configs:
[10/29 12:22:51][INFO] run.py:  93: 
{ AUGMENTATION      }-> False
{ BATCH_SIZE        }-> 2
{ DATA_JSON         }-> data.json
{ DATA_SEPARATOR    }-> ,
{ DECAY             }-> 0.005
{ DEVICES           }-> [0]
{ EPOCHS            }-> 100
{ FLOW              }-> DeepFlow
{ GPU               }-> .
{ LABEL_DICT        }-> label_dict.json
{ LOAD              }-> False
{ LR                }-> 0.001
{ MODE              }-> train
{ MODEL_NAME        }-> twin
{ MODEL_TYPE        }-> twin
{ MOMENTUM          }-> 0.5
{ NESTEROV          }-> True
{ NORM              }-> normal
{ NUM_CLASSES       }-> 20
{ NUM_WORKERS       }-> 8
{ N_GPU             }-> 1
{ OUTPUT_DIR        }-> .
{ OUTPUT_FILE       }-> ./pred.txt
{ PATH_DATA         }-> data
{ PATH_MODEL        }-> ./twin
{ PATH_PROCESSED_DATA }-> data_processed
{ SEED              }-> 31
{ SIZE_DATA         }-> [100 120 120]
{ VERSION           }-> 31
{ dtype             }-> <class 'torch.FloatTensor'>

[10/29 12:23:45][INFO] run.py:  92: Train with configs:
[10/29 12:23:45][INFO] run.py:  93: 
{ AUGMENTATION      }-> False
{ BATCH_SIZE        }-> 10
{ DATA_JSON         }-> data.json
{ DATA_SEPARATOR    }-> ,
{ DECAY             }-> 0.005
{ DEVICES           }-> [0]
{ EPOCHS            }-> 100
{ FLOW              }-> DeepFlow
{ GPU               }-> .
{ LABEL_DICT        }-> label_dict.json
{ LOAD              }-> False
{ LR                }-> 0.001
{ MODE              }-> train
{ MODEL_NAME        }-> twin
{ MODEL_TYPE        }-> twin
{ MOMENTUM          }-> 0.5
{ NESTEROV          }-> True
{ NORM              }-> normal
{ NUM_CLASSES       }-> 20
{ NUM_WORKERS       }-> 8
{ N_GPU             }-> 1
{ OUTPUT_DIR        }-> .
{ OUTPUT_FILE       }-> ./pred.txt
{ PATH_DATA         }-> data
{ PATH_MODEL        }-> ./twin
{ PATH_PROCESSED_DATA }-> data_processed
{ SEED              }-> 31
{ SIZE_DATA         }-> [100 120 120]
{ VERSION           }-> 31
{ dtype             }-> <class 'torch.FloatTensor'>

[10/29 12:28:27][INFO] run.py:  92: Train with configs:
[10/29 12:28:27][INFO] run.py:  93: 
{ AUGMENTATION      }-> False
{ BATCH_SIZE        }-> 10
{ DATA_JSON         }-> data.json
{ DATA_SEPARATOR    }-> ,
{ DECAY             }-> 0.005
{ DEVICES           }-> [0, 1]
{ EPOCHS            }-> 100
{ FLOW              }-> DeepFlow
{ GPU               }-> 0,1
{ LABEL_DICT        }-> label_dict.json
{ LOAD              }-> False
{ LR                }-> 0.001
{ MODE              }-> train
{ MODEL_NAME        }-> twin
{ MODEL_TYPE        }-> twin
{ MOMENTUM          }-> 0.5
{ NESTEROV          }-> True
{ NORM              }-> normal
{ NUM_CLASSES       }-> 20
{ NUM_WORKERS       }-> 8
{ N_GPU             }-> 2
{ OUTPUT_DIR        }-> .
{ OUTPUT_FILE       }-> ./pred.txt
{ PATH_DATA         }-> data
{ PATH_MODEL        }-> ./twin
{ PATH_PROCESSED_DATA }-> data_processed
{ SEED              }-> 31
{ SIZE_DATA         }-> [100 120 120]
{ VERSION           }-> 31
{ dtype             }-> <class 'torch.cuda.FloatTensor'>

[10/29 12:30:17][INFO] run.py:  92: Train with configs:
[10/29 12:30:17][INFO] run.py:  93: 
{ AUGMENTATION      }-> False
{ BATCH_SIZE        }-> 10
{ DATA_JSON         }-> data.json
{ DATA_SEPARATOR    }-> ,
{ DECAY             }-> 0.005
{ DEVICES           }-> [0, 1]
{ EPOCHS            }-> 100
{ FLOW              }-> DeepFlow
{ GPU               }-> 0,1
{ LABEL_DICT        }-> label_dict.json
{ LOAD              }-> False
{ LR                }-> 0.001
{ MODE              }-> train
{ MODEL_NAME        }-> twin
{ MODEL_TYPE        }-> twin
{ MOMENTUM          }-> 0.5
{ NESTEROV          }-> True
{ NORM              }-> normal
{ NUM_CLASSES       }-> 20
{ NUM_WORKERS       }-> 8
{ N_GPU             }-> 2
{ OUTPUT_DIR        }-> .
{ OUTPUT_FILE       }-> ./pred.txt
{ PATH_DATA         }-> data
{ PATH_MODEL        }-> ./twin
{ PATH_PROCESSED_DATA }-> data_processed
{ SEED              }-> 31
{ SIZE_DATA         }-> [100 120 120]
{ VERSION           }-> 31
{ dtype             }-> <class 'torch.cuda.FloatTensor'>

[10/29 12:34:01][INFO] train_test.py:  66: Training: [Epoch    1] loss: 2.9957 accuracy: 0.0262 lr: 0.001000
[10/29 12:35:51][INFO] run.py:  92: Train with configs:
[10/29 12:35:51][INFO] run.py:  93: 
{ AUGMENTATION      }-> False
{ BATCH_SIZE        }-> 8
{ DATA_JSON         }-> data.json
{ DATA_SEPARATOR    }-> ,
{ DECAY             }-> 0.005
{ DEVICES           }-> [0, 1]
{ EPOCHS            }-> 100
{ FLOW              }-> DeepFlow
{ GPU               }-> 0,1
{ LABEL_DICT        }-> label_dict.json
{ LOAD              }-> False
{ LR                }-> 0.001
{ MODE              }-> train
{ MODEL_NAME        }-> twin
{ MODEL_TYPE        }-> twin
{ MOMENTUM          }-> 0.5
{ NESTEROV          }-> True
{ NORM              }-> normal
{ NUM_CLASSES       }-> 20
{ NUM_WORKERS       }-> 8
{ N_GPU             }-> 2
{ OUTPUT_DIR        }-> .
{ OUTPUT_FILE       }-> ./pred.txt
{ PATH_DATA         }-> data
{ PATH_MODEL        }-> ./twin
{ PATH_PROCESSED_DATA }-> data_processed
{ SEED              }-> 31
{ SIZE_DATA         }-> [100 120 120]
{ VERSION           }-> 31
{ dtype             }-> <class 'torch.cuda.FloatTensor'>

[10/29 12:37:31][INFO] train_test.py:  66: Training: [Epoch    1] loss: 2.9957 accuracy: 0.0262 lr: 0.001000
[10/29 12:38:13][INFO] run.py:  92: Train with configs:
[10/29 12:38:13][INFO] run.py:  93: 
{ AUGMENTATION      }-> False
{ BATCH_SIZE        }-> 8
{ DATA_JSON         }-> data.json
{ DATA_SEPARATOR    }-> ,
{ DECAY             }-> 0.005
{ DEVICES           }-> [0, 1]
{ EPOCHS            }-> 100
{ FLOW              }-> DeepFlow
{ GPU               }-> 0,1
{ LABEL_DICT        }-> label_dict.json
{ LOAD              }-> False
{ LR                }-> 0.001
{ MODE              }-> train
{ MODEL_NAME        }-> twin
{ MODEL_TYPE        }-> twin
{ MOMENTUM          }-> 0.5
{ NESTEROV          }-> True
{ NORM              }-> normal
{ NUM_CLASSES       }-> 20
{ NUM_WORKERS       }-> 8
{ N_GPU             }-> 2
{ OUTPUT_DIR        }-> .
{ OUTPUT_FILE       }-> ./pred.txt
{ PATH_DATA         }-> data
{ PATH_MODEL        }-> ./twin
{ PATH_PROCESSED_DATA }-> data_processed
{ SEED              }-> 31
{ SIZE_DATA         }-> [100 120 120]
{ VERSION           }-> 31
{ dtype             }-> <class 'torch.cuda.FloatTensor'>

[10/29 12:39:53][INFO] train_test.py:  66: Training: [Epoch    1] loss: 2.9957 accuracy: 0.0262 lr: 0.001000
[10/29 12:40:33][INFO] run.py:  92: Train with configs:
[10/29 12:40:33][INFO] run.py:  93: 
{ AUGMENTATION      }-> False
{ BATCH_SIZE        }-> 7
{ DATA_JSON         }-> data.json
{ DATA_SEPARATOR    }-> ,
{ DECAY             }-> 0.005
{ DEVICES           }-> [0, 1]
{ EPOCHS            }-> 100
{ FLOW              }-> DeepFlow
{ GPU               }-> 0,1
{ LABEL_DICT        }-> label_dict.json
{ LOAD              }-> False
{ LR                }-> 0.001
{ MODE              }-> train
{ MODEL_NAME        }-> twin
{ MODEL_TYPE        }-> twin
{ MOMENTUM          }-> 0.5
{ NESTEROV          }-> True
{ NORM              }-> normal
{ NUM_CLASSES       }-> 20
{ NUM_WORKERS       }-> 8
{ N_GPU             }-> 2
{ OUTPUT_DIR        }-> .
{ OUTPUT_FILE       }-> ./pred.txt
{ PATH_DATA         }-> data
{ PATH_MODEL        }-> ./twin
{ PATH_PROCESSED_DATA }-> data_processed
{ SEED              }-> 31
{ SIZE_DATA         }-> [100 120 120]
{ VERSION           }-> 31
{ dtype             }-> <class 'torch.cuda.FloatTensor'>

[10/29 12:42:27][INFO] run.py:  92: Train with configs:
[10/29 12:42:27][INFO] run.py:  93: 
{ AUGMENTATION      }-> False
{ BATCH_SIZE        }-> 10
{ DATA_JSON         }-> data.json
{ DATA_SEPARATOR    }-> ,
{ DECAY             }-> 0.005
{ DEVICES           }-> [0, 1]
{ EPOCHS            }-> 100
{ FLOW              }-> DeepFlow
{ GPU               }-> 0,1
{ LABEL_DICT        }-> label_dict.json
{ LOAD              }-> False
{ LR                }-> 0.001
{ MODE              }-> train
{ MODEL_NAME        }-> twin
{ MODEL_TYPE        }-> twin
{ MOMENTUM          }-> 0.5
{ NESTEROV          }-> True
{ NORM              }-> normal
{ NUM_CLASSES       }-> 20
{ NUM_WORKERS       }-> 8
{ N_GPU             }-> 2
{ OUTPUT_DIR        }-> .
{ OUTPUT_FILE       }-> ./pred.txt
{ PATH_DATA         }-> data
{ PATH_MODEL        }-> ./twin
{ PATH_PROCESSED_DATA }-> data_processed
{ SEED              }-> 31
{ SIZE_DATA         }-> [100 120 120]
{ VERSION           }-> 31
{ dtype             }-> <class 'torch.cuda.FloatTensor'>

[10/29 12:43:54][INFO] train_test.py:  66: Training: [Epoch    1] loss: 2.9957 accuracy: 0.0262 lr: 0.001000
[10/29 12:44:22][INFO] train_test.py: 101: Evaluation: [Epoch    1] loss: 2.9957 accuracy: 0.0328
[10/29 12:45:57][INFO] train_test.py:  66: Training: [Epoch    2] loss: 2.9957 accuracy: 0.0262 lr: 0.001000
[10/29 12:46:20][INFO] train_test.py: 101: Evaluation: [Epoch    2] loss: 2.9957 accuracy: 0.0328
[10/29 12:47:54][INFO] train_test.py:  66: Training: [Epoch    3] loss: 2.9957 accuracy: 0.0262 lr: 0.001000
[10/29 12:48:17][INFO] train_test.py: 101: Evaluation: [Epoch    3] loss: 2.9957 accuracy: 0.0328
[10/29 12:49:51][INFO] train_test.py:  66: Training: [Epoch    4] loss: 2.9956 accuracy: 0.0315 lr: 0.001000
[10/29 12:50:14][INFO] train_test.py: 101: Evaluation: [Epoch    4] loss: 2.9956 accuracy: 0.0328
[10/29 12:51:49][INFO] train_test.py:  66: Training: [Epoch    5] loss: 2.9956 accuracy: 0.0402 lr: 0.001000
[10/29 12:52:12][INFO] train_test.py: 101: Evaluation: [Epoch    5] loss: 2.9956 accuracy: 0.0437
[10/29 12:53:47][INFO] train_test.py:  66: Training: [Epoch    6] loss: 2.9955 accuracy: 0.0507 lr: 0.001000
[10/29 12:54:10][INFO] train_test.py: 101: Evaluation: [Epoch    6] loss: 2.9956 accuracy: 0.0546
[10/29 12:55:44][INFO] train_test.py:  66: Training: [Epoch    7] loss: 2.9955 accuracy: 0.0577 lr: 0.001000
[10/29 12:56:07][INFO] train_test.py: 101: Evaluation: [Epoch    7] loss: 2.9955 accuracy: 0.0765
[10/29 12:57:41][INFO] train_test.py:  66: Training: [Epoch    8] loss: 2.9954 accuracy: 0.0699 lr: 0.001000
[10/29 12:58:05][INFO] train_test.py: 101: Evaluation: [Epoch    8] loss: 2.9955 accuracy: 0.0765
[10/29 12:59:40][INFO] train_test.py:  66: Training: [Epoch    9] loss: 2.9954 accuracy: 0.0682 lr: 0.001000
[10/29 13:00:03][INFO] train_test.py: 101: Evaluation: [Epoch    9] loss: 2.9954 accuracy: 0.0765
[10/29 13:01:39][INFO] train_test.py:  66: Training: [Epoch   10] loss: 2.9953 accuracy: 0.0647 lr: 0.001000
[10/29 13:02:02][INFO] train_test.py: 101: Evaluation: [Epoch   10] loss: 2.9954 accuracy: 0.0820
[10/29 13:03:37][INFO] train_test.py:  66: Training: [Epoch   11] loss: 2.9952 accuracy: 0.0734 lr: 0.001000
[10/29 13:04:01][INFO] train_test.py: 101: Evaluation: [Epoch   11] loss: 2.9953 accuracy: 0.0820
[10/29 13:05:36][INFO] train_test.py:  66: Training: [Epoch   12] loss: 2.9951 accuracy: 0.0857 lr: 0.001000
[10/29 13:05:59][INFO] train_test.py: 101: Evaluation: [Epoch   12] loss: 2.9952 accuracy: 0.0874
[10/29 13:07:34][INFO] train_test.py:  66: Training: [Epoch   13] loss: 2.9949 accuracy: 0.1014 lr: 0.001000
[10/29 13:07:58][INFO] train_test.py: 101: Evaluation: [Epoch   13] loss: 2.9951 accuracy: 0.1257
[10/29 13:09:32][INFO] train_test.py:  66: Training: [Epoch   14] loss: 2.9948 accuracy: 0.1276 lr: 0.001000
[10/29 13:09:55][INFO] train_test.py: 101: Evaluation: [Epoch   14] loss: 2.9949 accuracy: 0.1311
[10/29 13:11:29][INFO] train_test.py:  66: Training: [Epoch   15] loss: 2.9945 accuracy: 0.1294 lr: 0.001000
[10/29 13:11:52][INFO] train_test.py: 101: Evaluation: [Epoch   15] loss: 2.9947 accuracy: 0.1366
[10/29 13:13:27][INFO] train_test.py:  66: Training: [Epoch   16] loss: 2.9942 accuracy: 0.1224 lr: 0.001000
[10/29 13:13:50][INFO] train_test.py: 101: Evaluation: [Epoch   16] loss: 2.9944 accuracy: 0.0984
[10/29 13:15:25][INFO] train_test.py:  66: Training: [Epoch   17] loss: 2.9937 accuracy: 0.1014 lr: 0.001000
[10/29 13:15:49][INFO] train_test.py: 101: Evaluation: [Epoch   17] loss: 2.9940 accuracy: 0.1148
[10/29 13:17:23][INFO] train_test.py:  66: Training: [Epoch   18] loss: 2.9930 accuracy: 0.0979 lr: 0.001000
[10/29 13:17:47][INFO] train_test.py: 101: Evaluation: [Epoch   18] loss: 2.9933 accuracy: 0.0984
[10/29 13:19:22][INFO] train_test.py:  66: Training: [Epoch   19] loss: 2.9916 accuracy: 0.0944 lr: 0.001000
[10/29 13:19:46][INFO] train_test.py: 101: Evaluation: [Epoch   19] loss: 2.9919 accuracy: 0.0874
[10/29 13:21:20][INFO] train_test.py:  66: Training: [Epoch   20] loss: 2.9893 accuracy: 0.0944 lr: 0.001000
[10/29 13:21:43][INFO] train_test.py: 101: Evaluation: [Epoch   20] loss: 2.9891 accuracy: 0.0820
[10/29 13:23:17][INFO] train_test.py:  66: Training: [Epoch   21] loss: 2.9831 accuracy: 0.0909 lr: 0.001000
[10/29 13:23:41][INFO] train_test.py: 101: Evaluation: [Epoch   21] loss: 2.9806 accuracy: 0.0820
[10/29 13:25:16][INFO] train_test.py:  66: Training: [Epoch   22] loss: 2.9682 accuracy: 0.0909 lr: 0.001000
[10/29 13:25:40][INFO] train_test.py: 101: Evaluation: [Epoch   22] loss: 2.9683 accuracy: 0.0820
[10/29 13:27:15][INFO] train_test.py:  66: Training: [Epoch   23] loss: 2.9587 accuracy: 0.1119 lr: 0.001000
[10/29 13:27:38][INFO] train_test.py: 101: Evaluation: [Epoch   23] loss: 2.9592 accuracy: 0.1311
[10/29 13:29:14][INFO] train_test.py:  66: Training: [Epoch   24] loss: 2.9458 accuracy: 0.1241 lr: 0.001000
[10/29 13:29:37][INFO] train_test.py: 101: Evaluation: [Epoch   24] loss: 2.9494 accuracy: 0.1257
[10/29 13:31:18][INFO] train_test.py:  66: Training: [Epoch   25] loss: 2.9386 accuracy: 0.1399 lr: 0.001000
[10/29 13:31:42][INFO] train_test.py: 101: Evaluation: [Epoch   25] loss: 2.9544 accuracy: 0.0984
[10/29 13:33:01][INFO] train_test.py:  66: Training: [Epoch   26] loss: 2.9256 accuracy: 0.1469 lr: 0.001000
[10/29 13:33:24][INFO] train_test.py: 101: Evaluation: [Epoch   26] loss: 2.9263 accuracy: 0.1530
[10/29 13:34:59][INFO] train_test.py:  66: Training: [Epoch   27] loss: 2.8962 accuracy: 0.1608 lr: 0.001000
[10/29 13:35:23][INFO] train_test.py: 101: Evaluation: [Epoch   27] loss: 2.9429 accuracy: 0.1202
[10/29 13:36:42][INFO] train_test.py:  66: Training: [Epoch   28] loss: 2.9045 accuracy: 0.1783 lr: 0.001000
[10/29 13:37:05][INFO] train_test.py: 101: Evaluation: [Epoch   28] loss: 2.9463 accuracy: 0.1311
[10/29 13:38:24][INFO] train_test.py:  66: Training: [Epoch   29] loss: 2.8767 accuracy: 0.1993 lr: 0.001000
[10/29 13:38:48][INFO] train_test.py: 101: Evaluation: [Epoch   29] loss: 2.9014 accuracy: 0.1639
[10/29 13:40:23][INFO] train_test.py:  66: Training: [Epoch   30] loss: 2.8587 accuracy: 0.2238 lr: 0.001000
[10/29 13:40:46][INFO] train_test.py: 101: Evaluation: [Epoch   30] loss: 2.9079 accuracy: 0.1694
[10/29 13:42:06][INFO] train_test.py:  66: Training: [Epoch   31] loss: 2.8952 accuracy: 0.1853 lr: 0.001000
[10/29 13:42:29][INFO] train_test.py: 101: Evaluation: [Epoch   31] loss: 2.9702 accuracy: 0.0929
[10/29 13:43:48][INFO] train_test.py:  66: Training: [Epoch   32] loss: 2.8954 accuracy: 0.1783 lr: 0.001000
[10/29 13:44:12][INFO] train_test.py: 101: Evaluation: [Epoch   32] loss: 2.8829 accuracy: 0.1913
[10/29 13:45:46][INFO] train_test.py:  66: Training: [Epoch   33] loss: 2.8394 accuracy: 0.2255 lr: 0.001000
[10/29 13:46:09][INFO] train_test.py: 101: Evaluation: [Epoch   33] loss: 2.9167 accuracy: 0.1585
[10/29 13:47:29][INFO] train_test.py:  66: Training: [Epoch   34] loss: 2.8113 accuracy: 0.2622 lr: 0.001000
[10/29 13:47:52][INFO] train_test.py: 101: Evaluation: [Epoch   34] loss: 2.8361 accuracy: 0.2350
[10/29 13:49:27][INFO] train_test.py:  66: Training: [Epoch   35] loss: 2.7714 accuracy: 0.3059 lr: 0.001000
[10/29 13:49:50][INFO] train_test.py: 101: Evaluation: [Epoch   35] loss: 2.8740 accuracy: 0.2022
[10/29 13:51:10][INFO] train_test.py:  66: Training: [Epoch   36] loss: 2.8318 accuracy: 0.2500 lr: 0.001000
[10/29 13:51:33][INFO] train_test.py: 101: Evaluation: [Epoch   36] loss: 2.8905 accuracy: 0.1803
[10/29 13:52:53][INFO] train_test.py:  66: Training: [Epoch   37] loss: 2.7973 accuracy: 0.2780 lr: 0.001000
[10/29 13:53:16][INFO] train_test.py: 101: Evaluation: [Epoch   37] loss: 2.8588 accuracy: 0.2295
[10/29 13:54:35][INFO] train_test.py:  66: Training: [Epoch   38] loss: 2.7614 accuracy: 0.3234 lr: 0.001000
[10/29 13:54:59][INFO] train_test.py: 101: Evaluation: [Epoch   38] loss: 2.9069 accuracy: 0.1694
[10/29 13:56:18][INFO] train_test.py:  66: Training: [Epoch   39] loss: 2.7859 accuracy: 0.2867 lr: 0.001000
[10/29 13:56:41][INFO] train_test.py: 101: Evaluation: [Epoch   39] loss: 2.8575 accuracy: 0.2131
[10/29 13:58:01][INFO] train_test.py:  66: Training: [Epoch   40] loss: 2.7402 accuracy: 0.3374 lr: 0.001000
[10/29 13:58:24][INFO] train_test.py: 101: Evaluation: [Epoch   40] loss: 2.8195 accuracy: 0.2459
[10/29 14:00:00][INFO] train_test.py:  66: Training: [Epoch   41] loss: 2.7277 accuracy: 0.3479 lr: 0.001000
[10/29 14:00:23][INFO] train_test.py: 101: Evaluation: [Epoch   41] loss: 2.8189 accuracy: 0.2568
[10/29 14:01:58][INFO] train_test.py:  66: Training: [Epoch   42] loss: 2.7118 accuracy: 0.3636 lr: 0.001000
[10/29 14:02:22][INFO] train_test.py: 101: Evaluation: [Epoch   42] loss: 2.8069 accuracy: 0.2678
[10/29 14:03:58][INFO] train_test.py:  66: Training: [Epoch   43] loss: 2.7152 accuracy: 0.3671 lr: 0.001000
[10/29 14:04:21][INFO] train_test.py: 101: Evaluation: [Epoch   43] loss: 2.7947 accuracy: 0.2787
[10/29 14:05:55][INFO] train_test.py:  66: Training: [Epoch   44] loss: 2.6978 accuracy: 0.3881 lr: 0.001000
[10/29 14:06:19][INFO] train_test.py: 101: Evaluation: [Epoch   44] loss: 2.7658 accuracy: 0.3060
[10/29 14:07:54][INFO] train_test.py:  66: Training: [Epoch   45] loss: 2.6717 accuracy: 0.4091 lr: 0.001000
[10/29 14:08:17][INFO] train_test.py: 101: Evaluation: [Epoch   45] loss: 2.7578 accuracy: 0.3279
[10/29 14:09:52][INFO] train_test.py:  66: Training: [Epoch   46] loss: 2.6413 accuracy: 0.4318 lr: 0.001000
[10/29 14:10:15][INFO] train_test.py: 101: Evaluation: [Epoch   46] loss: 2.7175 accuracy: 0.3825
[10/29 14:11:50][INFO] train_test.py:  66: Training: [Epoch   47] loss: 2.6463 accuracy: 0.4441 lr: 0.001000
[10/29 14:12:14][INFO] train_test.py: 101: Evaluation: [Epoch   47] loss: 2.7193 accuracy: 0.3716
[10/29 14:13:33][INFO] train_test.py:  66: Training: [Epoch   48] loss: 2.6225 accuracy: 0.4580 lr: 0.001000
[10/29 14:13:56][INFO] train_test.py: 101: Evaluation: [Epoch   48] loss: 2.7144 accuracy: 0.3661
[10/29 14:15:32][INFO] train_test.py:  66: Training: [Epoch   49] loss: 2.5987 accuracy: 0.4808 lr: 0.001000
[10/29 14:15:55][INFO] train_test.py: 101: Evaluation: [Epoch   49] loss: 2.7154 accuracy: 0.3497
[10/29 14:17:14][INFO] train_test.py:  66: Training: [Epoch   50] loss: 2.5919 accuracy: 0.4825 lr: 0.001000
[10/29 14:17:38][INFO] train_test.py: 101: Evaluation: [Epoch   50] loss: 2.6850 accuracy: 0.3989
[10/29 14:19:13][INFO] train_test.py:  66: Training: [Epoch   51] loss: 2.5871 accuracy: 0.4825 lr: 0.001000
[10/29 14:19:36][INFO] train_test.py: 101: Evaluation: [Epoch   51] loss: 2.6853 accuracy: 0.3989
[10/29 14:20:55][INFO] train_test.py:  66: Training: [Epoch   52] loss: 2.5864 accuracy: 0.4895 lr: 0.001000
[10/29 14:21:19][INFO] train_test.py: 101: Evaluation: [Epoch   52] loss: 2.6841 accuracy: 0.3989
[10/29 14:22:52][INFO] train_test.py:  66: Training: [Epoch   53] loss: 2.5919 accuracy: 0.4843 lr: 0.001000
[10/29 14:23:16][INFO] train_test.py: 101: Evaluation: [Epoch   53] loss: 2.7185 accuracy: 0.3497
[10/29 14:24:35][INFO] train_test.py:  66: Training: [Epoch   54] loss: 2.5876 accuracy: 0.4843 lr: 0.001000
[10/29 14:24:58][INFO] train_test.py: 101: Evaluation: [Epoch   54] loss: 2.7098 accuracy: 0.3661
[10/29 14:26:18][INFO] train_test.py:  66: Training: [Epoch   55] loss: 2.5904 accuracy: 0.4860 lr: 0.001000
[10/29 14:26:41][INFO] train_test.py: 101: Evaluation: [Epoch   55] loss: 2.7166 accuracy: 0.3607
[10/29 14:28:01][INFO] train_test.py:  66: Training: [Epoch   56] loss: 2.5828 accuracy: 0.4913 lr: 0.001000
[10/29 14:28:24][INFO] train_test.py: 101: Evaluation: [Epoch   56] loss: 2.7030 accuracy: 0.3825
[10/29 14:29:43][INFO] train_test.py:  66: Training: [Epoch   57] loss: 2.5824 accuracy: 0.4913 lr: 0.001000
[10/29 14:30:07][INFO] train_test.py: 101: Evaluation: [Epoch   57] loss: 2.6998 accuracy: 0.3825
[10/29 14:31:26][INFO] train_test.py:  66: Training: [Epoch   58] loss: 2.5753 accuracy: 0.4913 lr: 0.001000
[10/29 14:31:49][INFO] train_test.py: 101: Evaluation: [Epoch   58] loss: 2.6997 accuracy: 0.3825
[10/29 14:33:08][INFO] train_test.py:  66: Training: [Epoch   59] loss: 2.5817 accuracy: 0.4913 lr: 0.001000
[10/29 14:33:32][INFO] train_test.py: 101: Evaluation: [Epoch   59] loss: 2.6989 accuracy: 0.3880
[10/29 14:34:51][INFO] train_test.py:  66: Training: [Epoch   60] loss: 2.5882 accuracy: 0.4913 lr: 0.001000
[10/29 14:35:15][INFO] train_test.py: 101: Evaluation: [Epoch   60] loss: 2.6986 accuracy: 0.3825
[10/29 14:36:34][INFO] train_test.py:  66: Training: [Epoch   61] loss: 2.5813 accuracy: 0.4913 lr: 0.001000
[10/29 14:36:57][INFO] train_test.py: 101: Evaluation: [Epoch   61] loss: 2.6961 accuracy: 0.3825
[10/29 14:38:17][INFO] train_test.py:  66: Training: [Epoch   62] loss: 2.5878 accuracy: 0.4913 lr: 0.001000
[10/29 14:38:40][INFO] train_test.py: 101: Evaluation: [Epoch   62] loss: 2.6963 accuracy: 0.3880
[10/29 14:40:00][INFO] train_test.py:  66: Training: [Epoch   63] loss: 2.5808 accuracy: 0.4913 lr: 0.001000
[10/29 14:40:23][INFO] train_test.py: 101: Evaluation: [Epoch   63] loss: 2.6958 accuracy: 0.3825
[10/29 14:41:42][INFO] train_test.py:  66: Training: [Epoch   64] loss: 2.5739 accuracy: 0.4913 lr: 0.001000
[10/29 14:42:06][INFO] train_test.py: 101: Evaluation: [Epoch   64] loss: 2.6989 accuracy: 0.3825
[10/29 14:43:25][INFO] train_test.py:  66: Training: [Epoch   65] loss: 2.5737 accuracy: 0.4913 lr: 0.001000
[10/29 14:43:49][INFO] train_test.py: 101: Evaluation: [Epoch   65] loss: 2.6979 accuracy: 0.3825
[10/29 14:45:08][INFO] train_test.py:  66: Training: [Epoch   66] loss: 2.5736 accuracy: 0.4913 lr: 0.001000
[10/29 14:45:32][INFO] train_test.py: 101: Evaluation: [Epoch   66] loss: 2.6932 accuracy: 0.3880
[10/29 14:46:51][INFO] train_test.py:  66: Training: [Epoch   67] loss: 2.5873 accuracy: 0.4913 lr: 0.001000
[10/29 14:47:14][INFO] train_test.py: 101: Evaluation: [Epoch   67] loss: 2.6925 accuracy: 0.3880
[10/29 14:48:33][INFO] train_test.py:  66: Training: [Epoch   68] loss: 2.5870 accuracy: 0.4913 lr: 0.001000
[10/29 14:48:57][INFO] train_test.py: 101: Evaluation: [Epoch   68] loss: 2.6938 accuracy: 0.3880
[10/29 14:50:16][INFO] train_test.py:  66: Training: [Epoch   69] loss: 2.5802 accuracy: 0.4913 lr: 0.001000
[10/29 14:50:39][INFO] train_test.py: 101: Evaluation: [Epoch   69] loss: 2.6967 accuracy: 0.3880
[10/29 14:51:58][INFO] train_test.py:  66: Training: [Epoch   70] loss: 2.5732 accuracy: 0.4913 lr: 0.001000
[10/29 14:52:22][INFO] train_test.py: 101: Evaluation: [Epoch   70] loss: 2.6951 accuracy: 0.3825
[10/29 14:53:41][INFO] train_test.py:  66: Training: [Epoch   71] loss: 2.5864 accuracy: 0.4913 lr: 0.001000
[10/29 14:54:05][INFO] train_test.py: 101: Evaluation: [Epoch   71] loss: 2.6920 accuracy: 0.3934
[10/29 14:55:24][INFO] train_test.py:  66: Training: [Epoch   72] loss: 2.5798 accuracy: 0.4913 lr: 0.001000
[10/29 14:55:48][INFO] train_test.py: 101: Evaluation: [Epoch   72] loss: 2.6948 accuracy: 0.3880
[10/29 14:57:07][INFO] train_test.py:  66: Training: [Epoch   73] loss: 2.5795 accuracy: 0.4913 lr: 0.001000
[10/29 14:57:31][INFO] train_test.py: 101: Evaluation: [Epoch   73] loss: 2.6905 accuracy: 0.3934
[10/29 14:58:50][INFO] train_test.py:  66: Training: [Epoch   74] loss: 2.5727 accuracy: 0.4913 lr: 0.001000
[10/29 14:59:14][INFO] train_test.py: 101: Evaluation: [Epoch   74] loss: 2.6950 accuracy: 0.3825
[10/29 15:00:33][INFO] train_test.py:  66: Training: [Epoch   75] loss: 2.5792 accuracy: 0.4913 lr: 0.001000
[10/29 15:00:57][INFO] train_test.py: 101: Evaluation: [Epoch   75] loss: 2.6983 accuracy: 0.3770
[10/29 15:02:17][INFO] train_test.py:  66: Training: [Epoch   76] loss: 2.5718 accuracy: 0.4913 lr: 0.001000
[10/29 15:02:41][INFO] train_test.py: 101: Evaluation: [Epoch   76] loss: 2.6952 accuracy: 0.3825
[10/29 15:04:00][INFO] train_test.py:  66: Training: [Epoch   77] loss: 2.5738 accuracy: 0.4913 lr: 0.001000
[10/29 15:04:24][INFO] train_test.py: 101: Evaluation: [Epoch   77] loss: 2.6949 accuracy: 0.3880
[10/29 15:05:43][INFO] train_test.py:  66: Training: [Epoch   78] loss: 2.5670 accuracy: 0.5122 lr: 0.001000
[10/29 15:06:07][INFO] train_test.py: 101: Evaluation: [Epoch   78] loss: 2.7169 accuracy: 0.3497
[10/29 15:07:26][INFO] train_test.py:  66: Training: [Epoch   79] loss: 2.5512 accuracy: 0.5192 lr: 0.001000
[10/29 15:07:50][INFO] train_test.py: 101: Evaluation: [Epoch   79] loss: 2.6874 accuracy: 0.3770
[10/29 15:09:09][INFO] train_test.py:  66: Training: [Epoch   80] loss: 2.5488 accuracy: 0.5175 lr: 0.001000
[10/29 15:09:32][INFO] train_test.py: 101: Evaluation: [Epoch   80] loss: 2.6902 accuracy: 0.3934
[10/29 15:10:52][INFO] train_test.py:  66: Training: [Epoch   81] loss: 2.5618 accuracy: 0.5227 lr: 0.001000
[10/29 15:11:15][INFO] train_test.py: 101: Evaluation: [Epoch   81] loss: 2.6749 accuracy: 0.4098
[10/29 15:12:50][INFO] train_test.py:  66: Training: [Epoch   82] loss: 2.5409 accuracy: 0.5437 lr: 0.001000
[10/29 15:13:14][INFO] train_test.py: 101: Evaluation: [Epoch   82] loss: 2.6762 accuracy: 0.3989
[10/29 15:14:33][INFO] train_test.py:  66: Training: [Epoch   83] loss: 2.5320 accuracy: 0.5490 lr: 0.001000
[10/29 15:14:57][INFO] train_test.py: 101: Evaluation: [Epoch   83] loss: 2.6782 accuracy: 0.3934
[10/29 15:16:16][INFO] train_test.py:  66: Training: [Epoch   84] loss: 2.5299 accuracy: 0.5472 lr: 0.001000
[10/29 15:16:40][INFO] train_test.py: 101: Evaluation: [Epoch   84] loss: 2.7041 accuracy: 0.3716
[10/29 15:17:59][INFO] train_test.py:  66: Training: [Epoch   85] loss: 2.5184 accuracy: 0.5524 lr: 0.001000
[10/29 15:18:23][INFO] train_test.py: 101: Evaluation: [Epoch   85] loss: 2.6653 accuracy: 0.4153
[10/29 15:19:58][INFO] train_test.py:  66: Training: [Epoch   86] loss: 2.5180 accuracy: 0.5559 lr: 0.001000
[10/29 15:20:22][INFO] train_test.py: 101: Evaluation: [Epoch   86] loss: 2.6507 accuracy: 0.4317
[10/29 15:21:57][INFO] train_test.py:  66: Training: [Epoch   87] loss: 2.5009 accuracy: 0.5717 lr: 0.001000
[10/29 15:22:21][INFO] train_test.py: 101: Evaluation: [Epoch   87] loss: 2.7516 accuracy: 0.3224
[10/29 15:23:40][INFO] train_test.py:  66: Training: [Epoch   88] loss: 2.5253 accuracy: 0.5577 lr: 0.001000
[10/29 15:24:04][INFO] train_test.py: 101: Evaluation: [Epoch   88] loss: 2.8550 accuracy: 0.2131
[10/29 15:25:23][INFO] train_test.py:  66: Training: [Epoch   89] loss: 2.5784 accuracy: 0.5035 lr: 0.001000
[10/29 15:25:46][INFO] train_test.py: 101: Evaluation: [Epoch   89] loss: 2.6856 accuracy: 0.3880
[10/29 15:27:06][INFO] train_test.py:  66: Training: [Epoch   90] loss: 2.4904 accuracy: 0.5944 lr: 0.001000
[10/29 15:27:29][INFO] train_test.py: 101: Evaluation: [Epoch   90] loss: 2.6193 accuracy: 0.4699
[10/29 15:29:04][INFO] train_test.py:  66: Training: [Epoch   91] loss: 2.4617 accuracy: 0.6119 lr: 0.001000
[10/29 15:29:27][INFO] train_test.py: 101: Evaluation: [Epoch   91] loss: 2.6283 accuracy: 0.4481
[10/29 15:30:46][INFO] train_test.py:  66: Training: [Epoch   92] loss: 2.4575 accuracy: 0.6136 lr: 0.001000
[10/29 15:31:10][INFO] train_test.py: 101: Evaluation: [Epoch   92] loss: 2.6239 accuracy: 0.4590
[10/29 15:32:29][INFO] train_test.py:  66: Training: [Epoch   93] loss: 2.4608 accuracy: 0.6119 lr: 0.001000
[10/29 15:32:53][INFO] train_test.py: 101: Evaluation: [Epoch   93] loss: 2.6422 accuracy: 0.4372
[10/29 15:34:12][INFO] train_test.py:  66: Training: [Epoch   94] loss: 2.4537 accuracy: 0.6206 lr: 0.001000
[10/29 15:34:35][INFO] train_test.py: 101: Evaluation: [Epoch   94] loss: 2.6785 accuracy: 0.4044
[10/29 15:35:55][INFO] train_test.py:  66: Training: [Epoch   95] loss: 2.4571 accuracy: 0.6276 lr: 0.001000
[10/29 15:36:18][INFO] train_test.py: 101: Evaluation: [Epoch   95] loss: 2.6472 accuracy: 0.4208
[10/29 15:37:37][INFO] train_test.py:  66: Training: [Epoch   96] loss: 2.4487 accuracy: 0.6294 lr: 0.001000
[10/29 15:38:01][INFO] train_test.py: 101: Evaluation: [Epoch   96] loss: 2.6348 accuracy: 0.4317
[10/29 15:39:20][INFO] train_test.py:  66: Training: [Epoch   97] loss: 2.4453 accuracy: 0.6311 lr: 0.001000
[10/29 15:39:44][INFO] train_test.py: 101: Evaluation: [Epoch   97] loss: 2.6317 accuracy: 0.4426
[10/29 15:41:04][INFO] train_test.py:  66: Training: [Epoch   98] loss: 2.4517 accuracy: 0.6311 lr: 0.001000
[10/29 15:41:27][INFO] train_test.py: 101: Evaluation: [Epoch   98] loss: 2.6336 accuracy: 0.4372
[10/29 15:42:46][INFO] train_test.py:  66: Training: [Epoch   99] loss: 2.4449 accuracy: 0.6311 lr: 0.001000
[10/29 15:43:10][INFO] train_test.py: 101: Evaluation: [Epoch   99] loss: 2.6332 accuracy: 0.4426
[10/29 15:44:30][INFO] train_test.py:  66: Training: [Epoch  100] loss: 2.4360 accuracy: 0.6329 lr: 0.001000
[10/29 15:44:53][INFO] train_test.py: 101: Evaluation: [Epoch  100] loss: 2.6348 accuracy: 0.4372
[10/29 15:44:53][INFO] train_test.py: 166: Trained with 100 epochs, lr = 0.001, batchsize = 10, momentum = 0.5 with max validation accuracy of 0.47 done in 3:02:20
[10/29 22:58:00][INFO] run.py:  92: Train with configs:
[10/29 22:58:00][INFO] run.py:  93: 
{ AUGMENTATION      }-> False
{ BATCH_SIZE        }-> 10
{ DATA_JSON         }-> data.json
{ DATA_SEPARATOR    }-> ,
{ DECAY             }-> 0.005
{ DEVICES           }-> [0, 1]
{ EPOCHS            }-> 100
{ FLOW              }-> DeepFlow
{ GPU               }-> 0,1
{ LABEL_DICT        }-> label_dict.json
{ LOAD              }-> False
{ LR                }-> 0.001
{ MODE              }-> train
{ MODEL_NAME        }-> twin
{ MODEL_TYPE        }-> twin
{ MOMENTUM          }-> 0.5
{ NESTEROV          }-> True
{ NORM              }-> normal
{ NUM_CLASSES       }-> 20
{ NUM_WORKERS       }-> 8
{ N_GPU             }-> 2
{ OUTPUT_DIR        }-> .
{ OUTPUT_FILE       }-> ./pred.txt
{ PATH_DATA         }-> data
{ PATH_MODEL        }-> ./twin
{ PATH_PROCESSED_DATA }-> data_processed
{ SEED              }-> 31
{ SIZE_DATA         }-> [100 120 120]
{ VERSION           }-> 31
{ dtype             }-> <class 'torch.cuda.FloatTensor'>

[10/29 22:59:05][INFO] run.py:  92: Train with configs:
[10/29 22:59:05][INFO] run.py:  93: 
{ AUGMENTATION      }-> False
{ BATCH_SIZE        }-> 10
{ DATA_JSON         }-> data.json
{ DATA_SEPARATOR    }-> ,
{ DECAY             }-> 0.005
{ DEVICES           }-> [0, 1]
{ EPOCHS            }-> 100
{ FLOW              }-> DeepFlow
{ GPU               }-> 0,1
{ LABEL_DICT        }-> label_dict.json
{ LOAD              }-> False
{ LR                }-> 0.001
{ MODE              }-> train
{ MODEL_NAME        }-> twin
{ MODEL_TYPE        }-> twin
{ MOMENTUM          }-> 0.5
{ NESTEROV          }-> True
{ NORM              }-> normal
{ NUM_CLASSES       }-> 20
{ NUM_WORKERS       }-> 8
{ N_GPU             }-> 2
{ OUTPUT_DIR        }-> .
{ OUTPUT_FILE       }-> ./pred.txt
{ PATH_DATA         }-> data
{ PATH_MODEL        }-> ./twin
{ PATH_PROCESSED_DATA }-> data_processed
{ SEED              }-> 31
{ SIZE_DATA         }-> [100 120 120]
{ VERSION           }-> 31
{ dtype             }-> <class 'torch.cuda.FloatTensor'>

[10/30 13:50:53][INFO] run.py:  92: Train with configs:
[10/30 13:50:53][INFO] run.py:  93: 
{ AUGMENTATION      }-> False
{ BATCH_SIZE        }-> 10
{ DATA_JSON         }-> data.json
{ DATA_SEPARATOR    }-> ,
{ DECAY             }-> 0.005
{ DEVICES           }-> [0, 1]
{ EPOCHS            }-> 110
{ FLOW              }-> DeepFlow
{ GPU               }-> 0,1
{ LABEL_DICT        }-> label_dict.json
{ LOAD              }-> False
{ LR                }-> 0.001
{ MODE              }-> train
{ MODEL_NAME        }-> twin
{ MODEL_TYPE        }-> twin
{ MOMENTUM          }-> 0.5
{ NESTEROV          }-> True
{ NORM              }-> normal
{ NUM_CLASSES       }-> 20
{ NUM_WORKERS       }-> 8
{ N_GPU             }-> 2
{ OUTPUT_DIR        }-> .
{ OUTPUT_FILE       }-> ./pred.txt
{ PATH_DATA         }-> data
{ PATH_MODEL        }-> ./twin
{ PATH_PROCESSED_DATA }-> data_processed
{ SEED              }-> 31
{ SIZE_DATA         }-> [100 120 120]
{ VERSION           }-> 31
{ dtype             }-> <class 'torch.cuda.FloatTensor'>

[10/30 13:50:58][INFO] train_test.py: 133: Load model ./twin for retraining
[10/30 13:51:15][INFO] run.py:  92: Train with configs:
[10/30 13:51:15][INFO] run.py:  93: 
{ AUGMENTATION      }-> False
{ BATCH_SIZE        }-> 10
{ DATA_JSON         }-> data.json
{ DATA_SEPARATOR    }-> ,
{ DECAY             }-> 0.005
{ DEVICES           }-> [0, 1]
{ EPOCHS            }-> 110
{ FLOW              }-> DeepFlow
{ GPU               }-> 0,1
{ LABEL_DICT        }-> label_dict.json
{ LOAD              }-> False
{ LR                }-> 0.001
{ MODE              }-> train
{ MODEL_NAME        }-> twin
{ MODEL_TYPE        }-> twin
{ MOMENTUM          }-> 0.5
{ NESTEROV          }-> True
{ NORM              }-> normal
{ NUM_CLASSES       }-> 20
{ NUM_WORKERS       }-> 8
{ N_GPU             }-> 2
{ OUTPUT_DIR        }-> .
{ OUTPUT_FILE       }-> ./pred.txt
{ PATH_DATA         }-> data
{ PATH_MODEL        }-> ./twin
{ PATH_PROCESSED_DATA }-> data_processed
{ SEED              }-> 31
{ SIZE_DATA         }-> [100 120 120]
{ VERSION           }-> 31
{ dtype             }-> <class 'torch.cuda.FloatTensor'>

[10/30 13:51:20][INFO] train_test.py: 133: Load model ./twin for retraining
[10/30 13:51:22][INFO] train_test.py: 136: Model from epoch 90
[10/30 13:51:22][INFO] train_test.py: 140: loss_train_ : 2.49037
[10/30 13:51:22][INFO] train_test.py: 140: acc_train_ : 0.594406
[10/30 13:51:22][INFO] train_test.py: 140: loss_val_ : 2.61928
[10/30 13:51:22][INFO] train_test.py: 140: acc_val_ : 0.469945
[10/30 13:52:43][INFO] train_test.py:  66: Training: [Epoch   90] loss: 2.4590 accuracy: 0.6154 lr: 0.001000
[10/30 13:53:07][INFO] train_test.py: 101: Evaluation: [Epoch   90] loss: 2.6444 accuracy: 0.4372
[10/30 13:54:26][INFO] train_test.py:  66: Training: [Epoch   91] loss: 2.4615 accuracy: 0.6084 lr: 0.001000
[10/30 13:54:49][INFO] train_test.py: 101: Evaluation: [Epoch   91] loss: 2.6641 accuracy: 0.4153
[10/30 13:56:08][INFO] train_test.py:  66: Training: [Epoch   92] loss: 2.4626 accuracy: 0.6189 lr: 0.001000
[10/30 13:56:31][INFO] train_test.py: 101: Evaluation: [Epoch   92] loss: 2.6907 accuracy: 0.3825
[10/30 13:57:50][INFO] train_test.py:  66: Training: [Epoch   93] loss: 2.4651 accuracy: 0.6119 lr: 0.001000
[10/30 13:58:14][INFO] train_test.py: 101: Evaluation: [Epoch   93] loss: 2.6538 accuracy: 0.4262
[10/30 13:59:33][INFO] train_test.py:  66: Training: [Epoch   94] loss: 2.4635 accuracy: 0.6066 lr: 0.001000
[10/30 13:59:57][INFO] train_test.py: 101: Evaluation: [Epoch   94] loss: 2.6209 accuracy: 0.4590
[10/30 14:01:17][INFO] train_test.py:  66: Training: [Epoch   95] loss: 2.4476 accuracy: 0.6259 lr: 0.001000
[10/30 14:01:41][INFO] train_test.py: 101: Evaluation: [Epoch   95] loss: 2.6321 accuracy: 0.4536
[10/30 14:03:00][INFO] train_test.py:  66: Training: [Epoch   96] loss: 2.4497 accuracy: 0.6294 lr: 0.001000
[10/30 14:03:23][INFO] train_test.py: 101: Evaluation: [Epoch   96] loss: 2.6328 accuracy: 0.4426
[10/30 14:04:43][INFO] train_test.py:  66: Training: [Epoch   97] loss: 2.4481 accuracy: 0.6294 lr: 0.001000
[10/30 14:05:07][INFO] train_test.py: 101: Evaluation: [Epoch   97] loss: 2.6362 accuracy: 0.4317
[10/30 14:06:26][INFO] train_test.py:  66: Training: [Epoch   98] loss: 2.4482 accuracy: 0.6276 lr: 0.001000
[10/30 14:06:50][INFO] train_test.py: 101: Evaluation: [Epoch   98] loss: 2.6474 accuracy: 0.4317
[10/30 14:08:09][INFO] train_test.py:  66: Training: [Epoch   99] loss: 2.4471 accuracy: 0.6294 lr: 0.001000
[10/30 14:08:32][INFO] train_test.py: 101: Evaluation: [Epoch   99] loss: 2.6380 accuracy: 0.4372
[10/30 14:09:51][INFO] train_test.py:  66: Training: [Epoch  100] loss: 2.4450 accuracy: 0.6311 lr: 0.001000
[10/30 14:10:15][INFO] train_test.py: 101: Evaluation: [Epoch  100] loss: 2.6294 accuracy: 0.4481
[10/30 14:10:15][INFO] train_test.py: 166: Trained with 100 epochs, lr = 0.001, batchsize = 10, momentum = 0.5 with max validation accuracy of 0.47 done in 0:18:54
[10/30 14:10:15][DEBUG] font_manager.py: 1334: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntegralsUpD-Regular.otf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizeTwoSym-Bold.otf) normal normal 700 normal>) = 10.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal 200 normal>) = 0.24
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXNonUnicode' (STIXNonUnicode-Regular.otf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-DemiLight.ttc) normal normal 350 normal>) = 10.0975
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'NanumMyeongjo' (NanumMyeongjo.ttf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'NanumGothic' (NanumGothicBold.ttf) normal normal 600 normal>) = 10.24
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIX' (STIX-BoldItalic.otf) italic normal 700 normal>) = 11.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Padauk Book' (Padauk-book.ttf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 500 normal>) = 10.145
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 500 normal>) = 11.145
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXIntegralsSm' (STIXIntegralsSm-Regular.otf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXGeneral' (STIXGeneral-BoldItalic.otf) italic normal 700 normal>) = 11.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 500 normal>) = 10.145
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXVariants' (STIXVariants-Regular.otf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntegralsUpD-Bold.otf) normal normal 700 normal>) = 10.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIX' (STIX-Regular.otf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXIntegralsUp' (STIXIntegralsUp-Regular.otf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntegralsUpSm-Regular.otf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXIntegralsSm' (STIXIntegralsSm-Bold.otf) normal normal 700 normal>) = 10.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Padauk Book' (Padauk-bookbold.ttf) normal normal 700 normal>) = 10.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal 700 condensed>) = 0.5349999999999999
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXNonUnicode' (STIXNonUnicode-BoldItalic.otf) italic normal 700 normal>) = 11.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-R.ttf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizeThreeSym-Regular.otf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXIntegralsD' (STIXIntegralsD-Bold.otf) normal normal 700 normal>) = 10.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeFourSym' (STIXSizeFourSym-Bold.otf) normal normal 700 normal>) = 10.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal 700 condensed>) = 1.535
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXGeneral' (STIXGeneral-Bold.otf) normal normal 700 normal>) = 10.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizeFiveSym-Regular.otf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXNonUnicode' (STIXNonUnicode-Bold.otf) normal normal 700 normal>) = 10.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 500 normal>) = 10.145
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'NanumMyeongjo' (NanumMyeongjoBold.ttf) normal normal 600 normal>) = 10.24
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizeTwoSym-Regular.otf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXGeneral' (STIXGeneral-Regular.otf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizeThreeSym-Bold.otf) normal normal 700 normal>) = 10.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXIntegralsUp' (STIXIntegralsUp-Bold.otf) normal normal 700 normal>) = 10.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeFourSym' (STIXSizeFourSym-Regular.otf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Padauk' (Padauk.ttf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 500 normal>) = 10.145
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIX' (STIX-Italic.otf) italic normal 400 normal>) = 11.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeOneSym' (STIXSizeOneSym-Regular.otf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'NanumBarunGothic' (NanumBarunGothic.ttf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXNonUnicode' (STIXNonUnicode-Italic.otf) italic normal 400 normal>) = 11.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'NanumBarunGothic' (NanumBarunGothicBold.ttf) normal normal 600 normal>) = 10.24
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 500 normal>) = 11.145
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'TakaoPGothic' (fonts-japanese-gothic.ttf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXVariants' (STIXVariants-Bold.otf) normal normal 700 normal>) = 10.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Medium.ttc) normal normal 500 normal>) = 10.145
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Symbola' (Symbola_hint.ttf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Lohit Punjabi' (Lohit-Punjabi.ttf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXGeneral' (STIXGeneral-Italic.otf) italic normal 400 normal>) = 11.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Black.ttc) normal normal 900 normal>) = 10.525
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'NanumGothic' (NanumGothic.ttf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Thin.ttc) normal normal 250 normal>) = 10.1925
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Padauk' (Padauk-bold.ttf) normal normal 700 normal>) = 10.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 0.25
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 500 normal>) = 10.145
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 500 normal>) = 11.145
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIX' (STIX-Bold.otf) normal normal 700 normal>) = 10.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIX Math' (STIXMath-Regular.otf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal 700 condensed>) = 10.535
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 500 normal>) = 11.145
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeOneSym' (STIXSizeOneSym-Bold.otf) normal normal 700 normal>) = 10.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntegralsUpSm-Bold.otf) normal normal 700 normal>) = 10.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Light.ttc) normal normal 300 normal>) = 10.145
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'TakaoPGothic' (TakaoPGothic.ttf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.25
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 1.25
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXIntegralsD' (STIXIntegralsD-Regular.otf) normal normal 400 normal>) = 10.05
[10/30 14:10:15][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
[10/30 14:10:15][DEBUG] font_manager.py: 1367: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/opt/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
[10/30 14:39:00][INFO] run.py:  92: Train with configs:
[10/30 14:39:00][INFO] run.py:  93: 
{ AUGMENTATION      }-> False
{ BATCH_SIZE        }-> 10
{ DATA_JSON         }-> data.json
{ DATA_SEPARATOR    }-> ,
{ DECAY             }-> 0.005
{ DEVICES           }-> [0, 1]
{ EPOCHS            }-> 100
{ FLOW              }-> DeepFlow
{ GPU               }-> 0,1
{ LABEL_DICT        }-> label_dict.json
{ LOAD              }-> False
{ LR                }-> 0.001
{ MODE              }-> train
{ MODEL_NAME        }-> twin
{ MODEL_TYPE        }-> twin
{ MOMENTUM          }-> 0.5
{ NESTEROV          }-> True
{ NORM              }-> normal
{ NUM_CLASSES       }-> 20
{ NUM_WORKERS       }-> 8
{ N_GPU             }-> 2
{ OUTPUT_DIR        }-> .
{ OUTPUT_FILE       }-> ./pred.txt
{ PATH_DATA         }-> data
{ PATH_MODEL        }-> ./twin
{ PATH_PROCESSED_DATA }-> data_processed
{ SEED              }-> 31
{ SIZE_DATA         }-> [100 120 120]
{ VERSION           }-> 31
{ dtype             }-> <class 'torch.cuda.FloatTensor'>

[10/30 14:39:16][INFO] run.py:  92: Train with configs:
[10/30 14:39:16][INFO] run.py:  93: 
{ AUGMENTATION      }-> False
{ BATCH_SIZE        }-> 10
{ DATA_JSON         }-> data.json
{ DATA_SEPARATOR    }-> ,
{ DECAY             }-> 0.005
{ DEVICES           }-> [0, 1]
{ EPOCHS            }-> 100
{ FLOW              }-> DeepFlow
{ GPU               }-> 0,1
{ LABEL_DICT        }-> label_dict.json
{ LOAD              }-> False
{ LR                }-> 0.001
{ MODE              }-> train
{ MODEL_NAME        }-> twin
{ MODEL_TYPE        }-> twin
{ MOMENTUM          }-> 0.5
{ NESTEROV          }-> True
{ NORM              }-> normal
{ NUM_CLASSES       }-> 20
{ NUM_WORKERS       }-> 8
{ N_GPU             }-> 2
{ OUTPUT_DIR        }-> .
{ OUTPUT_FILE       }-> ./pred.txt
{ PATH_DATA         }-> data
{ PATH_MODEL        }-> ./twin
{ PATH_PROCESSED_DATA }-> data_processed
{ SEED              }-> 31
{ SIZE_DATA         }-> [100 120 120]
{ VERSION           }-> 31
{ dtype             }-> <class 'torch.cuda.FloatTensor'>

[10/30 14:39:26][INFO] train_test.py:  66: Training: [Epoch    1] loss: 2.9972 accuracy: 0.0000 lr: 0.001000
[10/30 14:39:28][INFO] train_test.py: 101: Evaluation: [Epoch    1] loss: 2.9972 accuracy: 0.0000
[10/30 14:39:46][INFO] train_test.py:  66: Training: [Epoch    2] loss: 2.9972 accuracy: 0.0000 lr: 0.001000
[10/30 14:39:48][INFO] train_test.py: 101: Evaluation: [Epoch    2] loss: 2.9972 accuracy: 0.0000
[10/30 14:40:03][INFO] run.py:  92: Train with configs:
[10/30 14:40:03][INFO] run.py:  93: 
{ AUGMENTATION      }-> False
{ BATCH_SIZE        }-> 2
{ DATA_JSON         }-> data.json
{ DATA_SEPARATOR    }-> ,
{ DECAY             }-> 0.005
{ DEVICES           }-> [0, 1]
{ EPOCHS            }-> 100
{ FLOW              }-> DeepFlow
{ GPU               }-> 0,1
{ LABEL_DICT        }-> label_dict.json
{ LOAD              }-> False
{ LR                }-> 0.001
{ MODE              }-> train
{ MODEL_NAME        }-> twin
{ MODEL_TYPE        }-> twin
{ MOMENTUM          }-> 0.5
{ NESTEROV          }-> True
{ NORM              }-> normal
{ NUM_CLASSES       }-> 20
{ NUM_WORKERS       }-> 8
{ N_GPU             }-> 2
{ OUTPUT_DIR        }-> .
{ OUTPUT_FILE       }-> ./pred.txt
{ PATH_DATA         }-> data
{ PATH_MODEL        }-> ./twin
{ PATH_PROCESSED_DATA }-> data_processed
{ SEED              }-> 31
{ SIZE_DATA         }-> [100 120 120]
{ VERSION           }-> 31
{ dtype             }-> <class 'torch.cuda.FloatTensor'>

[10/30 14:40:16][INFO] train_test.py:  66: Training: [Epoch    1] loss: 2.9972 accuracy: 0.0000 lr: 0.001000
[10/30 14:40:18][INFO] train_test.py: 101: Evaluation: [Epoch    1] loss: 2.9972 accuracy: 0.0000
[10/30 14:40:39][INFO] train_test.py:  66: Training: [Epoch    2] loss: 2.9971 accuracy: 0.0000 lr: 0.001000
[10/30 14:40:41][INFO] train_test.py: 101: Evaluation: [Epoch    2] loss: 2.9972 accuracy: 0.0000
[10/30 14:41:02][INFO] train_test.py:  66: Training: [Epoch    3] loss: 2.9970 accuracy: 0.0000 lr: 0.001000
[10/30 14:41:04][INFO] train_test.py: 101: Evaluation: [Epoch    3] loss: 2.9971 accuracy: 0.0000
[10/30 14:41:25][INFO] train_test.py:  66: Training: [Epoch    4] loss: 2.9969 accuracy: 0.0000 lr: 0.001000
[10/30 14:41:27][INFO] train_test.py: 101: Evaluation: [Epoch    4] loss: 2.9971 accuracy: 0.0000
[10/30 14:41:49][INFO] train_test.py:  66: Training: [Epoch    5] loss: 2.9969 accuracy: 0.0000 lr: 0.001000
[10/30 14:41:51][INFO] train_test.py: 101: Evaluation: [Epoch    5] loss: 2.9970 accuracy: 0.0000
[10/30 14:42:11][INFO] train_test.py:  66: Training: [Epoch    6] loss: 2.9968 accuracy: 0.0000 lr: 0.001000
[10/30 14:42:14][INFO] train_test.py: 101: Evaluation: [Epoch    6] loss: 2.9970 accuracy: 0.0000
[10/30 14:42:35][INFO] train_test.py:  66: Training: [Epoch    7] loss: 2.9967 accuracy: 0.0000 lr: 0.001000
[10/30 14:42:37][INFO] train_test.py: 101: Evaluation: [Epoch    7] loss: 2.9969 accuracy: 0.0000
[10/30 14:42:57][INFO] train_test.py:  66: Training: [Epoch    8] loss: 2.9966 accuracy: 0.0000 lr: 0.001000
[10/30 14:43:00][INFO] train_test.py: 101: Evaluation: [Epoch    8] loss: 2.9969 accuracy: 0.0000
[10/30 14:43:20][INFO] train_test.py:  66: Training: [Epoch    9] loss: 2.9965 accuracy: 0.0000 lr: 0.001000
[10/30 14:43:22][INFO] train_test.py: 101: Evaluation: [Epoch    9] loss: 2.9968 accuracy: 0.0000
[10/30 14:46:35][INFO] run.py:  92: Train with configs:
[10/30 14:46:35][INFO] run.py:  93: 
{ AUGMENTATION      }-> False
{ BATCH_SIZE        }-> 2
{ DATA_JSON         }-> data.json
{ DATA_SEPARATOR    }-> ,
{ DECAY             }-> 0.005
{ DEVICES           }-> [0, 1]
{ EPOCHS            }-> 100
{ FLOW              }-> DeepFlow
{ GPU               }-> 0,1
{ LABEL_DICT        }-> label_dict.json
{ LOAD              }-> False
{ LR                }-> 0.001
{ MODE              }-> train
{ MODEL_NAME        }-> twin
{ MODEL_TYPE        }-> twin
{ MOMENTUM          }-> 0.5
{ NESTEROV          }-> True
{ NORM              }-> normal
{ NUM_CLASSES       }-> 20
{ NUM_WORKERS       }-> 8
{ N_GPU             }-> 2
{ OUTPUT_DIR        }-> .
{ OUTPUT_FILE       }-> ./pred.txt
{ PATH_DATA         }-> data
{ PATH_MODEL        }-> ./twin
{ PATH_PROCESSED_DATA }-> data_processed
{ SEED              }-> 31
{ SIZE_DATA         }-> [100 120 120]
{ VERSION           }-> 31
{ dtype             }-> <class 'torch.cuda.FloatTensor'>

[10/30 14:46:49][INFO] train_test.py:  66: Training: [Epoch    1] loss: 2.9972 accuracy: 0.0000 lr: 0.001000
[10/30 14:46:51][INFO] train_test.py: 101: Evaluation: [Epoch    1] loss: 2.9972 accuracy: 0.0000
[10/30 14:47:12][INFO] train_test.py:  66: Training: [Epoch    2] loss: 2.9971 accuracy: 0.0000 lr: 0.001000
[10/30 14:47:14][INFO] train_test.py: 101: Evaluation: [Epoch    2] loss: 2.9972 accuracy: 0.0000
[10/30 14:47:35][INFO] train_test.py:  66: Training: [Epoch    3] loss: 2.9970 accuracy: 0.0000 lr: 0.001000
[10/30 14:47:37][INFO] train_test.py: 101: Evaluation: [Epoch    3] loss: 2.9971 accuracy: 0.0000
[10/30 14:47:58][INFO] train_test.py:  66: Training: [Epoch    4] loss: 2.9969 accuracy: 0.0000 lr: 0.001000
[10/30 14:48:00][INFO] train_test.py: 101: Evaluation: [Epoch    4] loss: 2.9971 accuracy: 0.0000
[10/30 14:48:22][INFO] train_test.py:  66: Training: [Epoch    5] loss: 2.9969 accuracy: 0.0000 lr: 0.001000
[10/30 15:05:18][INFO] run.py:  92: Train with configs:
[10/30 15:05:18][INFO] run.py:  93: 
{ AUGMENTATION      }-> False
{ BATCH_SIZE        }-> 10
{ DATA_JSON         }-> data.json
{ DATA_SEPARATOR    }-> ,
{ DECAY             }-> 0.005
{ DEVICES           }-> [0, 1]
{ EPOCHS            }-> 200
{ FLOW              }-> DeepFlow
{ GPU               }-> 0,1
{ LABEL_DICT        }-> label_dict.json
{ LOAD              }-> False
{ LR                }-> 0.001
{ MODE              }-> train
{ MODEL_NAME        }-> twin
{ MODEL_TYPE        }-> twin
{ MOMENTUM          }-> 0.5
{ NESTEROV          }-> True
{ NORM              }-> normal
{ NUM_CLASSES       }-> 20
{ NUM_WORKERS       }-> 8
{ N_GPU             }-> 2
{ OUTPUT_DIR        }-> .
{ OUTPUT_FILE       }-> ./pred.txt
{ PATH_DATA         }-> data
{ PATH_MODEL        }-> ./twin
{ PATH_PROCESSED_DATA }-> data_processed
{ SEED              }-> 31
{ SIZE_DATA         }-> [100 120 120]
{ VERSION           }-> 31
{ dtype             }-> <class 'torch.cuda.FloatTensor'>

[10/30 15:05:27][INFO] train_test.py:  66: Training: [Epoch    1] loss: 2.9972 accuracy: 0.0000 lr: 0.001000
[10/30 15:05:30][INFO] train_test.py: 101: Evaluation: [Epoch    1] loss: 2.9972 accuracy: 0.0000
[10/30 15:05:47][INFO] train_test.py:  66: Training: [Epoch    2] loss: 2.9972 accuracy: 0.0000 lr: 0.001000
[10/30 15:05:49][INFO] train_test.py: 101: Evaluation: [Epoch    2] loss: 2.9972 accuracy: 0.0000
[10/30 15:06:06][INFO] train_test.py:  66: Training: [Epoch    3] loss: 2.9972 accuracy: 0.0000 lr: 0.001000
[10/30 15:06:08][INFO] train_test.py: 101: Evaluation: [Epoch    3] loss: 2.9972 accuracy: 0.0000
[10/30 15:06:26][INFO] train_test.py:  66: Training: [Epoch    4] loss: 2.9972 accuracy: 0.0000 lr: 0.001000
[10/30 15:06:28][INFO] train_test.py: 101: Evaluation: [Epoch    4] loss: 2.9972 accuracy: 0.0000
[10/30 15:06:46][INFO] train_test.py:  66: Training: [Epoch    5] loss: 2.9971 accuracy: 0.0000 lr: 0.001000
[10/30 15:06:48][INFO] train_test.py: 101: Evaluation: [Epoch    5] loss: 2.9972 accuracy: 0.0000
[10/30 15:07:06][INFO] train_test.py:  66: Training: [Epoch    6] loss: 2.9971 accuracy: 0.0000 lr: 0.001000
[10/30 15:07:08][INFO] train_test.py: 101: Evaluation: [Epoch    6] loss: 2.9972 accuracy: 0.0000
[10/30 15:07:26][INFO] train_test.py:  66: Training: [Epoch    7] loss: 2.9971 accuracy: 0.0000 lr: 0.001000
[10/30 15:07:28][INFO] train_test.py: 101: Evaluation: [Epoch    7] loss: 2.9972 accuracy: 0.0000
[10/30 15:07:46][INFO] train_test.py:  66: Training: [Epoch    8] loss: 2.9971 accuracy: 0.0000 lr: 0.001000
[10/30 15:07:48][INFO] train_test.py: 101: Evaluation: [Epoch    8] loss: 2.9972 accuracy: 0.0000
[10/30 15:08:07][INFO] train_test.py:  66: Training: [Epoch    9] loss: 2.9971 accuracy: 0.0000 lr: 0.001000
[10/30 15:08:09][INFO] train_test.py: 101: Evaluation: [Epoch    9] loss: 2.9972 accuracy: 0.0000
[10/30 15:08:34][INFO] run.py:  92: Train with configs:
[10/30 15:08:34][INFO] run.py:  93: 
{ AUGMENTATION      }-> False
{ BATCH_SIZE        }-> 10
{ DATA_JSON         }-> data.json
{ DATA_SEPARATOR    }-> ,
{ DECAY             }-> 0.005
{ DEVICES           }-> [0, 1]
{ EPOCHS            }-> 200
{ FLOW              }-> DeepFlow
{ GPU               }-> 0,1
{ LABEL_DICT        }-> label_dict.json
{ LOAD              }-> False
{ LR                }-> 0.001
{ MODE              }-> train
{ MODEL_NAME        }-> twin
{ MODEL_TYPE        }-> twin
{ MOMENTUM          }-> 0.5
{ NESTEROV          }-> True
{ NORM              }-> normal
{ NUM_CLASSES       }-> 20
{ NUM_WORKERS       }-> 8
{ N_GPU             }-> 2
{ OUTPUT_DIR        }-> .
{ OUTPUT_FILE       }-> ./pred.txt
{ PATH_DATA         }-> data
{ PATH_MODEL        }-> ./twin
{ PATH_PROCESSED_DATA }-> data_processed
{ SEED              }-> 31
{ SIZE_DATA         }-> [100 120 120]
{ VERSION           }-> 31
{ dtype             }-> <class 'torch.cuda.FloatTensor'>

[10/30 15:08:44][INFO] train_test.py:  66: Training: [Epoch    1] loss: 2.9972 accuracy: 0.0000 lr: 0.001000
[10/30 15:08:46][INFO] train_test.py: 101: Evaluation: [Epoch    1] loss: 2.9972 accuracy: 0.0000
[10/30 15:09:04][INFO] train_test.py:  66: Training: [Epoch    2] loss: 2.9972 accuracy: 0.0000 lr: 0.001000
[10/30 15:09:06][INFO] train_test.py: 101: Evaluation: [Epoch    2] loss: 2.9972 accuracy: 0.0000
[10/30 15:09:25][INFO] train_test.py:  66: Training: [Epoch    3] loss: 2.9972 accuracy: 0.0000 lr: 0.001000
[10/30 15:09:27][INFO] train_test.py: 101: Evaluation: [Epoch    3] loss: 2.9972 accuracy: 0.0000
[10/30 15:09:44][INFO] train_test.py:  66: Training: [Epoch    4] loss: 2.9972 accuracy: 0.0000 lr: 0.001000
[10/30 15:09:47][INFO] train_test.py: 101: Evaluation: [Epoch    4] loss: 2.9972 accuracy: 0.0000
[10/30 15:10:04][INFO] train_test.py:  66: Training: [Epoch    5] loss: 2.9971 accuracy: 0.0000 lr: 0.001000
[10/30 15:10:07][INFO] train_test.py: 101: Evaluation: [Epoch    5] loss: 2.9972 accuracy: 0.0000
[10/30 15:10:25][INFO] train_test.py:  66: Training: [Epoch    6] loss: 2.9971 accuracy: 0.0000 lr: 0.001000
[10/30 15:10:27][INFO] train_test.py: 101: Evaluation: [Epoch    6] loss: 2.9972 accuracy: 0.0000
[10/30 15:10:45][INFO] train_test.py:  66: Training: [Epoch    7] loss: 2.9971 accuracy: 0.0000 lr: 0.001000
[10/30 15:10:47][INFO] train_test.py: 101: Evaluation: [Epoch    7] loss: 2.9972 accuracy: 0.0000
[10/30 15:11:05][INFO] train_test.py:  66: Training: [Epoch    8] loss: 2.9971 accuracy: 0.0000 lr: 0.001000
[10/30 15:11:07][INFO] train_test.py: 101: Evaluation: [Epoch    8] loss: 2.9972 accuracy: 0.0000
[10/30 15:11:26][INFO] train_test.py:  66: Training: [Epoch    9] loss: 2.9971 accuracy: 0.0000 lr: 0.001000
[10/30 15:11:28][INFO] train_test.py: 101: Evaluation: [Epoch    9] loss: 2.9972 accuracy: 0.0000
[10/30 15:11:48][INFO] train_test.py:  66: Training: [Epoch   10] loss: 2.9971 accuracy: 0.0000 lr: 0.001000
[10/30 15:11:50][INFO] train_test.py: 101: Evaluation: [Epoch   10] loss: 2.9972 accuracy: 0.0000
[10/30 15:12:08][INFO] train_test.py:  66: Training: [Epoch   11] loss: 2.9971 accuracy: 0.0000 lr: 0.001000
[10/30 15:12:10][INFO] train_test.py: 101: Evaluation: [Epoch   11] loss: 2.9972 accuracy: 0.0000
[10/30 15:12:28][INFO] train_test.py:  66: Training: [Epoch   12] loss: 2.9970 accuracy: 0.0000 lr: 0.001000
[10/30 15:12:31][INFO] train_test.py: 101: Evaluation: [Epoch   12] loss: 2.9972 accuracy: 0.0000
[10/30 15:12:49][INFO] train_test.py:  66: Training: [Epoch   13] loss: 2.9970 accuracy: 0.0000 lr: 0.001000
[10/30 15:12:51][INFO] train_test.py: 101: Evaluation: [Epoch   13] loss: 2.9971 accuracy: 0.0000
[10/30 15:13:10][INFO] train_test.py:  66: Training: [Epoch   14] loss: 2.9970 accuracy: 0.0000 lr: 0.001000
[10/30 15:13:12][INFO] train_test.py: 101: Evaluation: [Epoch   14] loss: 2.9971 accuracy: 0.0000
[10/30 15:13:31][INFO] train_test.py:  66: Training: [Epoch   15] loss: 2.9970 accuracy: 0.0000 lr: 0.001000
[10/30 15:13:33][INFO] train_test.py: 101: Evaluation: [Epoch   15] loss: 2.9971 accuracy: 0.0000
[10/30 15:13:51][INFO] train_test.py:  66: Training: [Epoch   16] loss: 2.9970 accuracy: 0.0000 lr: 0.001000
[10/30 15:13:53][INFO] train_test.py: 101: Evaluation: [Epoch   16] loss: 2.9971 accuracy: 0.0000
[10/30 15:14:11][INFO] train_test.py:  66: Training: [Epoch   17] loss: 2.9970 accuracy: 0.0000 lr: 0.001000
[10/30 15:14:13][INFO] train_test.py: 101: Evaluation: [Epoch   17] loss: 2.9971 accuracy: 0.0000
[10/30 15:14:32][INFO] train_test.py:  66: Training: [Epoch   18] loss: 2.9969 accuracy: 0.0000 lr: 0.001000
[10/30 15:14:34][INFO] train_test.py: 101: Evaluation: [Epoch   18] loss: 2.9971 accuracy: 0.0000
[10/30 15:14:53][INFO] train_test.py:  66: Training: [Epoch   19] loss: 2.9969 accuracy: 0.0000 lr: 0.001000
[10/30 15:14:55][INFO] train_test.py: 101: Evaluation: [Epoch   19] loss: 2.9971 accuracy: 0.0000
[10/30 15:15:13][INFO] train_test.py:  66: Training: [Epoch   20] loss: 2.9969 accuracy: 0.0000 lr: 0.001000
[10/30 15:15:15][INFO] train_test.py: 101: Evaluation: [Epoch   20] loss: 2.9971 accuracy: 0.0000
[10/30 15:15:33][INFO] train_test.py:  66: Training: [Epoch   21] loss: 2.9969 accuracy: 0.0000 lr: 0.001000
[10/30 15:15:35][INFO] train_test.py: 101: Evaluation: [Epoch   21] loss: 2.9971 accuracy: 0.0000
[10/30 15:15:54][INFO] train_test.py:  66: Training: [Epoch   22] loss: 2.9969 accuracy: 0.0000 lr: 0.001000
[10/30 15:15:56][INFO] train_test.py: 101: Evaluation: [Epoch   22] loss: 2.9971 accuracy: 0.0000
[10/30 15:16:15][INFO] train_test.py:  66: Training: [Epoch   23] loss: 2.9969 accuracy: 0.0000 lr: 0.001000
[10/30 15:16:17][INFO] train_test.py: 101: Evaluation: [Epoch   23] loss: 2.9971 accuracy: 0.0000
[10/30 15:16:36][INFO] train_test.py:  66: Training: [Epoch   24] loss: 2.9968 accuracy: 0.0000 lr: 0.001000
[10/30 15:16:38][INFO] train_test.py: 101: Evaluation: [Epoch   24] loss: 2.9970 accuracy: 0.0000
[10/30 15:16:57][INFO] train_test.py:  66: Training: [Epoch   25] loss: 2.9968 accuracy: 0.0000 lr: 0.001000
[10/30 15:16:59][INFO] train_test.py: 101: Evaluation: [Epoch   25] loss: 2.9970 accuracy: 0.0000
[10/30 15:17:17][INFO] train_test.py:  66: Training: [Epoch   26] loss: 2.9968 accuracy: 0.0000 lr: 0.001000
[10/30 15:17:19][INFO] train_test.py: 101: Evaluation: [Epoch   26] loss: 2.9970 accuracy: 0.0000
[10/30 15:17:38][INFO] train_test.py:  66: Training: [Epoch   27] loss: 2.9968 accuracy: 0.0000 lr: 0.001000
[10/30 15:17:40][INFO] train_test.py: 101: Evaluation: [Epoch   27] loss: 2.9970 accuracy: 0.0000
[10/30 15:17:59][INFO] train_test.py:  66: Training: [Epoch   28] loss: 2.9968 accuracy: 0.0000 lr: 0.001000
[10/30 15:18:01][INFO] train_test.py: 101: Evaluation: [Epoch   28] loss: 2.9970 accuracy: 0.0000
[10/30 15:18:19][INFO] train_test.py:  66: Training: [Epoch   29] loss: 2.9968 accuracy: 0.0000 lr: 0.001000
[10/30 15:18:21][INFO] train_test.py: 101: Evaluation: [Epoch   29] loss: 2.9970 accuracy: 0.0000
[10/30 15:18:39][INFO] train_test.py:  66: Training: [Epoch   30] loss: 2.9968 accuracy: 0.0000 lr: 0.001000
[10/30 15:18:41][INFO] train_test.py: 101: Evaluation: [Epoch   30] loss: 2.9970 accuracy: 0.0000
[10/30 15:19:00][INFO] train_test.py:  66: Training: [Epoch   31] loss: 2.9967 accuracy: 0.0000 lr: 0.001000
[10/30 15:19:02][INFO] train_test.py: 101: Evaluation: [Epoch   31] loss: 2.9970 accuracy: 0.0000
[10/30 15:19:21][INFO] train_test.py:  66: Training: [Epoch   32] loss: 2.9967 accuracy: 0.0000 lr: 0.001000
[10/30 15:19:23][INFO] train_test.py: 101: Evaluation: [Epoch   32] loss: 2.9970 accuracy: 0.0000
[10/30 15:19:42][INFO] train_test.py:  66: Training: [Epoch   33] loss: 2.9967 accuracy: 0.0000 lr: 0.001000
[10/30 15:19:44][INFO] train_test.py: 101: Evaluation: [Epoch   33] loss: 2.9970 accuracy: 0.0000
[10/30 15:20:03][INFO] train_test.py:  66: Training: [Epoch   34] loss: 2.9967 accuracy: 0.0000 lr: 0.001000
[10/30 15:20:05][INFO] train_test.py: 101: Evaluation: [Epoch   34] loss: 2.9970 accuracy: 0.0000
[10/30 15:20:23][INFO] train_test.py:  66: Training: [Epoch   35] loss: 2.9967 accuracy: 0.0000 lr: 0.001000
[10/30 15:20:25][INFO] train_test.py: 101: Evaluation: [Epoch   35] loss: 2.9969 accuracy: 0.0000
[10/30 15:20:44][INFO] train_test.py:  66: Training: [Epoch   36] loss: 2.9967 accuracy: 0.0000 lr: 0.001000
[10/30 15:20:46][INFO] train_test.py: 101: Evaluation: [Epoch   36] loss: 2.9969 accuracy: 0.0000
[10/30 15:21:05][INFO] train_test.py:  66: Training: [Epoch   37] loss: 2.9966 accuracy: 0.0000 lr: 0.001000
[10/30 15:21:08][INFO] train_test.py: 101: Evaluation: [Epoch   37] loss: 2.9969 accuracy: 0.0000
[10/30 15:21:26][INFO] train_test.py:  66: Training: [Epoch   38] loss: 2.9966 accuracy: 0.0000 lr: 0.001000
[10/30 15:21:28][INFO] train_test.py: 101: Evaluation: [Epoch   38] loss: 2.9969 accuracy: 0.0000
[10/30 15:21:48][INFO] train_test.py:  66: Training: [Epoch   39] loss: 2.9966 accuracy: 0.0000 lr: 0.001000
[10/30 15:21:50][INFO] train_test.py: 101: Evaluation: [Epoch   39] loss: 2.9969 accuracy: 0.0000
[10/30 15:22:09][INFO] train_test.py:  66: Training: [Epoch   40] loss: 2.9966 accuracy: 0.0000 lr: 0.001000
[10/30 15:22:11][INFO] train_test.py: 101: Evaluation: [Epoch   40] loss: 2.9969 accuracy: 0.0000
[10/30 15:22:29][INFO] train_test.py:  66: Training: [Epoch   41] loss: 2.9966 accuracy: 0.0000 lr: 0.001000
[10/30 15:22:31][INFO] train_test.py: 101: Evaluation: [Epoch   41] loss: 2.9969 accuracy: 0.0000
[10/30 15:22:50][INFO] train_test.py:  66: Training: [Epoch   42] loss: 2.9965 accuracy: 0.0000 lr: 0.001000
[10/30 15:22:52][INFO] train_test.py: 101: Evaluation: [Epoch   42] loss: 2.9969 accuracy: 0.0000
[10/30 15:23:11][INFO] train_test.py:  66: Training: [Epoch   43] loss: 2.9965 accuracy: 0.0000 lr: 0.001000
[10/30 15:23:13][INFO] train_test.py: 101: Evaluation: [Epoch   43] loss: 2.9969 accuracy: 0.0000
[10/30 15:23:31][INFO] train_test.py:  66: Training: [Epoch   44] loss: 2.9965 accuracy: 0.0000 lr: 0.001000
[10/30 15:23:33][INFO] train_test.py: 101: Evaluation: [Epoch   44] loss: 2.9969 accuracy: 0.0000
[10/30 15:23:52][INFO] train_test.py:  66: Training: [Epoch   45] loss: 2.9965 accuracy: 0.0000 lr: 0.001000
[10/30 15:23:54][INFO] train_test.py: 101: Evaluation: [Epoch   45] loss: 2.9968 accuracy: 0.0000
[10/30 15:24:13][INFO] train_test.py:  66: Training: [Epoch   46] loss: 2.9965 accuracy: 0.0000 lr: 0.001000
[10/30 15:24:15][INFO] train_test.py: 101: Evaluation: [Epoch   46] loss: 2.9968 accuracy: 0.0000
[10/30 15:24:33][INFO] train_test.py:  66: Training: [Epoch   47] loss: 2.9965 accuracy: 0.0000 lr: 0.001000
[10/30 15:24:35][INFO] train_test.py: 101: Evaluation: [Epoch   47] loss: 2.9968 accuracy: 0.0000
[10/30 15:24:54][INFO] train_test.py:  66: Training: [Epoch   48] loss: 2.9964 accuracy: 0.0000 lr: 0.001000
[10/30 15:24:56][INFO] train_test.py: 101: Evaluation: [Epoch   48] loss: 2.9968 accuracy: 0.0000
[10/30 15:25:15][INFO] train_test.py:  66: Training: [Epoch   49] loss: 2.9964 accuracy: 0.0000 lr: 0.001000
[10/30 15:25:18][INFO] train_test.py: 101: Evaluation: [Epoch   49] loss: 2.9968 accuracy: 0.0000
[10/30 15:25:36][INFO] train_test.py:  66: Training: [Epoch   50] loss: 2.9964 accuracy: 0.0000 lr: 0.001000
[10/30 15:25:38][INFO] train_test.py: 101: Evaluation: [Epoch   50] loss: 2.9968 accuracy: 0.0000
[10/30 15:25:57][INFO] train_test.py:  66: Training: [Epoch   51] loss: 2.9964 accuracy: 0.0000 lr: 0.001000
[10/30 15:25:59][INFO] train_test.py: 101: Evaluation: [Epoch   51] loss: 2.9968 accuracy: 0.0000
[10/30 15:26:17][INFO] train_test.py:  66: Training: [Epoch   52] loss: 2.9964 accuracy: 0.0000 lr: 0.001000
[10/30 15:26:19][INFO] train_test.py: 101: Evaluation: [Epoch   52] loss: 2.9968 accuracy: 0.0000
[10/30 15:26:37][INFO] train_test.py:  66: Training: [Epoch   53] loss: 2.9964 accuracy: 0.0000 lr: 0.001000
[10/30 15:26:40][INFO] train_test.py: 101: Evaluation: [Epoch   53] loss: 2.9968 accuracy: 0.0000
[10/30 15:26:59][INFO] train_test.py:  66: Training: [Epoch   54] loss: 2.9963 accuracy: 0.0000 lr: 0.001000
[10/30 15:27:01][INFO] train_test.py: 101: Evaluation: [Epoch   54] loss: 2.9967 accuracy: 0.0000
[10/30 15:27:20][INFO] train_test.py:  66: Training: [Epoch   55] loss: 2.9963 accuracy: 0.0000 lr: 0.001000
[10/30 15:27:22][INFO] train_test.py: 101: Evaluation: [Epoch   55] loss: 2.9967 accuracy: 0.0000
[10/30 15:27:41][INFO] train_test.py:  66: Training: [Epoch   56] loss: 2.9963 accuracy: 0.0000 lr: 0.001000
[10/30 15:27:44][INFO] train_test.py: 101: Evaluation: [Epoch   56] loss: 2.9967 accuracy: 0.0000
[10/30 15:28:02][INFO] train_test.py:  66: Training: [Epoch   57] loss: 2.9963 accuracy: 0.0000 lr: 0.001000
[10/30 15:28:04][INFO] train_test.py: 101: Evaluation: [Epoch   57] loss: 2.9967 accuracy: 0.0000
[10/30 15:28:23][INFO] train_test.py:  66: Training: [Epoch   58] loss: 2.9963 accuracy: 0.0000 lr: 0.001000
[10/30 15:28:25][INFO] train_test.py: 101: Evaluation: [Epoch   58] loss: 2.9967 accuracy: 0.0000
[10/30 15:28:45][INFO] train_test.py:  66: Training: [Epoch   59] loss: 2.9962 accuracy: 0.0000 lr: 0.001000
[10/30 15:28:47][INFO] train_test.py: 101: Evaluation: [Epoch   59] loss: 2.9967 accuracy: 0.0000
[10/30 15:29:06][INFO] train_test.py:  66: Training: [Epoch   60] loss: 2.9962 accuracy: 0.0000 lr: 0.001000
[10/30 15:29:09][INFO] train_test.py: 101: Evaluation: [Epoch   60] loss: 2.9967 accuracy: 0.0000
[10/30 15:29:28][INFO] train_test.py:  66: Training: [Epoch   61] loss: 2.9962 accuracy: 0.0000 lr: 0.001000
[10/30 15:29:30][INFO] train_test.py: 101: Evaluation: [Epoch   61] loss: 2.9967 accuracy: 0.0000
[10/30 15:29:49][INFO] train_test.py:  66: Training: [Epoch   62] loss: 2.9962 accuracy: 0.0000 lr: 0.001000
[10/30 15:29:51][INFO] train_test.py: 101: Evaluation: [Epoch   62] loss: 2.9967 accuracy: 0.0000
[10/30 15:30:09][INFO] train_test.py:  66: Training: [Epoch   63] loss: 2.9962 accuracy: 0.0000 lr: 0.001000
[10/30 15:30:11][INFO] train_test.py: 101: Evaluation: [Epoch   63] loss: 2.9966 accuracy: 0.0000
[10/30 15:30:31][INFO] train_test.py:  66: Training: [Epoch   64] loss: 2.9961 accuracy: 0.0000 lr: 0.001000
[10/30 15:30:33][INFO] train_test.py: 101: Evaluation: [Epoch   64] loss: 2.9966 accuracy: 0.0000
[10/30 15:30:54][INFO] train_test.py:  66: Training: [Epoch   65] loss: 2.9961 accuracy: 0.0000 lr: 0.001000
[10/30 15:30:56][INFO] train_test.py: 101: Evaluation: [Epoch   65] loss: 2.9966 accuracy: 0.0000
[10/30 15:31:15][INFO] train_test.py:  66: Training: [Epoch   66] loss: 2.9961 accuracy: 0.0000 lr: 0.001000
[10/30 15:31:17][INFO] train_test.py: 101: Evaluation: [Epoch   66] loss: 2.9966 accuracy: 0.0000
[10/30 15:31:36][INFO] train_test.py:  66: Training: [Epoch   67] loss: 2.9961 accuracy: 0.0000 lr: 0.001000
[10/30 15:31:39][INFO] train_test.py: 101: Evaluation: [Epoch   67] loss: 2.9966 accuracy: 0.0000
[10/30 15:31:59][INFO] train_test.py:  66: Training: [Epoch   68] loss: 2.9961 accuracy: 0.0000 lr: 0.001000
[10/30 15:32:01][INFO] train_test.py: 101: Evaluation: [Epoch   68] loss: 2.9966 accuracy: 0.0000
[10/30 15:32:21][INFO] train_test.py:  66: Training: [Epoch   69] loss: 2.9960 accuracy: 0.0000 lr: 0.001000
[10/30 15:32:23][INFO] train_test.py: 101: Evaluation: [Epoch   69] loss: 2.9966 accuracy: 0.0000
[10/30 15:32:43][INFO] train_test.py:  66: Training: [Epoch   70] loss: 2.9960 accuracy: 0.0000 lr: 0.001000
[10/30 15:32:45][INFO] train_test.py: 101: Evaluation: [Epoch   70] loss: 2.9966 accuracy: 0.0000
[10/30 15:33:05][INFO] train_test.py:  66: Training: [Epoch   71] loss: 2.9960 accuracy: 0.0000 lr: 0.001000
[10/30 15:33:07][INFO] train_test.py: 101: Evaluation: [Epoch   71] loss: 2.9965 accuracy: 0.0000
[10/30 15:33:26][INFO] train_test.py:  66: Training: [Epoch   72] loss: 2.9960 accuracy: 0.0000 lr: 0.001000
[10/30 15:33:29][INFO] train_test.py: 101: Evaluation: [Epoch   72] loss: 2.9965 accuracy: 0.0000
[10/30 15:33:48][INFO] train_test.py:  66: Training: [Epoch   73] loss: 2.9959 accuracy: 0.0000 lr: 0.001000
[10/30 15:33:50][INFO] train_test.py: 101: Evaluation: [Epoch   73] loss: 2.9965 accuracy: 0.0000
[10/30 15:34:10][INFO] train_test.py:  66: Training: [Epoch   74] loss: 2.9959 accuracy: 0.0000 lr: 0.001000
[10/30 15:34:12][INFO] train_test.py: 101: Evaluation: [Epoch   74] loss: 2.9965 accuracy: 0.0000
[10/30 15:34:31][INFO] train_test.py:  66: Training: [Epoch   75] loss: 2.9959 accuracy: 0.0000 lr: 0.001000
[10/30 15:34:33][INFO] train_test.py: 101: Evaluation: [Epoch   75] loss: 2.9965 accuracy: 0.0000
[10/30 15:34:54][INFO] train_test.py:  66: Training: [Epoch   76] loss: 2.9959 accuracy: 0.0000 lr: 0.001000
[10/30 15:34:56][INFO] train_test.py: 101: Evaluation: [Epoch   76] loss: 2.9965 accuracy: 0.0000
[10/30 15:35:16][INFO] train_test.py:  66: Training: [Epoch   77] loss: 2.9959 accuracy: 0.0000 lr: 0.001000
[10/30 15:35:18][INFO] train_test.py: 101: Evaluation: [Epoch   77] loss: 2.9965 accuracy: 0.0000
[10/30 15:35:38][INFO] train_test.py:  66: Training: [Epoch   78] loss: 2.9958 accuracy: 0.0000 lr: 0.001000
[10/30 15:35:40][INFO] train_test.py: 101: Evaluation: [Epoch   78] loss: 2.9965 accuracy: 0.0000
[10/30 15:36:00][INFO] train_test.py:  66: Training: [Epoch   79] loss: 2.9958 accuracy: 0.0000 lr: 0.001000
[10/30 15:36:02][INFO] train_test.py: 101: Evaluation: [Epoch   79] loss: 2.9964 accuracy: 0.0000
[10/30 15:36:22][INFO] train_test.py:  66: Training: [Epoch   80] loss: 2.9958 accuracy: 0.0000 lr: 0.001000
[10/30 15:36:24][INFO] train_test.py: 101: Evaluation: [Epoch   80] loss: 2.9964 accuracy: 0.0000
[10/30 15:36:44][INFO] train_test.py:  66: Training: [Epoch   81] loss: 2.9958 accuracy: 0.0000 lr: 0.001000
[10/30 15:36:46][INFO] train_test.py: 101: Evaluation: [Epoch   81] loss: 2.9964 accuracy: 0.0000
[10/30 15:37:06][INFO] train_test.py:  66: Training: [Epoch   82] loss: 2.9957 accuracy: 0.0000 lr: 0.001000
[10/30 15:37:08][INFO] train_test.py: 101: Evaluation: [Epoch   82] loss: 2.9964 accuracy: 0.0000
[10/30 15:37:28][INFO] train_test.py:  66: Training: [Epoch   83] loss: 2.9957 accuracy: 0.0000 lr: 0.001000
[10/30 15:37:30][INFO] train_test.py: 101: Evaluation: [Epoch   83] loss: 2.9964 accuracy: 0.0000
[10/30 15:37:50][INFO] train_test.py:  66: Training: [Epoch   84] loss: 2.9957 accuracy: 0.0000 lr: 0.001000
[10/30 15:37:52][INFO] train_test.py: 101: Evaluation: [Epoch   84] loss: 2.9964 accuracy: 0.0000
[10/30 15:38:11][INFO] train_test.py:  66: Training: [Epoch   85] loss: 2.9957 accuracy: 0.0000 lr: 0.001000
[10/30 15:38:13][INFO] train_test.py: 101: Evaluation: [Epoch   85] loss: 2.9964 accuracy: 0.0000
[10/30 15:38:33][INFO] train_test.py:  66: Training: [Epoch   86] loss: 2.9956 accuracy: 0.0000 lr: 0.001000
[10/30 15:38:35][INFO] train_test.py: 101: Evaluation: [Epoch   86] loss: 2.9963 accuracy: 0.0000
[10/30 15:38:55][INFO] train_test.py:  66: Training: [Epoch   87] loss: 2.9956 accuracy: 0.0000 lr: 0.001000
[10/30 15:38:57][INFO] train_test.py: 101: Evaluation: [Epoch   87] loss: 2.9963 accuracy: 0.0000
[10/30 15:39:17][INFO] train_test.py:  66: Training: [Epoch   88] loss: 2.9956 accuracy: 0.0000 lr: 0.001000
[10/30 15:39:19][INFO] train_test.py: 101: Evaluation: [Epoch   88] loss: 2.9963 accuracy: 0.0000
[10/30 15:39:40][INFO] train_test.py:  66: Training: [Epoch   89] loss: 2.9956 accuracy: 0.0000 lr: 0.001000
[10/30 15:39:42][INFO] train_test.py: 101: Evaluation: [Epoch   89] loss: 2.9963 accuracy: 0.0000
[10/30 15:40:02][INFO] train_test.py:  66: Training: [Epoch   90] loss: 2.9955 accuracy: 0.0000 lr: 0.001000
[10/30 15:40:04][INFO] train_test.py: 101: Evaluation: [Epoch   90] loss: 2.9963 accuracy: 0.0000
[10/30 15:40:26][INFO] train_test.py:  66: Training: [Epoch   91] loss: 2.9955 accuracy: 0.0000 lr: 0.001000
[10/30 15:40:28][INFO] train_test.py: 101: Evaluation: [Epoch   91] loss: 2.9963 accuracy: 0.0000
[10/30 15:40:48][INFO] train_test.py:  66: Training: [Epoch   92] loss: 2.9955 accuracy: 0.0000 lr: 0.001000
[10/30 15:40:51][INFO] train_test.py: 101: Evaluation: [Epoch   92] loss: 2.9962 accuracy: 0.0000
[10/30 15:41:12][INFO] train_test.py:  66: Training: [Epoch   93] loss: 2.9954 accuracy: 0.0000 lr: 0.001000
[10/30 15:41:14][INFO] train_test.py: 101: Evaluation: [Epoch   93] loss: 2.9962 accuracy: 0.0000
[10/30 15:41:34][INFO] train_test.py:  66: Training: [Epoch   94] loss: 2.9954 accuracy: 0.0000 lr: 0.001000
[10/30 15:41:37][INFO] train_test.py: 101: Evaluation: [Epoch   94] loss: 2.9962 accuracy: 0.0000
[10/30 15:41:58][INFO] train_test.py:  66: Training: [Epoch   95] loss: 2.9954 accuracy: 0.0000 lr: 0.001000
[10/30 15:42:00][INFO] train_test.py: 101: Evaluation: [Epoch   95] loss: 2.9962 accuracy: 0.0000
[10/30 15:42:21][INFO] train_test.py:  66: Training: [Epoch   96] loss: 2.9954 accuracy: 0.0000 lr: 0.001000
[10/30 15:42:23][INFO] train_test.py: 101: Evaluation: [Epoch   96] loss: 2.9962 accuracy: 0.0000
[10/30 15:42:43][INFO] train_test.py:  66: Training: [Epoch   97] loss: 2.9953 accuracy: 0.0000 lr: 0.001000
[10/30 15:42:45][INFO] train_test.py: 101: Evaluation: [Epoch   97] loss: 2.9962 accuracy: 0.0000
[10/30 15:43:06][INFO] train_test.py:  66: Training: [Epoch   98] loss: 2.9953 accuracy: 0.0000 lr: 0.001000
[10/30 15:43:08][INFO] train_test.py: 101: Evaluation: [Epoch   98] loss: 2.9961 accuracy: 0.0000
[10/30 15:43:30][INFO] train_test.py:  66: Training: [Epoch   99] loss: 2.9953 accuracy: 0.0000 lr: 0.001000
[10/30 15:43:32][INFO] train_test.py: 101: Evaluation: [Epoch   99] loss: 2.9961 accuracy: 0.0000
[10/30 15:43:53][INFO] train_test.py:  66: Training: [Epoch  100] loss: 2.9952 accuracy: 0.0000 lr: 0.001000
[10/30 15:43:55][INFO] train_test.py: 101: Evaluation: [Epoch  100] loss: 2.9961 accuracy: 0.0000
[10/30 15:44:18][INFO] train_test.py:  66: Training: [Epoch  101] loss: 2.9952 accuracy: 0.0000 lr: 0.001000
[10/30 15:44:20][INFO] train_test.py: 101: Evaluation: [Epoch  101] loss: 2.9961 accuracy: 0.0000
[10/30 15:44:41][INFO] train_test.py:  66: Training: [Epoch  102] loss: 2.9952 accuracy: 0.0000 lr: 0.001000
[10/30 15:44:43][INFO] train_test.py: 101: Evaluation: [Epoch  102] loss: 2.9961 accuracy: 0.0000
[10/30 15:45:05][INFO] train_test.py:  66: Training: [Epoch  103] loss: 2.9951 accuracy: 0.0000 lr: 0.001000
[10/30 15:45:07][INFO] train_test.py: 101: Evaluation: [Epoch  103] loss: 2.9961 accuracy: 0.0000
[10/30 15:45:29][INFO] train_test.py:  66: Training: [Epoch  104] loss: 2.9951 accuracy: 0.0000 lr: 0.001000
[10/30 15:45:31][INFO] train_test.py: 101: Evaluation: [Epoch  104] loss: 2.9960 accuracy: 0.0000
[10/30 15:45:53][INFO] train_test.py:  66: Training: [Epoch  105] loss: 2.9951 accuracy: 0.0000 lr: 0.001000
[10/30 15:45:55][INFO] train_test.py: 101: Evaluation: [Epoch  105] loss: 2.9960 accuracy: 0.0000
[10/30 15:46:17][INFO] train_test.py:  66: Training: [Epoch  106] loss: 2.9950 accuracy: 0.0000 lr: 0.001000
[10/30 15:46:19][INFO] train_test.py: 101: Evaluation: [Epoch  106] loss: 2.9960 accuracy: 0.0000
[10/30 15:46:40][INFO] train_test.py:  66: Training: [Epoch  107] loss: 2.9950 accuracy: 0.0000 lr: 0.001000
[10/30 15:46:42][INFO] train_test.py: 101: Evaluation: [Epoch  107] loss: 2.9960 accuracy: 0.0000
[10/30 15:47:04][INFO] train_test.py:  66: Training: [Epoch  108] loss: 2.9950 accuracy: 0.0000 lr: 0.001000
[10/30 15:47:06][INFO] train_test.py: 101: Evaluation: [Epoch  108] loss: 2.9960 accuracy: 0.0000
[10/30 15:47:28][INFO] train_test.py:  66: Training: [Epoch  109] loss: 2.9949 accuracy: 0.0000 lr: 0.001000
[10/30 15:47:30][INFO] train_test.py: 101: Evaluation: [Epoch  109] loss: 2.9959 accuracy: 0.0000
[10/30 15:47:51][INFO] train_test.py:  66: Training: [Epoch  110] loss: 2.9949 accuracy: 0.0000 lr: 0.001000
[10/30 15:47:53][INFO] train_test.py: 101: Evaluation: [Epoch  110] loss: 2.9959 accuracy: 0.0000
[10/30 15:48:15][INFO] train_test.py:  66: Training: [Epoch  111] loss: 2.9949 accuracy: 0.0000 lr: 0.001000
[10/30 15:48:17][INFO] train_test.py: 101: Evaluation: [Epoch  111] loss: 2.9959 accuracy: 0.0000
[10/30 15:48:38][INFO] train_test.py:  66: Training: [Epoch  112] loss: 2.9948 accuracy: 0.0000 lr: 0.001000
[10/30 15:48:40][INFO] train_test.py: 101: Evaluation: [Epoch  112] loss: 2.9959 accuracy: 0.0000
[10/30 15:49:01][INFO] train_test.py:  66: Training: [Epoch  113] loss: 2.9948 accuracy: 0.0000 lr: 0.001000
[10/30 15:49:04][INFO] train_test.py: 101: Evaluation: [Epoch  113] loss: 2.9958 accuracy: 0.0000
[10/30 15:49:25][INFO] train_test.py:  66: Training: [Epoch  114] loss: 2.9947 accuracy: 0.0000 lr: 0.001000
[10/30 15:49:27][INFO] train_test.py: 101: Evaluation: [Epoch  114] loss: 2.9958 accuracy: 0.0000
[10/30 15:49:49][INFO] train_test.py:  66: Training: [Epoch  115] loss: 2.9947 accuracy: 0.0000 lr: 0.001000
[10/30 15:49:52][INFO] train_test.py: 101: Evaluation: [Epoch  115] loss: 2.9958 accuracy: 0.0000
[10/30 15:50:12][INFO] train_test.py:  66: Training: [Epoch  116] loss: 2.9947 accuracy: 0.0000 lr: 0.001000
[10/30 15:50:14][INFO] train_test.py: 101: Evaluation: [Epoch  116] loss: 2.9958 accuracy: 0.0000
[10/30 15:50:35][INFO] train_test.py:  66: Training: [Epoch  117] loss: 2.9946 accuracy: 0.0000 lr: 0.001000
[10/30 15:50:37][INFO] train_test.py: 101: Evaluation: [Epoch  117] loss: 2.9957 accuracy: 0.0000
[10/30 15:50:59][INFO] train_test.py:  66: Training: [Epoch  118] loss: 2.9946 accuracy: 0.0000 lr: 0.001000
[10/30 15:51:01][INFO] train_test.py: 101: Evaluation: [Epoch  118] loss: 2.9957 accuracy: 0.0000
[10/30 15:51:22][INFO] train_test.py:  66: Training: [Epoch  119] loss: 2.9945 accuracy: 0.0000 lr: 0.001000
[10/30 15:51:24][INFO] train_test.py: 101: Evaluation: [Epoch  119] loss: 2.9957 accuracy: 0.0000
[10/30 15:51:45][INFO] train_test.py:  66: Training: [Epoch  120] loss: 2.9945 accuracy: 0.0000 lr: 0.001000
[10/30 15:51:48][INFO] train_test.py: 101: Evaluation: [Epoch  120] loss: 2.9957 accuracy: 0.0000
[10/30 15:52:09][INFO] train_test.py:  66: Training: [Epoch  121] loss: 2.9944 accuracy: 0.0000 lr: 0.001000
[10/30 15:52:11][INFO] train_test.py: 101: Evaluation: [Epoch  121] loss: 2.9956 accuracy: 0.0000
[10/30 15:52:32][INFO] train_test.py:  66: Training: [Epoch  122] loss: 2.9944 accuracy: 0.0000 lr: 0.001000
[10/30 15:52:35][INFO] train_test.py: 101: Evaluation: [Epoch  122] loss: 2.9956 accuracy: 0.0000
[10/30 15:52:56][INFO] train_test.py:  66: Training: [Epoch  123] loss: 2.9943 accuracy: 0.0000 lr: 0.001000
[10/30 15:52:58][INFO] train_test.py: 101: Evaluation: [Epoch  123] loss: 2.9956 accuracy: 0.0000
[10/30 15:53:19][INFO] train_test.py:  66: Training: [Epoch  124] loss: 2.9943 accuracy: 0.0000 lr: 0.001000
[10/30 15:53:21][INFO] train_test.py: 101: Evaluation: [Epoch  124] loss: 2.9956 accuracy: 0.0000
[10/30 15:53:45][INFO] train_test.py:  66: Training: [Epoch  125] loss: 2.9943 accuracy: 0.0000 lr: 0.001000
[10/30 15:53:47][INFO] train_test.py: 101: Evaluation: [Epoch  125] loss: 2.9955 accuracy: 0.0000
[10/30 15:54:10][INFO] train_test.py:  66: Training: [Epoch  126] loss: 2.9942 accuracy: 0.0000 lr: 0.001000
[10/30 15:54:12][INFO] train_test.py: 101: Evaluation: [Epoch  126] loss: 2.9955 accuracy: 0.0000
[10/30 15:54:34][INFO] train_test.py:  66: Training: [Epoch  127] loss: 2.9942 accuracy: 0.0000 lr: 0.001000
[10/30 15:54:36][INFO] train_test.py: 101: Evaluation: [Epoch  127] loss: 2.9955 accuracy: 0.0000
[10/30 15:54:58][INFO] train_test.py:  66: Training: [Epoch  128] loss: 2.9941 accuracy: 0.0000 lr: 0.001000
[10/30 15:55:00][INFO] train_test.py: 101: Evaluation: [Epoch  128] loss: 2.9954 accuracy: 0.0000
[10/30 15:55:21][INFO] train_test.py:  66: Training: [Epoch  129] loss: 2.9941 accuracy: 0.0000 lr: 0.001000
[10/30 15:55:24][INFO] train_test.py: 101: Evaluation: [Epoch  129] loss: 2.9954 accuracy: 0.0000
[10/30 15:55:45][INFO] train_test.py:  66: Training: [Epoch  130] loss: 2.9940 accuracy: 0.0000 lr: 0.001000
[10/30 15:55:47][INFO] train_test.py: 101: Evaluation: [Epoch  130] loss: 2.9954 accuracy: 0.0000
[10/30 15:56:10][INFO] train_test.py:  66: Training: [Epoch  131] loss: 2.9939 accuracy: 0.0000 lr: 0.001000
[10/30 15:56:12][INFO] train_test.py: 101: Evaluation: [Epoch  131] loss: 2.9954 accuracy: 0.0000
[10/30 15:56:33][INFO] train_test.py:  66: Training: [Epoch  132] loss: 2.9939 accuracy: 0.0000 lr: 0.001000
[10/30 15:56:35][INFO] train_test.py: 101: Evaluation: [Epoch  132] loss: 2.9953 accuracy: 0.0000
[10/30 15:56:59][INFO] train_test.py:  66: Training: [Epoch  133] loss: 2.9938 accuracy: 0.0000 lr: 0.001000
[10/30 15:57:01][INFO] train_test.py: 101: Evaluation: [Epoch  133] loss: 2.9953 accuracy: 0.0000
[10/30 15:57:23][INFO] train_test.py:  66: Training: [Epoch  134] loss: 2.9938 accuracy: 0.1000 lr: 0.001000
[10/30 15:57:25][INFO] train_test.py: 101: Evaluation: [Epoch  134] loss: 2.9953 accuracy: 0.0000
[10/30 15:57:49][INFO] train_test.py:  66: Training: [Epoch  135] loss: 2.9937 accuracy: 0.1000 lr: 0.001000
[10/30 15:57:51][INFO] train_test.py: 101: Evaluation: [Epoch  135] loss: 2.9952 accuracy: 0.0000
[10/30 15:58:15][INFO] train_test.py:  66: Training: [Epoch  136] loss: 2.9937 accuracy: 0.1000 lr: 0.001000
[10/30 15:58:17][INFO] train_test.py: 101: Evaluation: [Epoch  136] loss: 2.9952 accuracy: 0.0000
[10/30 15:58:41][INFO] train_test.py:  66: Training: [Epoch  137] loss: 2.9936 accuracy: 0.2000 lr: 0.001000
[10/30 15:58:43][INFO] train_test.py: 101: Evaluation: [Epoch  137] loss: 2.9951 accuracy: 0.1000
[10/30 15:59:07][INFO] train_test.py:  66: Training: [Epoch  138] loss: 2.9935 accuracy: 0.2000 lr: 0.001000
[10/30 15:59:09][INFO] train_test.py: 101: Evaluation: [Epoch  138] loss: 2.9951 accuracy: 0.2000
[10/30 15:59:30][INFO] train_test.py:  66: Training: [Epoch  139] loss: 2.9935 accuracy: 0.2000 lr: 0.001000
[10/30 15:59:33][INFO] train_test.py: 101: Evaluation: [Epoch  139] loss: 2.9951 accuracy: 0.2000
[10/30 15:59:56][INFO] train_test.py:  66: Training: [Epoch  140] loss: 2.9934 accuracy: 0.2000 lr: 0.001000
[10/30 15:59:59][INFO] train_test.py: 101: Evaluation: [Epoch  140] loss: 2.9950 accuracy: 0.3000
[10/30 16:00:22][INFO] train_test.py:  66: Training: [Epoch  141] loss: 2.9933 accuracy: 0.3000 lr: 0.001000
[10/30 16:00:24][INFO] train_test.py: 101: Evaluation: [Epoch  141] loss: 2.9950 accuracy: 0.3000
[10/30 16:00:47][INFO] train_test.py:  66: Training: [Epoch  142] loss: 2.9933 accuracy: 0.4000 lr: 0.001000
[10/30 16:00:49][INFO] train_test.py: 101: Evaluation: [Epoch  142] loss: 2.9950 accuracy: 0.4000
[10/30 16:01:13][INFO] train_test.py:  66: Training: [Epoch  143] loss: 2.9932 accuracy: 0.5000 lr: 0.001000
[10/30 16:01:16][INFO] train_test.py: 101: Evaluation: [Epoch  143] loss: 2.9949 accuracy: 0.4000
[10/30 16:01:40][INFO] train_test.py:  66: Training: [Epoch  144] loss: 2.9931 accuracy: 0.7000 lr: 0.001000
[10/30 16:01:42][INFO] train_test.py: 101: Evaluation: [Epoch  144] loss: 2.9949 accuracy: 0.5000
[10/30 16:02:04][INFO] train_test.py:  66: Training: [Epoch  145] loss: 2.9930 accuracy: 0.7000 lr: 0.001000
[10/30 16:02:06][INFO] train_test.py: 101: Evaluation: [Epoch  145] loss: 2.9948 accuracy: 0.6000
[10/30 16:02:30][INFO] train_test.py:  66: Training: [Epoch  146] loss: 2.9930 accuracy: 0.8000 lr: 0.001000
[10/30 16:02:32][INFO] train_test.py: 101: Evaluation: [Epoch  146] loss: 2.9948 accuracy: 0.6000
[10/30 16:02:55][INFO] train_test.py:  66: Training: [Epoch  147] loss: 2.9929 accuracy: 0.8000 lr: 0.001000
[10/30 16:02:57][INFO] train_test.py: 101: Evaluation: [Epoch  147] loss: 2.9947 accuracy: 0.6000
[10/30 16:03:21][INFO] train_test.py:  66: Training: [Epoch  148] loss: 2.9928 accuracy: 0.9000 lr: 0.001000
[10/30 16:03:23][INFO] train_test.py: 101: Evaluation: [Epoch  148] loss: 2.9947 accuracy: 0.6000
[10/30 16:03:48][INFO] train_test.py:  66: Training: [Epoch  149] loss: 2.9927 accuracy: 0.9000 lr: 0.001000
[10/30 16:03:50][INFO] train_test.py: 101: Evaluation: [Epoch  149] loss: 2.9946 accuracy: 0.6000
[10/30 16:04:13][INFO] train_test.py:  66: Training: [Epoch  150] loss: 2.9926 accuracy: 0.9000 lr: 0.001000
[10/30 16:04:15][INFO] train_test.py: 101: Evaluation: [Epoch  150] loss: 2.9946 accuracy: 0.6000
[10/30 16:04:39][INFO] train_test.py:  66: Training: [Epoch  151] loss: 2.9926 accuracy: 0.9000 lr: 0.001000
[10/30 16:04:41][INFO] train_test.py: 101: Evaluation: [Epoch  151] loss: 2.9945 accuracy: 0.6000
[10/30 16:05:07][INFO] train_test.py:  66: Training: [Epoch  152] loss: 2.9925 accuracy: 0.9000 lr: 0.001000
[10/30 16:05:09][INFO] train_test.py: 101: Evaluation: [Epoch  152] loss: 2.9945 accuracy: 0.6000
[10/30 16:05:32][INFO] train_test.py:  66: Training: [Epoch  153] loss: 2.9924 accuracy: 0.9000 lr: 0.001000
[10/30 16:05:34][INFO] train_test.py: 101: Evaluation: [Epoch  153] loss: 2.9944 accuracy: 0.6000
[10/30 16:06:00][INFO] train_test.py:  66: Training: [Epoch  154] loss: 2.9923 accuracy: 0.9000 lr: 0.001000
[10/30 16:06:02][INFO] train_test.py: 101: Evaluation: [Epoch  154] loss: 2.9944 accuracy: 0.6000
[10/30 16:06:25][INFO] train_test.py:  66: Training: [Epoch  155] loss: 2.9922 accuracy: 0.9000 lr: 0.001000
[10/30 16:06:27][INFO] train_test.py: 101: Evaluation: [Epoch  155] loss: 2.9943 accuracy: 0.6000
[10/30 16:06:46][INFO] train_test.py:  66: Training: [Epoch  156] loss: 2.9921 accuracy: 0.9000 lr: 0.001000
[10/30 16:06:48][INFO] train_test.py: 101: Evaluation: [Epoch  156] loss: 2.9943 accuracy: 0.6000
[10/30 16:07:07][INFO] train_test.py:  66: Training: [Epoch  157] loss: 2.9920 accuracy: 1.0000 lr: 0.001000
[10/30 16:07:09][INFO] train_test.py: 101: Evaluation: [Epoch  157] loss: 2.9942 accuracy: 0.6000
[10/30 16:07:27][INFO] train_test.py:  66: Training: [Epoch  158] loss: 2.9919 accuracy: 1.0000 lr: 0.001000
[10/30 16:07:29][INFO] train_test.py: 101: Evaluation: [Epoch  158] loss: 2.9941 accuracy: 0.6000
[10/30 16:07:47][INFO] train_test.py:  66: Training: [Epoch  159] loss: 2.9918 accuracy: 1.0000 lr: 0.001000
[10/30 16:07:49][INFO] train_test.py: 101: Evaluation: [Epoch  159] loss: 2.9941 accuracy: 0.6000
[10/30 16:08:07][INFO] train_test.py:  66: Training: [Epoch  160] loss: 2.9917 accuracy: 1.0000 lr: 0.001000
[10/30 16:08:09][INFO] train_test.py: 101: Evaluation: [Epoch  160] loss: 2.9940 accuracy: 0.6000
[10/30 16:08:28][INFO] train_test.py:  66: Training: [Epoch  161] loss: 2.9916 accuracy: 1.0000 lr: 0.001000
[10/30 16:08:31][INFO] train_test.py: 101: Evaluation: [Epoch  161] loss: 2.9940 accuracy: 0.6000
[10/30 16:08:49][INFO] train_test.py:  66: Training: [Epoch  162] loss: 2.9914 accuracy: 1.0000 lr: 0.001000
[10/30 16:08:51][INFO] train_test.py: 101: Evaluation: [Epoch  162] loss: 2.9939 accuracy: 0.6000
[10/30 16:09:11][INFO] train_test.py:  66: Training: [Epoch  163] loss: 2.9913 accuracy: 1.0000 lr: 0.001000
[10/30 16:09:13][INFO] train_test.py: 101: Evaluation: [Epoch  163] loss: 2.9938 accuracy: 0.6000
[10/30 16:09:31][INFO] train_test.py:  66: Training: [Epoch  164] loss: 2.9912 accuracy: 1.0000 lr: 0.001000
[10/30 16:09:33][INFO] train_test.py: 101: Evaluation: [Epoch  164] loss: 2.9937 accuracy: 0.6000
[10/30 16:09:51][INFO] train_test.py:  66: Training: [Epoch  165] loss: 2.9911 accuracy: 1.0000 lr: 0.001000
[10/30 16:09:53][INFO] train_test.py: 101: Evaluation: [Epoch  165] loss: 2.9937 accuracy: 0.6000
[10/30 16:10:12][INFO] train_test.py:  66: Training: [Epoch  166] loss: 2.9909 accuracy: 1.0000 lr: 0.001000
[10/30 16:10:14][INFO] train_test.py: 101: Evaluation: [Epoch  166] loss: 2.9936 accuracy: 0.6000
[10/30 16:10:34][INFO] train_test.py:  66: Training: [Epoch  167] loss: 2.9908 accuracy: 1.0000 lr: 0.001000
[10/30 16:10:36][INFO] train_test.py: 101: Evaluation: [Epoch  167] loss: 2.9935 accuracy: 0.6000
[10/30 16:10:55][INFO] train_test.py:  66: Training: [Epoch  168] loss: 2.9907 accuracy: 1.0000 lr: 0.001000
[10/30 16:10:57][INFO] train_test.py: 101: Evaluation: [Epoch  168] loss: 2.9934 accuracy: 0.6000
[10/30 16:11:16][INFO] train_test.py:  66: Training: [Epoch  169] loss: 2.9905 accuracy: 1.0000 lr: 0.001000
[10/30 16:11:18][INFO] train_test.py: 101: Evaluation: [Epoch  169] loss: 2.9933 accuracy: 0.6000
[10/30 16:11:37][INFO] train_test.py:  66: Training: [Epoch  170] loss: 2.9904 accuracy: 1.0000 lr: 0.001000
[10/30 16:11:39][INFO] train_test.py: 101: Evaluation: [Epoch  170] loss: 2.9932 accuracy: 0.6000
[10/30 16:11:58][INFO] train_test.py:  66: Training: [Epoch  171] loss: 2.9902 accuracy: 1.0000 lr: 0.001000
[10/30 16:12:00][INFO] train_test.py: 101: Evaluation: [Epoch  171] loss: 2.9932 accuracy: 0.6000
[10/30 16:12:19][INFO] train_test.py:  66: Training: [Epoch  172] loss: 2.9901 accuracy: 1.0000 lr: 0.001000
[10/30 16:12:21][INFO] train_test.py: 101: Evaluation: [Epoch  172] loss: 2.9931 accuracy: 0.6000
[10/30 16:12:40][INFO] train_test.py:  66: Training: [Epoch  173] loss: 2.9899 accuracy: 1.0000 lr: 0.001000
[10/30 16:12:42][INFO] train_test.py: 101: Evaluation: [Epoch  173] loss: 2.9930 accuracy: 0.6000
[10/30 16:13:01][INFO] train_test.py:  66: Training: [Epoch  174] loss: 2.9897 accuracy: 1.0000 lr: 0.001000
[10/30 16:13:03][INFO] train_test.py: 101: Evaluation: [Epoch  174] loss: 2.9929 accuracy: 0.6000
[10/30 16:13:21][INFO] train_test.py:  66: Training: [Epoch  175] loss: 2.9896 accuracy: 1.0000 lr: 0.001000
[10/30 16:13:23][INFO] train_test.py: 101: Evaluation: [Epoch  175] loss: 2.9928 accuracy: 0.6000
[10/30 16:13:41][INFO] train_test.py:  66: Training: [Epoch  176] loss: 2.9894 accuracy: 1.0000 lr: 0.001000
[10/30 16:13:43][INFO] train_test.py: 101: Evaluation: [Epoch  176] loss: 2.9926 accuracy: 0.6000
[10/30 16:14:03][INFO] train_test.py:  66: Training: [Epoch  177] loss: 2.9892 accuracy: 1.0000 lr: 0.001000
[10/30 16:14:05][INFO] train_test.py: 101: Evaluation: [Epoch  177] loss: 2.9925 accuracy: 0.6000
[10/30 16:14:24][INFO] train_test.py:  66: Training: [Epoch  178] loss: 2.9890 accuracy: 1.0000 lr: 0.001000
[10/30 16:14:26][INFO] train_test.py: 101: Evaluation: [Epoch  178] loss: 2.9924 accuracy: 0.6000
[10/30 16:14:44][INFO] train_test.py:  66: Training: [Epoch  179] loss: 2.9888 accuracy: 1.0000 lr: 0.001000
[10/30 16:14:46][INFO] train_test.py: 101: Evaluation: [Epoch  179] loss: 2.9923 accuracy: 0.6000
[10/30 16:15:05][INFO] train_test.py:  66: Training: [Epoch  180] loss: 2.9886 accuracy: 1.0000 lr: 0.001000
[10/30 16:15:07][INFO] train_test.py: 101: Evaluation: [Epoch  180] loss: 2.9922 accuracy: 0.6000
[10/30 16:15:26][INFO] train_test.py:  66: Training: [Epoch  181] loss: 2.9883 accuracy: 1.0000 lr: 0.001000
[10/30 16:15:28][INFO] train_test.py: 101: Evaluation: [Epoch  181] loss: 2.9920 accuracy: 0.6000
[10/30 16:15:46][INFO] train_test.py:  66: Training: [Epoch  182] loss: 2.9881 accuracy: 1.0000 lr: 0.001000
[10/30 16:15:48][INFO] train_test.py: 101: Evaluation: [Epoch  182] loss: 2.9919 accuracy: 0.6000
[10/30 16:16:06][INFO] train_test.py:  66: Training: [Epoch  183] loss: 2.9879 accuracy: 1.0000 lr: 0.001000
[10/30 16:16:08][INFO] train_test.py: 101: Evaluation: [Epoch  183] loss: 2.9917 accuracy: 0.6000
[10/30 16:16:26][INFO] train_test.py:  66: Training: [Epoch  184] loss: 2.9876 accuracy: 1.0000 lr: 0.001000
[10/30 16:16:28][INFO] train_test.py: 101: Evaluation: [Epoch  184] loss: 2.9916 accuracy: 0.6000
[10/30 16:16:48][INFO] train_test.py:  66: Training: [Epoch  185] loss: 2.9874 accuracy: 1.0000 lr: 0.001000
[10/30 16:16:50][INFO] train_test.py: 101: Evaluation: [Epoch  185] loss: 2.9914 accuracy: 0.6000
[10/30 16:17:09][INFO] train_test.py:  66: Training: [Epoch  186] loss: 2.9871 accuracy: 1.0000 lr: 0.001000
[10/30 16:17:11][INFO] train_test.py: 101: Evaluation: [Epoch  186] loss: 2.9913 accuracy: 0.6000
[10/30 16:17:30][INFO] train_test.py:  66: Training: [Epoch  187] loss: 2.9868 accuracy: 1.0000 lr: 0.001000
[10/30 16:17:32][INFO] train_test.py: 101: Evaluation: [Epoch  187] loss: 2.9911 accuracy: 0.6000
[10/30 16:17:51][INFO] train_test.py:  66: Training: [Epoch  188] loss: 2.9865 accuracy: 1.0000 lr: 0.001000
[10/30 16:17:53][INFO] train_test.py: 101: Evaluation: [Epoch  188] loss: 2.9909 accuracy: 0.6000
[10/30 16:18:12][INFO] train_test.py:  66: Training: [Epoch  189] loss: 2.9862 accuracy: 1.0000 lr: 0.001000
[10/30 16:18:14][INFO] train_test.py: 101: Evaluation: [Epoch  189] loss: 2.9907 accuracy: 0.6000
[10/30 16:18:33][INFO] train_test.py:  66: Training: [Epoch  190] loss: 2.9859 accuracy: 1.0000 lr: 0.001000
[10/30 16:18:35][INFO] train_test.py: 101: Evaluation: [Epoch  190] loss: 2.9905 accuracy: 0.6000
[10/30 16:18:54][INFO] train_test.py:  66: Training: [Epoch  191] loss: 2.9855 accuracy: 1.0000 lr: 0.001000
[10/30 16:18:56][INFO] train_test.py: 101: Evaluation: [Epoch  191] loss: 2.9903 accuracy: 0.6000
[10/30 16:19:14][INFO] train_test.py:  66: Training: [Epoch  192] loss: 2.9852 accuracy: 1.0000 lr: 0.001000
[10/30 16:19:16][INFO] train_test.py: 101: Evaluation: [Epoch  192] loss: 2.9901 accuracy: 0.6000
[10/30 16:19:35][INFO] train_test.py:  66: Training: [Epoch  193] loss: 2.9848 accuracy: 1.0000 lr: 0.001000
[10/30 16:19:37][INFO] train_test.py: 101: Evaluation: [Epoch  193] loss: 2.9899 accuracy: 0.6000
[10/30 16:19:56][INFO] train_test.py:  66: Training: [Epoch  194] loss: 2.9844 accuracy: 1.0000 lr: 0.001000
[10/30 16:19:58][INFO] train_test.py: 101: Evaluation: [Epoch  194] loss: 2.9896 accuracy: 0.6000
[10/30 16:20:17][INFO] train_test.py:  66: Training: [Epoch  195] loss: 2.9839 accuracy: 1.0000 lr: 0.001000
[10/30 16:20:19][INFO] train_test.py: 101: Evaluation: [Epoch  195] loss: 2.9894 accuracy: 0.6000
[10/30 16:20:37][INFO] train_test.py:  66: Training: [Epoch  196] loss: 2.9835 accuracy: 1.0000 lr: 0.001000
[10/30 16:20:39][INFO] train_test.py: 101: Evaluation: [Epoch  196] loss: 2.9891 accuracy: 0.6000
[10/30 16:20:57][INFO] train_test.py:  66: Training: [Epoch  197] loss: 2.9830 accuracy: 1.0000 lr: 0.001000
[10/30 16:20:59][INFO] train_test.py: 101: Evaluation: [Epoch  197] loss: 2.9888 accuracy: 0.6000
[10/30 16:21:18][INFO] train_test.py:  66: Training: [Epoch  198] loss: 2.9825 accuracy: 1.0000 lr: 0.001000
[10/30 16:21:20][INFO] train_test.py: 101: Evaluation: [Epoch  198] loss: 2.9885 accuracy: 0.6000
[10/30 16:21:40][INFO] train_test.py:  66: Training: [Epoch  199] loss: 2.9820 accuracy: 1.0000 lr: 0.001000
[10/30 16:21:42][INFO] train_test.py: 101: Evaluation: [Epoch  199] loss: 2.9881 accuracy: 0.6000
[10/30 16:22:01][INFO] train_test.py:  66: Training: [Epoch  200] loss: 2.9814 accuracy: 1.0000 lr: 0.001000
[10/30 16:22:03][INFO] train_test.py: 101: Evaluation: [Epoch  200] loss: 2.9878 accuracy: 0.6000
[10/30 16:22:19][INFO] train_test.py: 166: Trained with 200 epochs, lr = 0.001, batchsize = 10, momentum = 0.5 with max validation accuracy of 0.60 done in 1:13:39
[10/30 16:22:19][DEBUG] font_manager.py: 1334: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntegralsUpD-Regular.otf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizeTwoSym-Bold.otf) normal normal 700 normal>) = 10.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal 200 normal>) = 0.24
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXNonUnicode' (STIXNonUnicode-Regular.otf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-DemiLight.ttc) normal normal 350 normal>) = 10.0975
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'NanumMyeongjo' (NanumMyeongjo.ttf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'NanumGothic' (NanumGothicBold.ttf) normal normal 600 normal>) = 10.24
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIX' (STIX-BoldItalic.otf) italic normal 700 normal>) = 11.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Padauk Book' (Padauk-book.ttf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 500 normal>) = 10.145
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 500 normal>) = 11.145
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXIntegralsSm' (STIXIntegralsSm-Regular.otf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXGeneral' (STIXGeneral-BoldItalic.otf) italic normal 700 normal>) = 11.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 500 normal>) = 10.145
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXVariants' (STIXVariants-Regular.otf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntegralsUpD-Bold.otf) normal normal 700 normal>) = 10.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIX' (STIX-Regular.otf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXIntegralsUp' (STIXIntegralsUp-Regular.otf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntegralsUpSm-Regular.otf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXIntegralsSm' (STIXIntegralsSm-Bold.otf) normal normal 700 normal>) = 10.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Padauk Book' (Padauk-bookbold.ttf) normal normal 700 normal>) = 10.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal 700 condensed>) = 0.5349999999999999
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXNonUnicode' (STIXNonUnicode-BoldItalic.otf) italic normal 700 normal>) = 11.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-R.ttf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizeThreeSym-Regular.otf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXIntegralsD' (STIXIntegralsD-Bold.otf) normal normal 700 normal>) = 10.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeFourSym' (STIXSizeFourSym-Bold.otf) normal normal 700 normal>) = 10.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal 700 condensed>) = 1.535
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXGeneral' (STIXGeneral-Bold.otf) normal normal 700 normal>) = 10.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizeFiveSym-Regular.otf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXNonUnicode' (STIXNonUnicode-Bold.otf) normal normal 700 normal>) = 10.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 500 normal>) = 10.145
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'NanumMyeongjo' (NanumMyeongjoBold.ttf) normal normal 600 normal>) = 10.24
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizeTwoSym-Regular.otf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXGeneral' (STIXGeneral-Regular.otf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizeThreeSym-Bold.otf) normal normal 700 normal>) = 10.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXIntegralsUp' (STIXIntegralsUp-Bold.otf) normal normal 700 normal>) = 10.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeFourSym' (STIXSizeFourSym-Regular.otf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Padauk' (Padauk.ttf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 500 normal>) = 10.145
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIX' (STIX-Italic.otf) italic normal 400 normal>) = 11.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeOneSym' (STIXSizeOneSym-Regular.otf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'NanumBarunGothic' (NanumBarunGothic.ttf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXNonUnicode' (STIXNonUnicode-Italic.otf) italic normal 400 normal>) = 11.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'NanumBarunGothic' (NanumBarunGothicBold.ttf) normal normal 600 normal>) = 10.24
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 500 normal>) = 11.145
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'TakaoPGothic' (fonts-japanese-gothic.ttf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXVariants' (STIXVariants-Bold.otf) normal normal 700 normal>) = 10.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Medium.ttc) normal normal 500 normal>) = 10.145
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Symbola' (Symbola_hint.ttf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Lohit Punjabi' (Lohit-Punjabi.ttf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXGeneral' (STIXGeneral-Italic.otf) italic normal 400 normal>) = 11.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Black.ttc) normal normal 900 normal>) = 10.525
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'NanumGothic' (NanumGothic.ttf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Thin.ttc) normal normal 250 normal>) = 10.1925
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Padauk' (Padauk-bold.ttf) normal normal 700 normal>) = 10.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 0.25
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 500 normal>) = 10.145
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 500 normal>) = 11.145
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIX' (STIX-Bold.otf) normal normal 700 normal>) = 10.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIX Math' (STIXMath-Regular.otf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal 700 condensed>) = 10.535
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 500 normal>) = 11.145
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXSizeOneSym' (STIXSizeOneSym-Bold.otf) normal normal 700 normal>) = 10.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntegralsUpSm-Bold.otf) normal normal 700 normal>) = 10.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Light.ttc) normal normal 300 normal>) = 10.145
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'TakaoPGothic' (TakaoPGothic.ttf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.25
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 1.25
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'STIXIntegralsD' (STIXIntegralsD-Regular.otf) normal normal 400 normal>) = 10.05
[10/30 16:22:19][DEBUG] font_manager.py: 1346: findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
[10/30 16:22:19][DEBUG] font_manager.py: 1367: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/opt/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
